{"version":3,"sources":["webpack://date-picker/./src/docs/map_days.js","webpack://date-picker/./src/pages/map-days.js"],"names":["MapDays","translate","language","otherProps","codeEnd","Code","title","jsx","style","color","mapDays","date","today","day","code","selectedDate","currentMonth","isSameDate","props","borderRadius","backgroundColor","month","index","fontWeight","border","description","includes","weekDay","className","Link","to","disabled","onClick","alert","hidden","result","dayOfBeginning","pageContext","doc"],"mappings":"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","file":"component---src-pages-map-days-js-d7c9d8f2f4fab2106ab0.js","sourcesContent":["import React from \"react\";\r\nimport DatePicker, { Calendar } from \"../../../build/index\";\r\nimport { Link } from \"gatsby\";\r\n\r\nexport default function MapDays(\r\n  translate,\r\n  language,\r\n  otherProps,\r\n  codeEnd,\r\n  Code\r\n) {\r\n  const description = {\r\n    title: \"Descriptions\",\r\n    jsx: (\r\n      <div>\r\n        <p>{translate(\"map_days_description_1\")}</p>\r\n        <p>{translate(\"map_days_description_2\")}</p>\r\n        <Code>\r\n          {`<DatePicker\r\n  mapDays={object => {\r\n    return { props }\r\n  }}\r\n/>`}\r\n        </Code>\r\n        <p>{translate(\"map_days_description_3\")}</p>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>{translate(\"Property\")}</th>\r\n              <th>{translate(\"Type\")}</th>\r\n              <th>{translate(\"Descriptions\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>date</td>\r\n              <td>DateObject</td>\r\n              <td>\r\n                <p>{translate(\"map_days_description_4\")}</p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>today</td>\r\n              <td>DateObject</td>\r\n              <td></td>\r\n            </tr>\r\n            <tr>\r\n              <td>selectedDate</td>\r\n              <td>{translate(\"DateObject or Array\")}</td>\r\n              <td>\r\n                <p>{translate(\"map_days_description_5\")}</p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>currentMonth</td>\r\n              <td>Object</td>\r\n              <td>\r\n                <p>{translate(\"map_days_description_6\")}</p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>isSameDate</td>\r\n              <td>Function</td>\r\n              <td>\r\n                <p>{translate(\"map_days_description_7\")}</p>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <Code title=\"map_days_description_8\">\r\n          {`{ date, today, selectedDate, currentMonth, isSameDate }`}\r\n        </Code>\r\n        <p style={{ color: \"red\" }}>{translate(\"map_days_description_9\")}</p>\r\n        <Code title=\"map_days_description_10\">\r\n          {`<Calendar\r\n  mapDays={({ date, today }) => {\r\n    date.day = today.day\r\n  }}\r\n${\r\n  language === \"en\"\r\n    ? \"/>\"\r\n    : `  calendar=\"persian\"\r\n  locale=\"fa\"\r\n/>`\r\n}`}\r\n        </Code>\r\n        <Calendar\r\n          mapDays={({ date, today }) => {\r\n            date.day = today.day;\r\n          }}\r\n          {...otherProps}\r\n        />\r\n        <p>{translate(\"map_days_description_11\")}</p>\r\n        <ul>\r\n          <li>disabled</li>\r\n          <li>hidden</li>\r\n        </ul>\r\n        <p>{translate(\"map_days_description_12\")}</p>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const style = {\r\n    title: \"Styling Days\",\r\n    code: `<DatePicker\r\n  mapDays={({ date, today, selectedDate, currentMonth, isSameDate }) => {\r\n    let props = {}\r\n    \r\n    props.style = {\r\n      borderRadius: \"3px\",\r\n      backgroundColor: date.month.index === currentMonth.index ? \"#ccc\" : \"\"\r\n    }\r\n\r\n    if (isSameDate(date, today)) props.style.color = \"green\"\r\n    if (isSameDate(date, selectedDate)) props.style = {\r\n      ...props.style,\r\n      color: \"#0074d9\",\r\n      backgroundColor: \"#a5a5a5\",\r\n      fontWeight: \"bold\",\r\n      border: \"1px solid #777\"\r\n    }\r\n\r\n    return props\r\n  }}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        mapDays={({ date, today, selectedDate, currentMonth, isSameDate }) => {\r\n          let props = {};\r\n\r\n          props.style = {\r\n            borderRadius: \"3px\",\r\n            backgroundColor:\r\n              date.month.index === currentMonth.index ? \"#ccc\" : \"\",\r\n          };\r\n\r\n          if (isSameDate(date, today)) props.style.color = \"green\";\r\n          if (isSameDate(date, selectedDate))\r\n            props.style = {\r\n              ...props.style,\r\n              color: \"#0074d9\",\r\n              backgroundColor: \"#a5a5a5\",\r\n              fontWeight: \"bold\",\r\n              border: \"1px solid #777\",\r\n            };\r\n\r\n          return props;\r\n        }}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n  const weekends = {\r\n    title: \"Styling Weekends\",\r\n    description: \"map_days_weekends\",\r\n    code: `<DatePicker\r\n  mapDays={({ date }) => {\r\n    let props = {}\r\n    let isWeekend = ${\r\n      language === \"en\"\r\n        ? \"[0, 6].includes(date.weekDay.index)\"\r\n        : \"date.weekDay.index === 6\"\r\n    }\r\n    \r\n    if (isWeekend) props.className = \"highlight highlight-red\"\r\n    \r\n    return props\r\n  }}\r\n/>`,\r\n    jsx: (\r\n      <>\r\n        <DatePicker\r\n          mapDays={({ date }) => {\r\n            let props = {};\r\n            let isWeekend = (language === \"en\" ? [0, 6] : [6]).includes(\r\n              date.weekDay.index\r\n            );\r\n\r\n            if (isWeekend) props.className = \"highlight highlight-red\";\r\n\r\n            return props;\r\n          }}\r\n          {...otherProps}\r\n        />\r\n        <h4>{translate(\"See Also\")}:</h4>\r\n        <Link\r\n          to={\r\n            language === \"en\"\r\n              ? \"/plugins/weekends/#weekends:-gregorian\"\r\n              : \"../plugins/weekends/#%D8%A2%D8%AE%D8%B1-%D9%87%D9%81%D8%AA%D9%87-%D8%B4%D9%85%D8%B3%DB%8C\"\r\n          }\r\n        >\r\n          {language === \"en\"\r\n            ? \"plugins #weekends:-gregorian\"\r\n            : \"پلاگین ها #آخر هفته شمسی\"}\r\n        </Link>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  const highlight = {\r\n    title: \"Custom Highlight\",\r\n    code: `<DatePicker\r\n  mapDays={({ date }) => {\r\n    let color\r\n    \r\n    if ([4, 5, 6, 7].includes(date.day)) color = \"green\"\r\n    if ([11, 12, 13, 14].includes(date.day)) color = \"red\"\r\n    \r\n    if (color) return { className: \"highlight highlight-\" + color }\r\n  }}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        mapDays={({ date }) => {\r\n          let color;\r\n\r\n          if ([4, 5, 6, 7].includes(date.day)) color = \"green\";\r\n          if ([11, 12, 13, 14].includes(date.day)) color = \"red\";\r\n\r\n          if (color) return { className: `highlight highlight-${color}` };\r\n        }}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const disable = {\r\n    title: \"Disabling Days\",\r\n    code: `<DatePicker\r\n  mapDays={({ date }) => {\r\n    let isWeekend = [0, 6].includes(date.weekDay.index)\r\n    \r\n    if (isWeekend) return {\r\n      disabled: true,\r\n      style: { color: \"#ccc\" },\r\n      onClick: () => alert(\"${translate(\"weekends are disabled\")}\")\r\n    }\r\n  }}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        mapDays={({ date }) => {\r\n          let isWeekend = [0, 6].includes(date.weekDay.index);\r\n\r\n          if (isWeekend)\r\n            return {\r\n              disabled: true,\r\n              style: { color: \"#ccc\" },\r\n              onClick: () => alert(translate(\"weekends are disabled\")),\r\n            };\r\n        }}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const hide = {\r\n    title: \"Hiding Days\",\r\n    code: `<DatePicker\r\n  mapDays={({ date }) => {\r\n    let props = {}\r\n    \r\n    if ([5, 10, 15, 20, 25].includes(date.day)) props.hidden = true\r\n    \r\n    return props\r\n  }}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        mapDays={({ date }) => {\r\n          let props = {};\r\n\r\n          if ([5, 10, 15, 20, 25].includes(date.day)) props.hidden = true;\r\n\r\n          return props;\r\n        }}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const title = {\r\n    title: \"Adding Tiltle to Days\",\r\n    description: \"map_days_title\",\r\n    code: `<DatePicker\r\n  mapDays={({ date, today }) => {\r\n    let props = {}\r\n    let result = date.dayOfBeginning - today.dayOfBeginning\r\n    \r\n    if (result === -1) props.title = \"${translate(\"Yesterday\")}\"\r\n    if (result === 0) props.title = \"${translate(\"Today\")}\"\r\n    if (result === 1) props.title = \"${translate(\"Tomorrow\")}\"\r\n    \r\n    return props\r\n  }}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        mapDays={({ date, today }) => {\r\n          let props = {};\r\n          let result = date.dayOfBeginning - today.dayOfBeginning;\r\n\r\n          if (result === -1) props.title = translate(\"Yesterday\");\r\n          if (result === 0) props.title = translate(\"Today\");\r\n          if (result === 1) props.title = translate(\"Tomorrow\");\r\n\r\n          return props;\r\n        }}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return [description, style, weekends, highlight, disable, hide, title];\r\n}\r\n","import React from \"react\";\r\nimport Layout from \"../components/layout/layout\";\r\nimport doc from \"../docs/map_days\";\r\n\r\nexport default function MapDays({ pageContext }) {\r\n  const language = pageContext.language || \"en\";\r\n\r\n  return <Layout language={language} doc={doc} />;\r\n}\r\n"],"sourceRoot":""}