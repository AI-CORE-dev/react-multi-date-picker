{"version":3,"sources":["webpack://date-picker/./src/docs/plugins/panel.js","webpack://date-picker/./src/pages/plugins/panel.js"],"names":["Panel","translate","language","otherProps","useState","DateObject","calendar","add","value","setValue","value1","setValue1","value2","setValue2","map","day","setDay","value3","setValue3","title","description","jsx","code","onChange","multiple","plugins","sort","position","removeButton","onDateClicked","dateObject","window","confirm","filter","date","header","pageContext","doc","panel","section"],"mappings":"uMAIe,SAASA,EAAMC,EAAWC,EAAUC,GACjD,OAA0BC,cAAS,CACjC,IAAIC,KAAW,CAAEC,SAAuB,OAAbJ,EAAoB,YAAc,YAC7D,IAAIG,KAAW,CACbC,SAAuB,OAAbJ,EAAoB,YAAc,YAC3CK,IAAI,EAAG,QACV,IAAIF,KAAW,CACbC,SAAuB,OAAbJ,EAAoB,YAAc,YAC3CK,IAAI,GAAI,UAPNC,EAAP,KAAcC,EAAd,KAUA,GAA4BL,cAAS,CACnC,IAAIC,KAAW,CAAEC,SAAuB,OAAbJ,EAAoB,YAAc,YAC7D,IAAIG,KAAW,CACbC,SAAuB,OAAbJ,EAAoB,YAAc,YAC3CK,IAAI,EAAG,SAJLG,EAAP,KAAeC,EAAf,KAMA,GAA4BP,cAAS,CACnC,IAAIC,KAAW,CAAEC,SAAuB,OAAbJ,EAAoB,YAAc,YAC7D,IAAIG,KAAW,CACbC,SAAuB,OAAbJ,EAAoB,YAAc,YAC3CK,IAAI,EAAG,SAJLK,EAAP,KAAeC,EAAf,KAMA,GAA4BT,cAC1B,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAIU,KAAI,SAACC,GAAD,OAC1B,IAAIV,KAAW,CACbC,SAAuB,OAAbJ,EAAoB,YAAc,YAC3Cc,OAAOD,OAJPE,EAAP,KAAeC,EAAf,KAsRA,MAAO,CA9QO,CACZC,MAAO,QACPC,YACE,6BACE,6BACE,0BACE,0BAAKnB,EAAU,SACf,0BAAKA,EAAU,SACf,0BAAKA,EAAU,cAGnB,6BACE,0BACE,kCACA,oCACA,iCAEF,0BACE,6CACA,qCACA,oCAEF,0BACE,2CACA,sCACA,wCAEF,0BACE,0CACA,qCACA,mCAEF,0BACE,oCACA,oCACA,+BAOG,CACXkB,MAAO,OACPE,IACE,0BACE,kCACA,qCAKa,CACjBF,MAAO,eACPG,KAAK,2MAMuB,OAAbpB,EAAoB,GAApB,2BANX,yBAQS,OAAbA,EAAoB,GAApB,2BARI,wCAWS,OAAbA,EAAoB,GAApB,2BAXI,8IAsBkC,OAAbA,EAAoB,GAApB,oBAtBrB,eAyBJmB,IACE,gBAAC,KAAD,eACEb,MAAOA,EACPe,SAAUd,EACVe,UAAQ,EACRC,QAAS,CACP,gBAAC,IAAD,CACEC,KAAK,OACLC,SAAuB,OAAbzB,EAAoB,QAAU,WAGxCC,KAKK,CACbgB,MAAO,aAA4B,OAAbjB,EAAoB,OAAS,SACnDoB,KAAK,iRAcQ,OAAbpB,EAAoB,GAApB,2BAdI,wIAyBgC,OAAbA,EAAoB,OAAS,SAzBhD,iBA4BJmB,IACE,gBAAC,KAAD,eACEb,MAAOS,EACPM,SAAUL,EACVM,UAAQ,EACRC,QAAS,CACP,gBAAC,IAAD,CAAWE,SAAuB,OAAbzB,EAAoB,OAAS,YAEhDC,KAKY,CACpBgB,MAAO,wBACPG,KAAK,2MAMuB,OAAbpB,EAAoB,GAApB,2BANX,0BAQS,OAAbA,EAAoB,GAApB,2BARI,qJAqBW,OAAbA,EACI,KADJ,8BArBE,aA4BJmB,IACE,gBAAC,KAAD,eACEb,MAAOE,EACPa,SAAUZ,EACVc,QAAS,CACP,gBAAC,IAAD,CACEG,cAAc,EACdD,SAAuB,OAAbzB,EAAoB,QAAU,WAGxCC,KAKY,CACpBgB,MAAO,sBACPG,KAAK,2MAMuB,OAAbpB,EAAoB,GAApB,2BANX,0BAQS,OAAbA,EAAoB,GAApB,2BARI,+NAqBmCD,EACjC,+CAtBF,iIA8BW,OAAbC,EACI,KADJ,8BA9BE,aAqCJmB,IACE,gBAAC,KAAD,eACEb,MAAOI,EACPW,SAAUV,EACVY,QAAS,CACP,gBAAC,IAAD,CACEG,cAAc,EACdC,cAAe,SAACC,GACGC,OAAOC,QACtB/B,EAAU,iDAIVY,EAAUD,EAAOqB,QAAO,SAACC,GAAD,OAAUA,IAASJ,OAG/CH,SAAuB,OAAbzB,EAAoB,QAAU,WAGxCC,KAKK,CACbgB,MAAO,qBACPG,KAAK,sLAO6B,OAAbpB,EAAoB,YAAc,gBAPnD,iBAUJmB,IACE,gBAAC,KAAD,eACEI,QAAS,CACP,gBAAC,IAAD,CACEU,OAAqB,OAAbjC,EAAoB,YAAc,mBAG1CC,MCxSG,SAASH,EAAT,GAAiC,IACxCE,EADuC,EAAfkC,YACDlC,UAAY,KAEzC,OACE,gBAAC,IAAD,CAAQA,SAAUA,EAAUmC,IAAKC,EAAOC,QAAQ","file":"component---src-pages-plugins-panel-js-86626c9d0c8518cad4a8.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport DatePicker, { DateObject } from \"../../../../build/index\";\r\nimport DatePanel from \"../../../../plugins/date_panel\";\r\n\r\nexport default function Panel(translate, language, otherProps) {\r\n  const [value, setValue] = useState([\r\n    new DateObject({ calendar: language === \"en\" ? \"gregorian\" : \"persian\" }),\r\n    new DateObject({\r\n      calendar: language === \"en\" ? \"gregorian\" : \"persian\",\r\n    }).add(2, \"days\"),\r\n    new DateObject({\r\n      calendar: language === \"en\" ? \"gregorian\" : \"persian\",\r\n    }).add(10, \"days\"),\r\n  ]);\r\n\r\n  const [value1, setValue1] = useState([\r\n    new DateObject({ calendar: language === \"en\" ? \"gregorian\" : \"persian\" }),\r\n    new DateObject({\r\n      calendar: language === \"en\" ? \"gregorian\" : \"persian\",\r\n    }).add(1, \"day\"),\r\n  ]);\r\n  const [value2, setValue2] = useState([\r\n    new DateObject({ calendar: language === \"en\" ? \"gregorian\" : \"persian\" }),\r\n    new DateObject({\r\n      calendar: language === \"en\" ? \"gregorian\" : \"persian\",\r\n    }).add(1, \"day\"),\r\n  ]);\r\n  const [value3, setValue3] = useState(\r\n    [5, 10, 15, 20, 25, 30].map((day) =>\r\n      new DateObject({\r\n        calendar: language === \"en\" ? \"gregorian\" : \"persian\",\r\n      }).setDay(day)\r\n    )\r\n  );\r\n\r\n  const props = {\r\n    title: \"Props\",\r\n    description: (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>{translate(\"Prop\")}</th>\r\n            <th>{translate(\"Type\")}</th>\r\n            <th>{translate(\"Default\")}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>sort</td>\r\n            <td>String</td>\r\n            <td>\"\"</td>\r\n          </tr>\r\n          <tr>\r\n            <td>eachDaysInRange</td>\r\n            <td>Boolean</td>\r\n            <td>false</td>\r\n          </tr>\r\n          <tr>\r\n            <td>onDateClicked</td>\r\n            <td>Function</td>\r\n            <td>undefined</td>\r\n          </tr>\r\n          <tr>\r\n            <td>removeButton</td>\r\n            <td>Boolean</td>\r\n            <td>true</td>\r\n          </tr>\r\n          <tr>\r\n            <td>header</td>\r\n            <td>String</td>\r\n            <td></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    ),\r\n  };\r\n\r\n  const sort = {\r\n    title: \"Sort\",\r\n    jsx: (\r\n      <ul>\r\n        <li>date</li>\r\n        <li>color</li>\r\n      </ul>\r\n    ),\r\n  };\r\n\r\n  const sortByDate = {\r\n    title: \"Sort By Date\",\r\n    code: `import DatePicker, { DateObject } from \"react-multi-date-picker\"\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\" \r\n.\r\n.\r\n.\r\nconst [value, setValue] = useState([\r\n  new DateObject(${language === \"en\" ? \"\" : `{ calendar: \"persian\" }`}),\r\n  new DateObject(${\r\n    language === \"en\" ? \"\" : `{ calendar: \"persian\" }`\r\n  }).add(2, \"days\"),\r\n  new DateObject(${\r\n    language === \"en\" ? \"\" : `{ calendar: \"persian\" }`\r\n  }).add(10, \"days\")\r\n])\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={value}\r\n  onChange={setValue}\r\n  multiple\r\n  plugins={[\r\n    <DatePanel sort=\"date\" ${language === \"en\" ? \"\" : `position=\"left\" `}/>\r\n  ]}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        value={value}\r\n        onChange={setValue}\r\n        multiple\r\n        plugins={[\r\n          <DatePanel\r\n            sort=\"date\"\r\n            position={language === \"en\" ? \"right\" : \"left\"}\r\n          />,\r\n        ]}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const bottom = {\r\n    title: \"Position \" + (language === \"en\" ? \"Left\" : \"Right\"),\r\n    code: `import DatePicker, { DateObject } from \"react-multi-date-picker\"\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\" \r\n.\r\n.\r\n.\r\nconst [value, setValue] = useState(\r\n  [\r\n    5, \r\n    10,\r\n    15,\r\n    20,\r\n    25,\r\n    30\r\n  ].map(day => new DateObject(${\r\n    language === \"en\" ? \"\" : `{ calendar: \"persian\" }`\r\n  }).setDay(day))\r\n)\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={value}\r\n  onChange={setValue}\r\n  multiple\r\n  plugins={[\r\n    <DatePanel position=\"${language === \"en\" ? \"left\" : \"right\"}\" />\r\n  ]}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        value={value3}\r\n        onChange={setValue3}\r\n        multiple\r\n        plugins={[\r\n          <DatePanel position={language === \"en\" ? \"left\" : \"right\"} />,\r\n        ]}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const withoutButton = {\r\n    title: \"Without Remove Button\",\r\n    code: `import DatePicker, { DateObject } from \"react-multi-date-picker\"\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\" \r\n.\r\n.\r\n.\r\nconst [value, setValue] = useState([\r\n  new DateObject(${language === \"en\" ? \"\" : `{ calendar: \"persian\" }`}), \r\n  new DateObject(${\r\n    language === \"en\" ? \"\" : `{ calendar: \"persian\" }`\r\n  }).add(1, \"day\")\r\n])\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={value}\r\n  onChange={setValue}\r\n  plugins={[\r\n    <DatePanel\r\n      removeButton={false}\r\n    ${\r\n      language === \"en\"\r\n        ? \"/>\"\r\n        : `  position=\"left\" \r\n    />`\r\n    }\r\n  ]}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        value={value1}\r\n        onChange={setValue1}\r\n        plugins={[\r\n          <DatePanel\r\n            removeButton={false}\r\n            position={language === \"en\" ? \"right\" : \"left\"}\r\n          />,\r\n        ]}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const clickListener = {\r\n    title: \"Date Click Listener\",\r\n    code: `import DatePicker, { DateObject } from \"react-multi-date-picker\"\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\" \r\n.\r\n.\r\n.\r\nconst [value, setValue] = useState([\r\n  new DateObject(${language === \"en\" ? \"\" : `{ calendar: \"persian\" }`}), \r\n  new DateObject(${\r\n    language === \"en\" ? \"\" : `{ calendar: \"persian\" }`\r\n  }).add(1, \"day\")\r\n])\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={value}\r\n  onChange={setValue}\r\n  plugins={[\r\n    <DatePanel\r\n      removeButton={false}\r\n      onDateClicked={dateObject => {\r\n        let mustDelete = window.confirm(\"${translate(\r\n          \"are you sure you want to delete this date ?\"\r\n        )}\")\r\n      \r\n        if (mustDelete) setValue(\r\n          value.filter(date => date !== dateObject)\r\n        )\r\n      }}\r\n    ${\r\n      language === \"en\"\r\n        ? \"/>\"\r\n        : `  position=\"left\" \r\n    />`\r\n    }\r\n  ]}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        value={value2}\r\n        onChange={setValue2}\r\n        plugins={[\r\n          <DatePanel\r\n            removeButton={false}\r\n            onDateClicked={(dateObject) => {\r\n              let mustDelete = window.confirm(\r\n                translate(\"are you sure you want to delete this date ?\")\r\n              );\r\n\r\n              if (mustDelete) {\r\n                setValue2(value2.filter((date) => date !== dateObject));\r\n              }\r\n            }}\r\n            position={language === \"en\" ? \"right\" : \"left\"}\r\n          />,\r\n        ]}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const header = {\r\n    title: \"Custom Header Name\",\r\n    code: `import DatePicker from \"react-multi-date-picker\"\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\" \r\n.\r\n.\r\n.\r\n<DatePicker\r\n  plugins={[\r\n    <DatePanel header=\"${language === \"en\" ? \"All Dates\" : \"همه تاریخ ها\"}\" />\r\n  ]}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        plugins={[\r\n          <DatePanel\r\n            header={language === \"en\" ? \"All Dates\" : \"همه تاریخ ها\"}\r\n          />,\r\n        ]}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return [\r\n    props,\r\n    sort,\r\n    sortByDate,\r\n    bottom,\r\n    withoutButton,\r\n    clickListener,\r\n    header,\r\n  ];\r\n}\r\n","import React from \"react\"\r\nimport Layout from \"../../components/layout/layout\"\r\nimport panel from \"../../docs/plugins/panel\"\r\n\r\nexport default function Panel({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={panel} section=\"plugins\" />\r\n  )\r\n}"],"sourceRoot":""}