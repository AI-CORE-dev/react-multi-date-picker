{"version":3,"sources":["webpack://date-picker/./src/docs/positions.js","webpack://date-picker/./src/pages/positions.js"],"names":["Doc","translate","language","localeImport","otherProps","containerRef","useRef","datePickerRef","useState","mainPosition","relativePosition","fixMainPosition","fixRelativePosition","offsetY","offsetX","state","setState","updateState","key","value","separator","useEffect","current","scrollTo","clientWidth","clientHeight","openCalendar","title","description","jsx","map","point","index","code","position","join","style","display","justifyContent","flexWrap","margin","onChange","e","target","className","onBlur","type","checked","width","Number","ref","backgroundColor","height","overflow","borderRadius","boxShadow","maxWidth","flexDirection","containerStyle","boxSizing","calendarPosition","onClose","calendar","locale","Link","to","Positions","pageContext","doc"],"mappings":"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","file":"component---src-pages-positions-js-4e07674d1d1dbb4e1d95.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport DatePicker from \"../../../build/index\";\r\nimport { Link } from \"gatsby\";\r\n\r\nexport default function Doc({ translate, language, localeImport, otherProps }) {\r\n  const containerRef = useRef(),\r\n    datePickerRef = useRef(),\r\n    [state, setState] = useState({\r\n      mainPosition: \"bottom\",\r\n      relativePosition: \"center\",\r\n      fixMainPosition: false,\r\n      fixRelativePosition: false,\r\n      offsetY: 0,\r\n      offsetX: 0,\r\n    }),\r\n    updateState = (key, value) => setState({ ...state, [key]: value }),\r\n    separator = language === \"en\" ? \",\" : \"،\";\r\n\r\n  useEffect(() => {\r\n    containerRef.current.scrollTo(\r\n      containerRef.current.clientWidth * (language === \"fa\" ? -1 : 1),\r\n      containerRef.current.clientHeight / 2\r\n    );\r\n\r\n    datePickerRef.current.openCalendar();\r\n  }, [language]);\r\n\r\n  const {\r\n    mainPosition,\r\n    relativePosition,\r\n    fixMainPosition,\r\n    fixRelativePosition,\r\n    offsetY,\r\n    offsetX,\r\n  } = state;\r\n\r\n  const descriptions = {\r\n    title: translate(\"Descriptions\"),\r\n    description: translate(\"calendar_position_description\"),\r\n  };\r\n\r\n  const calendarPosition = {\r\n    title: translate(\"Calendar Position\"),\r\n    description: translate(\"calendar_position\"),\r\n    jsx: (\r\n      <ul>\r\n        <li>top {translate(\"or\")} top-center</li>\r\n        <li>top-start {translate(\"or\")} top-left</li>\r\n        <li>top-end {translate(\"or\")} top-right</li>\r\n        <li>bottom {translate(\"or\")} bottom-center</li>\r\n        <li>bottom-start {translate(\"or\")} bottom-left</li>\r\n        <li>bottom-end {translate(\"or\")} bottom-right</li>\r\n        <li>left {translate(\"or\")} left-center</li>\r\n        <li>left-start {translate(\"or\")} left-top</li>\r\n        <li>left-end {translate(\"or\")} left-bottom</li>\r\n        <li>right {translate(\"or\")} right-center</li>\r\n        <li>right-start {translate(\"or\")} right-top</li>\r\n        <li>right-end {translate(\"or\")} right-bottom</li>\r\n      </ul>\r\n    ),\r\n  };\r\n\r\n  const points = {\r\n    title: \"Important Points\",\r\n    description: (\r\n      <ol>\r\n        {(translate(\"important_points\") || []).map((point, index) => (\r\n          <li key={index}>{point}</li>\r\n        ))}\r\n      </ol>\r\n    ),\r\n  };\r\n\r\n  const example = {\r\n    title: \"Example\",\r\n    code: `${localeImport}const containerRef = useRef()\r\nconst datePickerRef = useRef()\r\n\r\nconst [state, setState] = useState({\r\n  mainPosition: \"bottom\",\r\n  relativePosition: \"center\",\r\n  fixMainPosition: false,\r\n  fixRelativePosition: false,\r\n  offsetY: 0,\r\n  offsetX: 0\r\n})\r\n\r\nconst updateState = (key, value) => setState({ \r\n  ...state, \r\n  [key]: value\r\n})\r\n\r\nuseEffect(() => {\r\n  containerRef.current.scrollTo(\r\n    (containerRef.current.clientWidth${language === \"en\" ? \"\" : \" * -1\"}),\r\n    (containerRef.current.clientHeight / 2)\r\n  )\r\n\r\n  datePickerRef.current.openCalendar()\r\n}, [])\r\n\r\nconst {\r\n  mainPosition,\r\n  relativePosition,\r\n  fixMainPosition,\r\n  fixRelativePosition,\r\n  offsetY,\r\n  offsetX\r\n} = state\r\n.\r\n.\r\n.\r\n<div>\r\n  <div \r\n    style={{ \r\n      display: \"flex\", \r\n      justifyContent: \"space-around\",\r\n      flexWrap: \"wrap\",\r\n      margin: \"10px 0\" \r\n    }}\r\n  >\r\n    <label>\r\n      ${translate(\"Main Position\")}:\r\n      <select\r\n        value={mainPosition}\r\n        onChange={e => updateState(\"mainPosition\", e.target.value)}\r\n        className=\"select\"\r\n      >${[\"top\", \"bottom\", \"left\", \"right\"]\r\n        .map(\r\n          (position) => `\r\n        <option value=\"${position}\">${translate(position)}</option>`\r\n        )\r\n        .join(\"\")}\r\n      </select>\r\n    </label>\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        value={fixMainPosition}\r\n        onChange={e => updateState(\"fixMainPosition\", e.target.checked)}\r\n      />\r\n      ${translate(\"Fix Main Position\")}\r\n    </label>\r\n    <label>\r\n      ${translate(\"Relative Position\")}:\r\n      <select\r\n        value={relativePosition}\r\n        onChange={e => updateState(\"relativePosition\", e.target.value)}\r\n        className=\"select\"\r\n      >${[\"start\", \"center\", \"end\"]\r\n        .map(\r\n          (position) => `\r\n        <option value=\"${position}\">${translate(position)}</option>`\r\n        )\r\n        .join(\"\")}\r\n      </select>\r\n    </label>\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        value={fixRelativePosition}\r\n        onChange={e => updateState(\"fixRelativePosition\", e.target.checked)}\r\n      />\r\n      ${translate(\"Fix Relative Position\")}\r\n    </label>\r\n    <label>\r\n      ${translate(\"Offset Y\")}:\r\n      <input\r\n        type=\"number\"\r\n        className=\"input\"\r\n        style={{ width: \"30px\" }}\r\n        value={offsetY}\r\n        onChange={e => updateState(\"offsetY\", Number(e.target.value))}\r\n      />\r\n    </label>\r\n    <label>\r\n      ${translate(\"Offset X\")}:\r\n      <input\r\n        type=\"number\"\r\n        className=\"input\"\r\n        style={{ width: \"30px\" }}\r\n        value={offsetX}\r\n        onChange={e => updateState(\"offsetX\", Number(e.target.value))}\r\n      />\r\n    </label>\r\n  </div>\r\n  <div\r\n    ref={containerRef}\r\n    style={{ \r\n      backgroundColor: \"whitesmoke\", \r\n      height: \"500px\", \r\n      overflow: \"auto\", \r\n      position: \"relative\",\r\n      borderRadius: \"5px\",\r\n      boxShadow: \"inset 0 0 6px 0 #888\" \r\n    }}\r\n  >\r\n    <div\r\n      style={{ \r\n        width: \"300%\", \r\n        height: \"200%\", \r\n        display: \"flex\", \r\n        flexDirection: \"column\", \r\n        justifyContent: \"center\" \r\n      }}\r\n    >\r\n      <DatePicker\r\n        ref={datePickerRef}\r\n        containerStyle={{ //datepicker container style\r\n          width: \"180px\",\r\n          margin: \"auto\"\r\n        }}\r\n        style={{ //input style\r\n          width: \"100%\",\r\n          height: \"26px\",\r\n          boxSizing: \"border-box\"\r\n        }}\r\n        calendarPosition={${\"`${\"}mainPosition}-${\"${\"}relativePosition}${\"`\"}}\r\n        fixMainPosition={fixMainPosition}\r\n        fixRelativePosition={fixRelativePosition}\r\n        offsetY={offsetY}\r\n        offsetX={offsetX}\r\n        onClose={() => false}\r\n      ${\r\n        language === \"en\"\r\n          ? \"/>\"\r\n          : `  calendar={persian}\r\n        locale={persian_fa}\r\n      />`\r\n      }\r\n    </div>\r\n  </div>\r\n</div>`,\r\n    jsx: (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            flexWrap: \"wrap\",\r\n            margin: \"10px 0\",\r\n          }}\r\n        >\r\n          <label>\r\n            {translate(\"Main Position\")}:\r\n            <select\r\n              value={mainPosition}\r\n              onChange={(e) => updateState(\"mainPosition\", e.target.value)}\r\n              className=\"select\"\r\n              onBlur={() => {}}\r\n            >\r\n              {[\"top\", \"bottom\", \"left\", \"right\"].map((position, index) => {\r\n                return (\r\n                  <option key={index} value={position}>\r\n                    {translate(position)}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </label>\r\n          {separator}\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              value={fixMainPosition}\r\n              onChange={(e) => updateState(\"fixMainPosition\", e.target.checked)}\r\n            />\r\n            {translate(\"Fix Main Position\")}\r\n          </label>\r\n          {separator}\r\n          <label>\r\n            {translate(\"Relative Position\")}:\r\n            <select\r\n              value={relativePosition}\r\n              onChange={(e) => updateState(\"relativePosition\", e.target.value)}\r\n              className=\"select\"\r\n              onBlur={() => {}}\r\n            >\r\n              {[\"start\", \"center\", \"end\"].map((position, index) => {\r\n                return (\r\n                  <option key={index} value={position}>\r\n                    {translate(position)}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </label>\r\n          {separator}\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              value={fixRelativePosition}\r\n              onChange={(e) =>\r\n                updateState(\"fixRelativePosition\", e.target.checked)\r\n              }\r\n            />\r\n            {translate(\"Fix Relative Position\")}\r\n          </label>\r\n          {separator}\r\n          <label>\r\n            {translate(\"Offset Y\")}:\r\n            <input\r\n              type=\"number\"\r\n              className=\"input\"\r\n              style={{ width: \"30px\" }}\r\n              value={offsetY}\r\n              onChange={(e) => updateState(\"offsetY\", Number(e.target.value))}\r\n            />\r\n          </label>\r\n          {separator}\r\n          <label>\r\n            {translate(\"Offset X\")}:\r\n            <input\r\n              type=\"number\"\r\n              className=\"input\"\r\n              style={{ width: \"30px\" }}\r\n              value={offsetX}\r\n              onChange={(e) => updateState(\"offsetX\", Number(e.target.value))}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div\r\n          ref={containerRef}\r\n          style={{\r\n            backgroundColor: \"whitesmoke\",\r\n            height: \"500px\",\r\n            overflow: \"auto\",\r\n            position: \"relative\",\r\n            borderRadius: \"5px\",\r\n            boxShadow: \"inset 0 0 6px 0 #888\",\r\n            maxWidth: \"800px\",\r\n            margin: \"0 auto\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"300%\",\r\n              height: \"200%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <DatePicker\r\n              ref={datePickerRef}\r\n              containerStyle={{ width: \"180px\", margin: \"auto\" }}\r\n              style={{ width: \"100%\", height: \"26px\", boxSizing: \"border-box\" }}\r\n              calendarPosition={`${mainPosition}-${relativePosition}`}\r\n              fixMainPosition={fixMainPosition}\r\n              fixRelativePosition={fixRelativePosition}\r\n              offsetY={offsetY}\r\n              offsetX={offsetX}\r\n              onClose={() => false}\r\n              calendar={otherProps.calendar}\r\n              locale={otherProps.locale}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const anotherExample = {\r\n    title: translate(\"Another Examples\"),\r\n    description: translate(\"another_examples\"),\r\n    jsx: (\r\n      <ol>\r\n        <li>\r\n          <Link to=\"../events/#onpositionchange\">\r\n            {translate(\"another_examples_1\")}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to={\r\n              language === \"en\"\r\n                ? \"/ref/#refresh-position\"\r\n                : \"../ref/#رفرش-کردن-موقعیت-تقویم\"\r\n            }\r\n          >\r\n            {translate(\"another_examples_2\")}\r\n          </Link>\r\n        </li>\r\n      </ol>\r\n    ),\r\n  };\r\n\r\n  return [descriptions, calendarPosition, points, example, anotherExample];\r\n}\r\n","import React from \"react\";\r\nimport Layout from \"../components/layout/layout\";\r\nimport doc from \"../docs/positions\";\r\n\r\nexport default function Positions({ pageContext }) {\r\n  const language = pageContext.language || \"en\";\r\n\r\n  return <Layout language={language} doc={doc} />;\r\n}\r\n"],"sourceRoot":""}