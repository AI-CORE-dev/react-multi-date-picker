{"version":3,"sources":["webpack://date-picker/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://date-picker/../plugins/all/settings/settings.js","webpack://date-picker/../plugins/all/utils.js","webpack://date-picker/./src/docs/plugins/settings.js","webpack://date-picker/./src/pages/plugins/settings.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","Settings","state","position","setState","setProps","calendars","locales","modes","others","defaultActive","disabledList","defaultFormat","className","handlePropsChange","names","gregorian","persian","arabic","indian","en","fa","ar","hi","single","multiple","range","disable","onlyMonthPicker","onlyYearPicker","titles","calendar","locale","mode","otherPickers","props","useState","section","setSection","globalIconProps","size","stroke","registerListener","calendarProps","handleChange","nodes","Calendar","getValidProps","includes","title","onClick","map","index","date","setKeyValue","setMode","setOtherPickers","picker","replace","w","toUpperCase","value","notifyChange","set","e","$state","toLowerCase","selectedDate","Array","isArray","getLastItem","array","format","Function","React","console","warn","join","Setting","translate","language","otherProps","settings1","setSettings1","settings2","setSettings2","Date","settings3","setSettings3","description","code","jsx","onPropsChange","plugins","disabled","pageContext","doc","settings"],"mappings":"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","file":"component---src-pages-plugins-settings-js-b125253beed74dfe5cee.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useState } from \"react\";\nimport { getValidProps } from \"../utils\";\nimport {\n  IconLanguage,\n  IconCalendarEvent,\n  IconCircles,\n  IconClock,\n} from \"@tabler/icons\";\nimport \"./settings.css\";\n\nexport default function Settings({\n  state,\n  setState,\n  position,\n  setProps,\n  calendars = [\"gregorian\", \"persian\", \"arabic\", \"indian\"],\n  locales = [\"en\", \"fa\", \"ar\", \"hi\"],\n  modes = [\"single\", \"multiple\", \"range\"],\n  others = [\"onlyMonthPicker\", \"onlyYearPicker\"],\n  defaultActive = \"\",\n  disabledList = [],\n  defaultFormat = {},\n  className = \"\",\n  handlePropsChange,\n  names = {\n    gregorian: \"GE\",\n    persian: \"PE\",\n    arabic: \"AR\",\n    indian: \"IN\",\n    en: \"EN\",\n    fa: \"FA\",\n    ar: \"AR\",\n    hi: \"HI\",\n    single: \"SI\",\n    multiple: \"MU\",\n    range: \"RA\",\n    disable: \"DI\",\n    onlyMonthPicker: \"OM\",\n    onlyYearPicker: \"OY\",\n  },\n  titles = {\n    calendar: \"Calendar\",\n    locale: \"Locale\",\n    mode: \"Mode\",\n    otherPickers: \"Other Pickers\",\n    gregorian: \"Gregorian\",\n    persian: \"Persian\",\n    arabic: \"Arabic\",\n    indian: \"Indian\",\n    en: \"English\",\n    fa: \"Farsi\",\n    ar: \"Arabic\",\n    hi: \"Hindi\",\n    single: \"Single\",\n    multiple: \"Multiple\",\n    range: \"Range\",\n    disable: \"Disable\",\n    onlyMonthPicker: \"Only Month Picker\",\n    onlyYearPicker: \"Only Year Picker\",\n  },\n  ...props\n}) {\n  const [section, setSection] = useState(defaultActive),\n    globalIconProps = {\n      size: 19,\n      stroke: 1.5,\n      className: \"icon\",\n    };\n\n  return (\n    <div\n      className={`settings ${position} ${className}`}\n      {...getValidProps(props)}\n    >\n      {!disabledList.includes(\"calendar\") && (\n        <div\n          title={titles.calendar}\n          className={`setting ${section === \"calendar\" ? \"active\" : \"\"}`}\n        >\n          <IconCalendarEvent\n            {...globalIconProps}\n            onClick={() => setSection(section === \"calendar\" ? \"\" : \"calendar\")}\n          />\n          <div className=\"items\">\n            {calendars.map((calendar, index) => (\n              <span\n                key={index}\n                className={`item ${\n                  state.date.calendar === calendar ? \"active\" : \"\"\n                }`}\n                title={titles[calendar]}\n                onClick={() => setKeyValue(\"calendar\", calendar)}\n              >\n                {names[calendar]}\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n      {!disabledList.includes(\"locale\") && (\n        <div\n          title={titles.locale}\n          className={`setting ${section === \"locale\" ? \"active\" : \"\"}`}\n        >\n          <IconLanguage\n            {...globalIconProps}\n            onClick={() => setSection(section === \"locale\" ? \"\" : \"locale\")}\n          />\n          <div className=\"items\">\n            {locales.map((locale, index) => (\n              <span\n                key={index}\n                className={`item ${\n                  state.date.locale === locale ? \"active\" : \"\"\n                }`}\n                title={titles[locale]}\n                onClick={() => setKeyValue(\"locale\", locale)}\n              >\n                {names[locale]}\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n      {!disabledList.includes(\"mode\") && (\n        <div\n          title={titles.mode}\n          className={`setting ${section === \"mode\" ? \"active\" : \"\"}`}\n        >\n          <IconCircles\n            {...globalIconProps}\n            onClick={() => setSection(section === \"mode\" ? \"\" : \"mode\")}\n          />\n          <div className=\"items\">\n            {modes.map((mode, index) => (\n              <span\n                key={index}\n                className={`item ${\n                  state[mode]\n                    ? \"active\"\n                    : !state.range && !state.multiple && mode === \"single\"\n                    ? \"active\"\n                    : \"\"\n                }`}\n                title={titles[mode]}\n                onClick={setMode}\n              >\n                {names[mode]}\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n      {!disabledList.includes(\"other\") && (\n        <div\n          title={titles.otherPickers}\n          className={`setting ${section === \"others\" ? \"active\" : \"\"}`}\n        >\n          <IconClock\n            {...globalIconProps}\n            onClick={() => setSection(section === \"others\" ? \"\" : \"others\")}\n          />\n          <div className=\"items\">\n            <span\n              className={`item ${\n                !state.onlyMonthPicker && !state.onlyYearPicker ? \"active\" : \"\"\n              }`}\n              title={titles.disable}\n              onClick={setOtherPickers}\n            >\n              {names.disable}\n            </span>\n            {others.map((picker, index) => (\n              <span\n                key={index}\n                className={`item ${\n                  state[picker.replace(/\\s\\w/g, (w) => w[1].toUpperCase())]\n                    ? \"active\"\n                    : \"\"\n                }`}\n                title={titles[picker]}\n                onClick={() => setOtherPickers(picker)}\n              >\n                {names[picker]}\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  function setKeyValue(key, value) {\n    if (state[key] === value) return;\n\n    let $state = { ...state, date: state.date.set(key, value), [key]: value };\n\n    notifyChange($state);\n  }\n\n  function setMode(e) {\n    let mode = e.target.title.toLowerCase(),\n      $state;\n\n    switch (mode) {\n      case \"multiple\":\n        $state = {\n          ...state,\n          selectedDate: Array.isArray(state.selectedDate)\n            ? state.selectedDate\n            : [state.selectedDate],\n          multiple: true,\n          range: false,\n        };\n        break;\n      case \"range\":\n        $state = {\n          ...state,\n          selectedDate: Array.isArray(state.selectedDate)\n            ? state.selectedDate\n            : [state.selectedDate],\n          multiple: false,\n          range: true,\n        };\n\n        if ($state.selectedDate.length > 2) {\n          $state.selectedDate = [\n            $state.selectedDate[0],\n            getLastItem($state.selectedDate),\n          ];\n        }\n        break;\n      default:\n        //single\n        $state = {\n          ...state,\n          selectedDate: Array.isArray(state.selectedDate)\n            ? getLastItem(state.selectedDate)\n            : state.selectedDate,\n          multiple: false,\n          range: false,\n        };\n    }\n\n    notifyChange($state);\n  }\n\n  function getLastItem(array) {\n    return array[array.length - 1];\n  }\n\n  function setOtherPickers(picker) {\n    let $state;\n\n    switch (picker) {\n      case \"onlyMonthPicker\":\n        $state = {\n          ...state,\n          onlyMonthPicker: true,\n          onlyYearPicker: false,\n          format: defaultFormat?.onlyMonthPicker || \"MM/YYYY\",\n        };\n        break;\n      case \"onlyYearPicker\":\n        $state = {\n          ...state,\n          onlyMonthPicker: false,\n          onlyYearPicker: true,\n          format: defaultFormat?.onlyYearPicker || \"YYYY\",\n        };\n        break;\n      default:\n        //disable\n        $state = {\n          ...state,\n          onlyMonthPicker: false,\n          onlyYearPicker: false,\n          format: defaultFormat?.single || \"YYYY/MM/DD\",\n        };\n    }\n\n    notifyChange($state);\n  }\n\n  function notifyChange($state) {\n    $state.value = $state.selectedDate;\n\n    if (setProps instanceof Function) {\n      if (\"_self\" in React.createElement(\"div\"))\n        console.warn(\n          [\n            \"setProps is deprecated and will not available in the next versions.\",\n            \"Use onPropsChange instead\",\n            \"https://shahabyazdi.github.io/react-multi-date-picker/events/#onpropschange\",\n          ].join(\"\\n\")\n        );\n\n      setProps((props) => {\n        return {\n          ...props,\n          ...$state,\n        };\n      });\n    }\n\n    handlePropsChange($state);\n  }\n}\n","export function getBorderClass(position, nodes) {\n  let classNames = [];\n\n  if ([\"left\", \"right\"].includes(position)) {\n    if (nodes.left) classNames.push(\"rmdp-border-left\");\n    if (nodes.right) classNames.push(\"rmdp-border-right\");\n  } else {\n    if (nodes.top) classNames.push(\"rmdp-border-top\");\n    if (nodes.bottom) classNames.push(\"rmdp-border-bottom\");\n  }\n\n  return classNames.join(\" \");\n}\n\nexport function getValidProps({\n  state,\n  setState,\n  position,\n  registerListener,\n  calendarProps,\n  handleChange,\n  nodes,\n  Calendar,\n  handlePropsChange,\n  ...otherProps\n}) {\n  return otherProps;\n}\n","import React, { useState } from \"react\";\r\nimport DatePicker from \"../../../../build/index\";\r\nimport Settings from \"../../../../plugins/all/settings/settings\";\r\nimport DatePanel from \"../../../../plugins/date_panel\";\r\n\r\nexport default function Setting(translate, language, otherProps) {\r\n  const [settings1, setSettings1] = useState({ ...otherProps });\r\n  const [settings2, setSettings2] = useState({ multiple: true, ...otherProps });\r\n  const [settings3, setSettings3] = useState({\r\n    value: new Date(),\r\n    format: \"MM-DD-YYYY\",\r\n    ...otherProps,\r\n  });\r\n\r\n  const props = {\r\n    title: \"Props\",\r\n    description: (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>{translate(\"Prop\")}</th>\r\n            <th>{translate(\"Type\")}</th>\r\n            <th>{translate(\"Default\")}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>calendars</td>\r\n            <td>Array</td>\r\n            <td>[\"gregorian\", \"persian\", \"arabic\", \"indian\"]</td>\r\n          </tr>\r\n          <tr>\r\n            <td>locales</td>\r\n            <td>Array</td>\r\n            <td>[\"en\", \"fa\", \"ar\", \"hi\"]</td>\r\n          </tr>\r\n          <tr>\r\n            <td>modes</td>\r\n            <td>Array</td>\r\n            <td>[\"single\", \"multiple\", \"range\"]</td>\r\n          </tr>\r\n          <tr>\r\n            <td>others</td>\r\n            <td>Array</td>\r\n            <td>[\"onlyMonthPicker\", \"onlyYearPicker\"]</td>\r\n          </tr>\r\n          <tr>\r\n            <td>defaultActive</td>\r\n            <td>string</td>\r\n            <td>\"\"</td>\r\n          </tr>\r\n          <tr>\r\n            <td>disabledList</td>\r\n            <td>Array</td>\r\n            <td>[]</td>\r\n          </tr>\r\n          <tr>\r\n            <td>defaultFormat</td>\r\n            <td>Object</td>\r\n            <td>{\"{}\"}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>names</td>\r\n            <td>Object</td>\r\n            <td>{`{\r\n  gregorian: \"GE\",\r\n  persian: \"PE\",\r\n  arabic: \"AR\",\r\n  indian: \"IN\",\r\n  en: \"EN\",\r\n  fa: \"FA\",\r\n  ar: \"AR\",\r\n  hi: \"HI\",\r\n  single: \"SI\",\r\n  multiple: \"MU\",\r\n  range: \"RA\",\r\n  disable: \"DI\",\r\n  onlyMonthPicker: \"OM\",\r\n  onlyYearPicker: \"OY\",\r\n}`}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>titles</td>\r\n            <td>Object</td>\r\n            <td>{`{\r\n  calendar: \"Calendar\",\r\n  locale: \"Locale\",\r\n  mode: \"Mode\",\r\n  otherPickers: \"Other Pickers\",\r\n  gregorian: \"Gregorian\",\r\n  persian: \"Persian\",\r\n  arabic: \"Arabic\",\r\n  indian: \"Indian\",\r\n  en: \"English\",\r\n  fa: \"Farsi\",\r\n  ar: \"Arabic\",\r\n  hi: \"Hindi\",\r\n  single: \"Single\",\r\n  multiple: \"Multiple\",\r\n  range: \"Range\",\r\n  disable: \"Disable\",\r\n  onlyMonthPicker: \"Only Month Picker\",\r\n  onlyYearPicker: \"Only Year Picker\",\r\n}`}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    ),\r\n  };\r\n\r\n  const bottom = {\r\n    title: \"Settings Bottom\",\r\n    description: <div></div>,\r\n    code: `import React, { useState } from \"react\"\r\nimport DatePicker from \"react-multi-date-picker\"\r\nimport Settings from \"react-multi-date-picker/plugins/settings\"\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\"\r\n.\r\n.\r\n.\r\nconst [props, setProps] = useState(${\r\n      language === \"en\"\r\n        ? \"{}\"\r\n        : `{\r\n  calendar: \"persian\",\r\n  locale: \"fa\",\r\n  calendarPosition: \"bottom-right\"\r\n}`\r\n    })\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  {...props}\r\n  onPropsChange={setProps}\r\n  plugins={[\r\n    <Settings\r\n      position=\"bottom\"\r\n      defaultActive=\"mode\"\r\n    />,\r\n    <DatePanel \r\n      disabled={!props.multiple && !props.range} \r\n      position={[\"fa\", \"ar\"].includes(props.locale) ? \"left\" : \"right\"}\r\n    />\r\n  ]}\r\n/> `,\r\n    jsx: (\r\n      <DatePicker\r\n        {...settings1}\r\n        onPropsChange={setSettings1}\r\n        plugins={[\r\n          <Settings position=\"bottom\" defaultActive=\"mode\" />,\r\n          <DatePanel\r\n            disabled={!settings1.multiple && !settings1.range}\r\n            position={\r\n              [\"fa\", \"ar\"].includes(settings1.locale) ? \"left\" : \"right\"\r\n            }\r\n          />,\r\n        ]}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const custom = {\r\n    title: \"Custom Settings\",\r\n    code: `import React, { useState } from \"react\"\r\nimport DatePicker from \"react-multi-date-picker\"\r\nimport Settings from \"react-multi-date-picker/plugins/settings\"\r\n.\r\n.\r\n.\r\nconst [props, setProps] = useState(${\r\n      language === \"en\"\r\n        ? \"{ multiple: true }\"\r\n        : `{\r\n  calendar: \"persian\",\r\n  locale: \"fa\",\r\n  calendarPosition: \"bottom-right\",\r\n  multiple: true\r\n}`\r\n    })\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  {...props}\r\n  onPropsChange={setProps}\r\n  plugins={[\r\n    <Settings\r\n      position=\"left\"\r\n      calendars={[\"gregorian\", \"persian\"]}\r\n      locales={[\"en\", \"fa\"]}\r\n      modes={[\"multiple\", \"range\"]}\r\n      disabledList={[\"other\"]}\r\n    />\r\n  ]}\r\n/> `,\r\n    jsx: (\r\n      <DatePicker\r\n        {...settings2}\r\n        onPropsChange={setSettings2}\r\n        plugins={[\r\n          <Settings\r\n            position=\"left\"\r\n            calendars={[\"gregorian\", \"persian\"]}\r\n            locales={[\"en\", \"fa\"]}\r\n            modes={[\"multiple\", \"range\"]}\r\n            disabledList={[\"other\"]}\r\n          />,\r\n        ]}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const otherPickers = {\r\n    title: \"Other Pickers\",\r\n    code: `import React, { useState } from \"react\"\r\nimport DatePicker from \"react-multi-date-picker\"\r\nimport Settings from \"react-multi-date-picker/plugins/settings\"\r\n.\r\n.\r\n.\r\nconst initialProps = ${\r\n      language === \"en\"\r\n        ? `{ \r\n  value: new Date(), \r\n  format: \"MM-DD-YYYY\", \r\n}`\r\n        : `{ \r\n  value: new Date(), \r\n  format: \"MM-DD-YYYY\", \r\n  calendar: \"persian\",\r\n  locale: \"fa\",\r\n  calendarPosition:\"bottom-right\"\r\n}`\r\n    }\r\n\r\nconst [props, setProps] = useState(initialProps)\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  {...props}\r\n  onPropsChange={setProps}\r\n  plugins={[\r\n    <Settings\r\n      position=\"bottom\"\r\n      disabledList={[\"calendar\", \"locale\", \"mode\"]}\r\n      defaultActive=\"others\"\r\n      defaultFormat={{\r\n        single: \"MM-DD-YYYY\",\r\n        onlyMonthPicker: \"MMMM YYYY\",\r\n        onlyYearPicker: \"YYYY\",\r\n      }}\r\n    />\r\n  ]}\r\n/> `,\r\n    jsx: (\r\n      <DatePicker\r\n        {...settings3}\r\n        onPropsChange={setSettings3}\r\n        plugins={[\r\n          <Settings\r\n            position=\"bottom\"\r\n            disabledList={[\"calendar\", \"locale\", \"mode\"]}\r\n            defaultActive=\"others\"\r\n            defaultFormat={{\r\n              single: \"MM-DD-YYYY\",\r\n              onlyMonthPicker: \"MMMM YYYY\",\r\n              onlyYearPicker: \"YYYY\",\r\n            }}\r\n          />,\r\n        ]}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return [props, bottom, custom, otherPickers];\r\n}\r\n","import React from \"react\"\r\nimport Layout from \"../../components/layout/layout\"\r\nimport settings from \"../../docs/plugins/settings\"\r\n\r\nexport default function Settings({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={settings} section=\"plugins\" />\r\n  )\r\n}"],"sourceRoot":""}