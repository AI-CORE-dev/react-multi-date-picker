{"version":3,"sources":["webpack://date-picker/./src/docs/events.js","webpack://date-picker/./src/pages/events.js"],"names":["Doc","translate","language","otherProps","localeImport","useState","format","state","setState","value","Date","onChange","date","console","log","props","setProps","DateObject","dateObject","setDateObject","convert","object","gregorian","gregorian_en","gregorian_fa","persian","persian_en","persian_fa","arabic","arabic_en","arabic_fa","indian","indian_en","indian_fa","jsDate","toDate","Span","children","style","fontWeight","shouldCloseCalendar","setShouldCloseCalendar","shouldOpenCalendar","setShouldOpenCalendar","dates","setDates","setValue","value1","setValue1","updateValue","year","month","set","day","length","title","description","code","jsx","toString","e","target","className","onBlur","multiple","array","alert","join","onOpen","type","checked","onClose","onPositionChange","data","onPropsChange","onMonthChange","currentDate","name","onYearChange","map","text","index","key","onFocusedDateChange","dateFocused","dateClicked","plugins","markFocused","Link","to","Events","pageContext","doc"],"mappings":"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","file":"component---src-pages-events-js-f348416ac0d04801b6fe.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport DatePicker, { DateObject } from \"../../../build/index\";\r\nimport DatePanel from \"../../../plugins/date_panel\";\r\nimport { Link } from \"gatsby\";\r\n\r\n//gregorian calendar & locale\r\nimport gregorian from \"react-date-object/calendars/gregorian\";\r\nimport gregorian_en from \"react-date-object/locales/gregorian_en\";\r\nimport gregorian_fa from \"react-date-object/locales/gregorian_fa\";\r\n\r\n//persian calendar & locale\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_en from \"react-date-object/locales/persian_en\";\r\nimport persian_fa from \"react-date-object/locales/persian_fa\";\r\n\r\n//arabic calendar & locale\r\nimport arabic from \"react-date-object/calendars/arabic\";\r\nimport arabic_en from \"react-date-object/locales/arabic_en\";\r\nimport arabic_fa from \"react-date-object/locales/arabic_fa\";\r\n\r\n//indian calendar & locale\r\nimport indian from \"react-date-object/calendars/indian\";\r\nimport indian_en from \"react-date-object/locales/indian_en\";\r\nimport indian_fa from \"react-date-object/locales/indian_fa\";\r\n\r\nexport default function Doc({ translate, language, otherProps, localeImport }) {\r\n  const [state, setState] = useState({ format: \"MM/DD/YYYY\" });\r\n  const [props, setProps] = useState({\r\n    value: new Date(),\r\n    format: \"MM-DD-YYYY\",\r\n    onChange: (date) => console.log(date.format()),\r\n    ...otherProps,\r\n  });\r\n  const [dateObject, setDateObject] = useState(new DateObject(otherProps));\r\n\r\n  const convert = (date, format = state.format) => {\r\n    let object = { date, format };\r\n\r\n    setState({\r\n      gregorian: new DateObject(object)\r\n        .convert(gregorian, language === \"en\" ? gregorian_en : gregorian_fa)\r\n        .format(),\r\n      persian: new DateObject(object)\r\n        .convert(persian, language === \"en\" ? persian_en : persian_fa)\r\n        .format(),\r\n      arabic: new DateObject(object)\r\n        .convert(arabic, language === \"en\" ? arabic_en : arabic_fa)\r\n        .format(),\r\n      indian: new DateObject(object)\r\n        .convert(indian, language === \"en\" ? indian_en : indian_fa)\r\n        .format(),\r\n      jsDate: date.toDate(),\r\n      ...object,\r\n    });\r\n  };\r\n\r\n  const Span = ({ children }) => (\r\n    <span style={{ fontWeight: \"bold\" }}>{children}</span>\r\n  );\r\n\r\n  const [shouldCloseCalendar, setShouldCloseCalendar] = useState(false);\r\n  const [shouldOpenCalendar, setShouldOpenCalendar] = useState(false);\r\n  const [dates, setDates] = useState({});\r\n  const [value, setValue] = useState();\r\n  const [value1, setValue1] = useState();\r\n\r\n  function updateValue({ year, month }) {\r\n    setValue(\r\n      new DateObject(value).set({\r\n        day: value.day > month.length ? month.length : value.day,\r\n        month,\r\n        year,\r\n      })\r\n    );\r\n  }\r\n\r\n  const onChangeSingle = {\r\n    title: \"onChange (single mode)\",\r\n    description: \"on_change\",\r\n    code: `import { useState } from \"react\"\r\nimport DatePicker from \"react-multi-date-picker\"\r\n${\r\n  language === \"en\"\r\n    ? \"\"\r\n    : `import persian from \"react-date-object/calendars/persian\"\r\nimport persian_fa from \"react-date-object/locales/persian_fa\"\r\n`\r\n}\r\nexport default function Example() {\r\n  const [value, setValue] = useState()\r\n  \r\n  return (\r\n    <>\r\n      <DatePicker\r\n        value={value}\r\n        onChange={setValue}\r\n      ${\r\n        language === \"en\"\r\n          ? \"/>\"\r\n          : `  calendar={persian}\r\n        locale={persian_fa}\r\n        calendarPosition=\"bottom-right\"\r\n      />`\r\n      }\r\n      {value?.toDate?.().toString()}\r\n    </>\r\n  )\r\n}`,\r\n    jsx: (\r\n      <>\r\n        <DatePicker value={value1} onChange={setValue1} {...otherProps} />\r\n        {value1?.toDate?.().toString?.()}\r\n      </>\r\n    ),\r\n  };\r\n\r\n  const onChangeConvert = {\r\n    title: \"onChange (Converting Selected Date To All Calendars)\",\r\n    code: `//gregorian calendar & locale\r\nimport gregorian from \"react-date-object/calendars/gregorian\";\r\nimport gregorian_${language} from \"react-date-object/locales/gregorian_${language}\";\r\n\r\n//persian calendar & locale\r\nimport persian from \"react-date-object/calendars/persian\";\r\nimport persian_${language} from \"react-date-object/locales/persian_${language}\";\r\n\r\n//arabic calendar & locale\r\nimport arabic from \"react-date-object/calendars/arabic\";\r\nimport arabic_${language} from \"react-date-object/locales/arabic_${language}\";\r\n\r\n//indian calendar & locale\r\nimport indian from \"react-date-object/calendars/indian\";\r\nimport indian_${language} from \"react-date-object/locales/indian_${language}\";\r\n.\r\n.\r\n.\r\nconst [state, setState] = useState({ format: \"MM/DD/YYYY\" })\r\n  \r\nconst convert = (date, format = state.format) => {\r\n  let object = { date, format }\r\n  \r\n  setState({\r\n    gregorian: new DateObject(object)${\r\n      language === \"en\" ? \"\" : `.convert(gregorian, gregorian_${language})`\r\n    }.format(),\r\n    persian: new DateObject(object)${\r\n      language === \"en\" ? `.convert(persian, persian_${language})` : \"\"\r\n    }.format(),\r\n    arabic: new DateObject(object).convert(arabic, arabic_${language}).format(),\r\n    indian: new DateObject(object).convert(indian, indian_${language}).format(),\r\n    jsDate: date.toDate(),\r\n    ...object\r\n  })\r\n}\r\n  \r\nconst Span = ({ children }) => <span style={{ fontWeight: \"bold\" }}>{children}</span>\r\n\r\nreturn(\r\n  <div>\r\n    <div>\r\n      <div>\r\n        <Span>${translate(\"click to select\")}: </Span>\r\n        <DatePicker\r\n          value={state.date}\r\n          onChange={convert}\r\n        ${\r\n          language === \"en\"\r\n            ? \"/>\"\r\n            : `  calendar={persian}\r\n          locale={persian_fa}\r\n          calendarPosition=\"bottom-right\"\r\n        />`\r\n        }\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"format\")}: </Span>\r\n        <select\r\n          value={state.format}\r\n          onChange={e => convert(state.date, e.target.value)}\r\n          className=\"select\"\r\n        >\r\n          <option>MM/DD/YYYY</option>\r\n          <option>DD-MM-YYYY</option>\r\n          <option>YYYY,MM,DD</option>\r\n          <option>dddd DD MMMM YYYY</option>\r\n          <option>ddd MMM DD YYYY HH:mm:ss</option>\r\n          <option>MMM/DD/YYYY hh:mm:ss a</option>\r\n          <option>MMM/DD/YYYY HH:mm:ss</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"gregorian\")}: </Span>\r\n        <span>{state.gregorian}</span>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"persian\")}: </Span>\r\n        <span>{state.persian}</span>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"arabic\")}: </Span>\r\n        <span>{state.arabic}</span>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"indian\")}: </Span>\r\n        <span>{state.indian}</span>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"javascript date\")}: </Span>\r\n        <span>{state.jsDate?.toString?.()}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n`,\r\n    jsx: (\r\n      <div>\r\n        <div>\r\n          <div>\r\n            <Span>{translate(\"click to select\")}: </Span>\r\n            <DatePicker value={state.date} onChange={convert} {...otherProps} />\r\n          </div>\r\n          <div>\r\n            <Span>{translate(\"format\")}: </Span>\r\n            <select\r\n              value={state.format}\r\n              onChange={(e) => convert(state.date, e.target.value)}\r\n              className=\"select\"\r\n              onBlur={() => {}}\r\n            >\r\n              <option>MM/DD/YYYY</option>\r\n              <option>DD-MM-YYYY</option>\r\n              <option>YYYY,MM,DD</option>\r\n              <option>dddd DD MMMM YYYY</option>\r\n              <option>ddd MMM DD YYYY HH:mm:ss</option>\r\n              <option>MMM/DD/YYYY hh:mm:ss a</option>\r\n              <option>MMM/DD/YYYY HH:mm:ss</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <Span>{translate(\"gregorian\")}: </Span>\r\n            <span>{state.gregorian}</span>\r\n          </div>\r\n          <div>\r\n            <Span>{translate(\"persian\")}: </Span>\r\n            <span>{state.persian}</span>\r\n          </div>\r\n          <div>\r\n            <Span>{translate(\"arabic\")}: </Span>\r\n            <span>{state.arabic}</span>\r\n          </div>\r\n          <div>\r\n            <Span>{translate(\"indian\")}: </Span>\r\n            <span>{state.indian}</span>\r\n          </div>\r\n          <div>\r\n            <Span>{translate(\"javascript date\")}: </Span>\r\n            <span>{state.jsDate?.toString?.()}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const onChangeMultiple = {\r\n    title: \"onChange (multiple mode)\",\r\n    code: `${localeImport}<DatePicker\r\n  multiple\r\n  onChange={array => { //${translate(\"Array of Dateobjecs\")}\r\n    alert(\"${translate(\"selected dates\")} :\\\\n\" + array.join(\",\\\\n\"))\r\n  }}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        multiple\r\n        onChange={(array) => {\r\n          alert(translate(\"selected dates\") + \" :\\n\" + array.join(\",\\n\"));\r\n        }}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const onOpen = {\r\n    title: \"OnOpen\",\r\n    description: \"on_open\",\r\n    code: `${localeImport}const [shouldOpenCalendar, setShouldOpenCalendar] = useState(false)\r\n.\r\n.\r\n.\r\n<div>\r\n  <DatePicker\r\n    onOpen={() => shouldOpenCalendar}\r\n  ${\r\n    language === \"en\"\r\n      ? \"/>\"\r\n      : `  calendar={persian}\r\n    locale={persian_fa}\r\n    calendarPosition=\"bottom-right\"\r\n  />`\r\n  }\r\n  <label>\r\n    <input\r\n      type=\"checkbox\"\r\n      checked={shouldOpenCalendar}\r\n      onChange={() => setShouldOpenCalendar(!shouldOpenCalendar)}\r\n    />\r\n    ${translate(\"Should open calendar\")}\r\n  </label>\r\n</div>`,\r\n    jsx: (\r\n      <div>\r\n        <DatePicker onOpen={() => shouldOpenCalendar} {...otherProps} />\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={shouldOpenCalendar}\r\n            onChange={() => setShouldOpenCalendar(!shouldOpenCalendar)}\r\n          />\r\n          {translate(\"Should open calendar\")}\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const onClose = {\r\n    title: \"OnClose\",\r\n    code: `${localeImport}const [shouldCloseCalendar, setShouldCloseCalendar] = useState(false)\r\n.\r\n.\r\n.\r\n<div>\r\n  <DatePicker\r\n    onClose={() => shouldCloseCalendar}\r\n  ${\r\n    language === \"en\"\r\n      ? \"/>\"\r\n      : `  calendar={persian}\r\n    locale={persian_fa}\r\n    calendarPosition=\"bottom-right\"\r\n  />`\r\n  }\r\n  <label>\r\n    <input\r\n      type=\"checkbox\"\r\n      checked={shouldCloseCalendar}\r\n      onChange={() => setShouldCloseCalendar(!shouldCloseCalendar)}\r\n    />\r\n    ${translate(\"Should close calendar\")}\r\n  </label>\r\n</div>`,\r\n    jsx: (\r\n      <div>\r\n        <DatePicker onClose={() => shouldCloseCalendar} {...otherProps} />\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={shouldCloseCalendar}\r\n            onChange={() => setShouldCloseCalendar(!shouldCloseCalendar)}\r\n          />\r\n          {translate(\"Should close calendar\")}\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const onPositionChange = {\r\n    title: \"onPositionChange\",\r\n    description: \"on_position_change\",\r\n    code: `${localeImport}<DatePicker\r\n  onPositionChange={data => console.log(data)}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        onPositionChange={(data) => console.log(data)}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const onPropsChange = {\r\n    title: \"onPropsChange\",\r\n    description: \"on_props_change\",\r\n    code: `${localeImport}const [props, setProps] = useState({ \r\n  value: new Date(),\r\n  format: \"MM-DD-YYYY\",\r\n  onChange: (date) => console.log(date.format()),${\r\n    language === \"en\"\r\n      ? \"\"\r\n      : `\r\n  calendar: persian,\r\n  locale: persian_fa,\r\n  calendarPosition: \"bottom-right\"`\r\n  }\r\n});\r\n.\r\n.\r\n.\r\n<DatePicker \r\n  {...props} \r\n  onPropsChange={setProps} \r\n/> `,\r\n    jsx: <DatePicker {...props} onPropsChange={setProps} />,\r\n  };\r\n\r\n  const onMonthChange = {\r\n    title: \"onMonthChange\",\r\n    description: \"on_month_change\",\r\n    code: `import React, { useState } from \"react\";\r\nimport DatePicker, { DateObject } from \"react-multi-date-picker\";\r\n${\r\n  language === \"en\"\r\n    ? \"\"\r\n    : `import persian from \"react-date-object/calendars/persian\"\r\nimport persian_fa from \"react-date-object/locales/persian_fa\"\r\n`\r\n}\r\nexport default function Example() {\r\n  const [dateObject, setDateObject] = useState(\r\n    new DateObject(${\r\n      language === \"en\"\r\n        ? \"\"\r\n        : `{\r\n      calendar: persian,\r\n      locale: persian_fa\r\n    }`\r\n    })\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DatePicker\r\n        onMonthChange={(date) => setDateObject(new DateObject(date))}\r\n        onChange={(date) => setDateObject(new DateObject(date))}\r\n        currentDate={dateObject}${\r\n          language === \"en\"\r\n            ? \"\"\r\n            : `\r\n        calendar={persian}\r\n        locale={persian_fa}\r\n        calendarPosition=\"bottom-right\"`\r\n        }\r\n      />\r\n      <p>${\r\n        language === \"en\" ? \"Selected Month\" : \"نام ماه انتخاب شده\"\r\n      }: {dateObject.month.name}</p>\r\n    </>\r\n  )\r\n}`,\r\n    jsx: (\r\n      <>\r\n        <DatePicker\r\n          onMonthChange={(date) => setDateObject(new DateObject(date))}\r\n          onChange={(date) => setDateObject(new DateObject(date))}\r\n          currentDate={dateObject}\r\n          {...otherProps}\r\n        />\r\n        <p>\r\n          {language === \"en\" ? \"Selected Month\" : \"نام ماه انتخاب شده\"}:{\" \"}\r\n          {dateObject.month.name}\r\n        </p>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  const onYearChange = {\r\n    title: \"onYearChange\",\r\n    description: \"on_year_change\",\r\n    code: `import React, { useState } from \"react\";\r\nimport DatePicker, { DateObject } from \"react-multi-date-picker\";\r\n${\r\n  language === \"en\"\r\n    ? \"\"\r\n    : `import persian from \"react-date-object/calendars/persian\"\r\nimport persian_fa from \"react-date-object/locales/persian_fa\"\r\n`\r\n}\r\nexport default function Example() {\r\n  const [value, setValue] = useState();\r\n\r\n  return (\r\n    <DatePicker\r\n      value={value}\r\n      onChange={setValue}\r\n      onYearChange={updateValue}\r\n      onMonthChange={updateValue}${\r\n        language === \"en\"\r\n          ? \"\"\r\n          : `\r\n      calendar={persian}\r\n      locale={persian_fa}\r\n      calendarPosition=\"bottom-right\"`\r\n      }\r\n    />\r\n  )\r\n\r\n  function updateValue({ year, month }) {\r\n    setValue(\r\n      new DateObject(value).set({\r\n        day: value.day > month.length ? month.length : value.day,\r\n        month,\r\n        year,\r\n      })\r\n    );\r\n  }\r\n}`,\r\n    jsx: (\r\n      <DatePicker\r\n        value={value}\r\n        onChange={setValue}\r\n        onYearChange={updateValue}\r\n        onMonthChange={updateValue}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const onFocusedDateChange = {\r\n    title: \"onFocusedDateChange\",\r\n    description: (\r\n      <>\r\n        {translate(\"focus_event_1\").map((text, index) => (\r\n          <p key={index}>{text}</p>\r\n        ))}\r\n        <ol>\r\n          {translate(\"focus_event_2\").map((text, index) => (\r\n            <li key={index}>\r\n              <p>{text}</p>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n        {translate(\"focus_event_3\").map((text, index) => (\r\n          <p key={index}>{text}</p>\r\n        ))}\r\n        <ul>\r\n          {translate(\"focus_event_4\").map((text, index) => (\r\n            <li key={index}>\r\n              <p>{text}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p>{translate(\"focus_event_5\")}</p>\r\n        <ul>\r\n          <li>\r\n            <p style={{ fontWeight: \"bold\" }}>{translate(\"focus_event_6\")}</p>\r\n            <ul>\r\n              {translate(\"focus_event_7\").map((text, index) => (\r\n                <li key={index}>\r\n                  <p>{text}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <p style={{ fontWeight: \"bold\" }}>{translate(\"focus_event_8\")}</p>\r\n            <ul>\r\n              <li>\r\n                <p>{translate(\"focus_event_9\")}</p>\r\n              </li>\r\n              <li>\r\n                <p>{translate(\"focus_event_10\")}</p>\r\n              </li>\r\n              <li>\r\n                <p>{translate(\"focus_event_11\")}</p>\r\n                <ul>\r\n                  {translate(\"focus_event_12\").map((text, index) => (\r\n                    <li key={index}>\r\n                      <p>{text}</p>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <p style={{ fontWeight: \"bold\" }}>{translate(\"focus_event_13\")}</p>\r\n            <ul>\r\n              {translate(\"focus_event_14\").map((text, index) => (\r\n                <li key={index}>\r\n                  <p>{text}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    ),\r\n    code: `import React, { useState } from \"react\";\r\nimport DatePicker from \"react-multi-date-picker\";\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\";\r\n${localeImport}${\r\n      language === \"en\"\r\n        ? `.\r\n.\r\n.\r\n`\r\n        : \"\"\r\n    }const [state, setState] = useState({});\r\n.\r\n.\r\n.\r\n<>\r\n  <DatePicker\r\n    multiple\r\n    onFocusedDateChange={(dateFocused, dateClicked) => {\r\n      setState({ dateFocused, dateClicked });\r\n    }}\r\n    onClose={() => setState({})}\r\n    plugins={[<DatePanel markFocused />]}\r\n    ${\r\n      language === \"en\"\r\n        ? \"\"\r\n        : `calendar={persian}\r\n    locale={persian_fa}\r\n    calendarPosition=\"bottom-left\"`\r\n    }\r\n  />\r\n  <div>\r\n    <p>\r\n      <b>Date focused:</b> {state.dateFocused?.format?.()}\r\n    </p>\r\n    <p>\r\n      <b>Date clicked:</b> {state.dateClicked?.format?.()}\r\n    </p>\r\n  </div>\r\n</> `,\r\n    jsx: (\r\n      <>\r\n        <DatePicker\r\n          multiple\r\n          onFocusedDateChange={(dateFocused, dateClicked) => {\r\n            setDates({ dateFocused, dateClicked });\r\n          }}\r\n          onClose={() => setDates({})}\r\n          plugins={[<DatePanel markFocused />]}\r\n          {...otherProps}\r\n        />\r\n        <div>\r\n          <p>\r\n            <b>{translate(\"Date focused\")}:</b> {dates.dateFocused?.format?.()}\r\n          </p>\r\n          <p>\r\n            <b>{translate(\"Date clicked\")}:</b> {dates.dateClicked?.format?.()}\r\n          </p>\r\n        </div>\r\n        <h4>{translate(\"See Also\")}:</h4>\r\n        <Link\r\n          to={\r\n            language === \"en\"\r\n              ? \"../plugins/panel/#customizing-focused-date\"\r\n              : \"../plugins/panel/#%D8%B4%D8%AE%D8%B5%DB%8C-%D8%B3%D8%A7%D8%B2%DB%8C-%D8%AA%D8%A7%D8%B1%DB%8C%D8%AE-%D9%85%D8%AA%D9%85%D8%B1%DA%A9%D8%B2-%D8%B4%D8%AF%D9%87\"\r\n          }\r\n        >\r\n          {language === \"en\"\r\n            ? \"DatePanel #customizing-focused-date\"\r\n            : \"پنل تاریخ ها #شخصی سازی تاریخ متمرکز شده\"}\r\n        </Link>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return [\r\n    onChangeSingle,\r\n    onChangeConvert,\r\n    onChangeMultiple,\r\n    onOpen,\r\n    onClose,\r\n    onPositionChange,\r\n    onPropsChange,\r\n    onMonthChange,\r\n    onYearChange,\r\n    onFocusedDateChange,\r\n  ];\r\n}\r\n","import React from \"react\";\r\nimport Layout from \"../components/layout/layout\";\r\nimport doc from \"../docs/events\";\r\n\r\nexport default function Events({ pageContext }) {\r\n  const language = pageContext.language || \"en\";\r\n\r\n  return <Layout language={language} doc={doc} />;\r\n}\r\n"],"sourceRoot":""}