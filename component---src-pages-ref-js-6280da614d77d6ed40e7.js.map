{"version":3,"sources":["webpack://date-picker/./src/docs/ref.js","webpack://date-picker/./src/pages/ref.js"],"names":["translate","language","otherProps","datePickerRef","useRef","ref","ref2","useState","visible","setVisible","visible2","setVisible2","shouldCloseCalendar","setShouldCloseCalendar","shouldCloseCalendar2","setShouldCloseCalendar2","title","description","code","jsx","onClick","current","openCalendar","style","margin","closeCalendar","value","placeholder","onOpen","onClose","setTimeout","refreshPosition","Ref","pageContext","doc"],"mappings":"6LAGe,SAAS,EAACA,EAAWC,EAAUC,GAC5C,IAAMC,GAAgBC,cAChBC,GAAMD,cACNE,GAAOF,cAH2C,GAI1BG,eAAS,GAAhCC,EAJiD,KAIxCC,EAJwC,QAKxBF,eAAS,GAAlCG,EALiD,KAKvCC,EALuC,QAMFJ,eAAS,GAAxDK,EANiD,KAM5BC,EAN4B,QAOAN,eAAS,GAA1DO,EAPiD,KAO3BC,EAP2B,KAmMxD,MAAO,CA1La,CAClBC,MAAO,eACPC,YAAa,0BACbC,KAAK,8NAYY,CACjBF,MAAO,2CACPC,YAAa,kBACbC,KAAK,iIAQHlB,EAAU,QARR,6DAYO,OAAbC,EAAoB,MAApB,mFAZM,6HAoBAD,EAAU,SApBV,2CAwBJmB,IAAK,2BACH,0BACEC,QAAS,kBAAMjB,EAAckB,QAAQC,iBAEpCtB,EAAU,SAEb,gBAAC,KAAD,eAAYK,IAAKF,GAAmBD,GAClC,0BACEqB,MAAO,CAAEC,OAAQ,OACjBJ,QAAS,kBAAMjB,EAAckB,QAAQI,kBAEpCzB,EAAU,aAMH,CACdgB,MAAO,mBACPC,YAAa,mBACbC,KAAK,sTAUDlB,EAAU,8CAVV,gCAWcA,EAAU,wDAXxB,6DAcWA,EAAU,oBAdrB,mHAkBS,OAAbC,EAAoB,KAApB,kFAlBI,kSAmCUD,EAAU,8BAnCpB,QAmCyDA,EAAU,mBAnCnE,0BAqCAA,EAAU,2CArCV,iCAsCeA,EAAU,wDAtCzB,6DAyCWA,EAAU,oBAzCrB,sHA6CS,OAAbC,EAAoB,KAApB,kFA7CI,+XAiEWD,EAAU,8BAjErB,QAiE0DA,EAAU,mBAjEpE,gCAoEJmB,IAAK,2BACH,0BAAKnB,EAAU,8CAAf,MACCQ,GAAW,4BAAOR,EAAU,yDAC7B,gBAAC,KAAD,eACE0B,MAAO,GACPC,YAAa3B,EAAU,oBACvBK,IAAKA,EACLuB,OAAQ,kBAAMf,GAAuB,IACrCgB,QAAS,kBAAMjB,IACXV,IAEN,0BACEkB,QAAS,WACFZ,GAGHC,GAAW,GACXI,GAAuB,GACvBiB,YAAW,WACTzB,EAAIgB,QAAQI,kBACX,KANHhB,GAAW,KAUJT,EAAVQ,EAAoB,6BAA0C,oBAEjE,0BAAKR,EAAU,2CAAf,MACCU,GAAY,4BAAOV,EAAU,yDAC9B,gBAAC,KAAD,eACE0B,MAAO,GACPC,YAAa3B,EAAU,oBACvBK,IAAKC,EACLsB,OAAQ,kBAAMb,GAAwB,IACtCc,QAAS,kBAAMf,IACXZ,IAEN,0BACEkB,QAAS,WACFV,GAMHC,GAAY,GACZI,GAAwB,GACxBe,YAAW,WACTxB,EAAKe,QAAQI,kBACZ,MATHd,GAAY,GACZmB,YAAW,WACTxB,EAAKe,QAAQU,oBACZ,OAUK/B,EAAXU,EAAqB,6BAA0C,mBAhBlE,aC9KS,SAASsB,EAAT,GAA+B,IACtC/B,EADqC,EAAfgC,YACChC,UAAY,KAEzC,OACE,gBAAC,IAAD,CAAQA,SAAUA,EAAUiC,IAAK7B","file":"component---src-pages-ref-js-6280da614d77d6ed40e7.js","sourcesContent":["import React, { useRef, useState } from \"react\"\r\nimport DatePicker from \"../../../build/index\"\r\n\r\nexport default function (translate, language, otherProps) {\r\n  const datePickerRef = useRef()\r\n  const ref = useRef()\r\n  const ref2 = useRef()\r\n  const [visible, setVisible] = useState(false)\r\n  const [visible2, setVisible2] = useState(false)\r\n  const [shouldCloseCalendar, setShouldCloseCalendar] = useState(false)\r\n  const [shouldCloseCalendar2, setShouldCloseCalendar2] = useState(false)\r\n\r\n  const description = {\r\n    title: \"Descriptions\",\r\n    description: \"forward_ref_description\",\r\n    code: `import React, { useRef } from \"react\"\r\nimport { Calendar } from \"react-multi-date-picker\"\r\n\r\nexport default function Example() {\r\n  const calendarRef = useRef()\r\n\r\n  return (\r\n    <Calendar ref={calendarRef} />\r\n  )\r\n}`\r\n  }\r\n\r\n  const datePicker = {\r\n    title: \"Opene & Close Calendar By DatePicker Ref\",\r\n    description: \"date_picker_ref\",\r\n    code: `const datePickerRef = useRef()\r\n.\r\n.\r\n.\r\n<div>\r\n  <button\r\n    onClick={() => datePickerRef.current.openCalendar()}\r\n  >\r\n    ${translate(\"open\")}\r\n  </button>\r\n  <DatePicker \r\n    ref={datePickerRef} \r\n${language === \"en\" ? \"  >\" : `    calendar=\"persian\"\r\n    locale=\"fa\"\r\n    calendarPosition=\"auto-right\"\r\n  >`}\r\n    <button\r\n      style={{ margin: \"5px\" }}\r\n      onClick={() => datePickerRef.current.closeCalendar()}\r\n    >\r\n      ${translate(\"close\")}\r\n    </button>\r\n  </DatePicker>\r\n</div>`,\r\n    jsx: <div>\r\n      <button\r\n        onClick={() => datePickerRef.current.openCalendar()}\r\n      >\r\n        {translate(\"open\")}\r\n      </button>\r\n      <DatePicker ref={datePickerRef} {...otherProps}>\r\n        <button\r\n          style={{ margin: \"5px\" }}\r\n          onClick={() => datePickerRef.current.closeCalendar()}\r\n        >\r\n          {translate(\"close\")}\r\n        </button>\r\n      </DatePicker>\r\n    </div>\r\n  }\r\n\r\n  const refresh = {\r\n    title: \"Refresh Position\",\r\n    description: \"refresh_position\",\r\n    code: `const ref = useRef()\r\nconst ref2 = useRef()\r\nconst [visible, setVisible] = useState(false)\r\nconst [visible2, setVisible2] = useState(false)\r\nconst [shouldCloseCalendar, setShouldCloseCalendar] = useState(false)\r\nconst [shouldCloseCalendar2, setShouldCloseCalendar2] = useState(false)\r\n.\r\n.\r\n.\r\n<div>\r\n  <h2>${translate(\"Example 1 (without using refresh position)\")} :</h2>\r\n  {visible && <span>${translate(\"a demo text to force the datepicker to move forward!\")}</span>}\r\n  <DatePicker\r\n    value={{}}\r\n    placeholder=\"${translate(\"first click here\")}\"\r\n    ref={ref}\r\n    onOpen={() => setShouldCloseCalendar(false)}\r\n    onClose={() => shouldCloseCalendar}\r\n  ${language === \"en\" ? \"/>\" : `  calendar=\"persian\"\r\n    locale=\"fa\"\r\n    calendarPosition=\"auto-right\"\r\n  />`}\r\n  <button\r\n    onClick={() => {\r\n      if (!visible) {\r\n        setVisible(true)\r\n      } else {\r\n        setVisible(false)\r\n        setShouldCloseCalendar(true)\r\n        setTimeout(() => {\r\n          ref.current.closeCalendar()\r\n        }, 20);\r\n      }\r\n    }}\r\n  >\r\n    {visible ? \"${translate(\"refresh and close calendar\")}\" : \"${translate(\"then click here\")}\"}\r\n  </button>\r\n  <h2>${translate(\"Example 2 (with using refresh position)\")} :</h2>\r\n  {visible2 && <span>${translate(\"a demo text to force the datepicker to move forward!\")}</span>}\r\n  <DatePicker\r\n    value={{}}\r\n    placeholder=\"${translate(\"first click here\")}\"\r\n    ref={ref2}\r\n    onOpen={() => setShouldCloseCalendar2(false)}\r\n    onClose={() => shouldCloseCalendar2}\r\n  ${language === \"en\" ? \"/>\" : `  calendar=\"persian\"\r\n    locale=\"fa\"\r\n    calendarPosition=\"auto-right\"\r\n  />`}\r\n  <button\r\n    onClick={() => {\r\n      if (!visible2) {\r\n        setVisible2(true)\r\n        setTimeout(() => {\r\n          ref2.current.refreshPosition()\r\n        }, 20);\r\n      } else {\r\n        setVisible2(false)\r\n        setShouldCloseCalendar2(true)\r\n        setTimeout(() => {\r\n          ref2.current.closeCalendar()\r\n        }, 20);\r\n      }\r\n    }}\r\n  >\r\n    {visible2 ? \"${translate(\"refresh and close calendar\")}\" : \"${translate(\"then click here\")}\"}      \r\n  </button>\r\n</div>`,\r\n    jsx: <div>\r\n      <h2>{translate(\"Example 1 (without using refresh position)\")} :</h2>\r\n      {visible && <span>{translate(\"a demo text to force the datepicker to move forward!\")}</span>}\r\n      <DatePicker\r\n        value={{}}\r\n        placeholder={translate(\"first click here\")}\r\n        ref={ref}\r\n        onOpen={() => setShouldCloseCalendar(false)}\r\n        onClose={() => shouldCloseCalendar}\r\n        {...otherProps}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          if (!visible) {\r\n            setVisible(true)\r\n          } else {\r\n            setVisible(false)\r\n            setShouldCloseCalendar(true)\r\n            setTimeout(() => {\r\n              ref.current.closeCalendar()\r\n            }, 20);\r\n          }\r\n        }}\r\n      >\r\n        {visible ? translate(\"refresh and close calendar\") : translate(\"then click here\")}\r\n      </button>\r\n      <h2>{translate(\"Example 2 (with using refresh position)\")} :</h2>\r\n      {visible2 && <span>{translate(\"a demo text to force the datepicker to move forward!\")}</span>}\r\n      <DatePicker\r\n        value={{}}\r\n        placeholder={translate(\"first click here\")}\r\n        ref={ref2}\r\n        onOpen={() => setShouldCloseCalendar2(false)}\r\n        onClose={() => shouldCloseCalendar2}\r\n        {...otherProps}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          if (!visible2) {\r\n            setVisible2(true)\r\n            setTimeout(() => {\r\n              ref2.current.refreshPosition()\r\n            }, 20);\r\n          } else {\r\n            setVisible2(false)\r\n            setShouldCloseCalendar2(true)\r\n            setTimeout(() => {\r\n              ref2.current.closeCalendar()\r\n            }, 20);\r\n          }\r\n        }}\r\n      >\r\n        {visible2 ? translate(\"refresh and close calendar\") : translate(\"then click here\")}      </button>\r\n    </div>\r\n  }\r\n\r\n  return [\r\n    description,\r\n    datePicker,\r\n    refresh\r\n  ]\r\n}","import React from \"react\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport ref from \"../docs/ref\"\r\n\r\nexport default function Ref({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={ref} />\r\n  )\r\n}"],"sourceRoot":""}