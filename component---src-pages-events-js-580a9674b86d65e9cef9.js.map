{"version":3,"sources":["webpack://date-picker/./src/docs/events.js","webpack://date-picker/./src/pages/events.js"],"names":["translate","language","otherProps","useState","format","state","setState","date","gregorian","persian","arabic","indian","jsDate","convert","object","DateObject","toDate","Span","children","style","fontWeight","shouldCloseCalendar","setShouldCloseCalendar","shouldOpenCalendar","setShouldOpenCalendar","title","description","code","jsx","value","onChange","e","target","className","onBlur","toString","multiple","array","alert","join","onOpen","type","checked","onClose","onPositionChange","data","console","log","Events","pageContext","doc","events"],"mappings":"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","file":"component---src-pages-events-js-580a9674b86d65e9cef9.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport DatePicker, { DateObject } from \"../../../build/index\"\r\n\r\nexport default function (translate, language, otherProps) {\r\n  const [state, setState] = useState({ format: \"MM/DD/YYYY\" })\r\n\r\n  const {\r\n    date,\r\n    format,\r\n    gregorian = \"\",\r\n    persian = \"\",\r\n    arabic = \"\",\r\n    indian = \"\",\r\n    jsDate = \"\"\r\n  } = state\r\n\r\n  const convert = (date, format = state.format) => {\r\n    let object = { date, format }\r\n\r\n    setState({\r\n      gregorian: new DateObject(object).convert(\"gregorian\").format(),\r\n      persian: new DateObject(object).convert(\"persian\").format(),\r\n      arabic: new DateObject(object).convert(\"arabic\").format(),\r\n      indian: new DateObject(object).convert(\"indian\").format(),\r\n      jsDate: date.toDate(),\r\n      ...object\r\n    })\r\n  }\r\n\r\n  const Span = ({ children }) => <span style={{ fontWeight: \"bold\" }}>{children}</span>\r\n\r\n  const [shouldCloseCalendar, setShouldCloseCalendar] = useState(false)\r\n  const [shouldOpenCalendar, setShouldOpenCalendar] = useState(false)\r\n\r\n  const onChangeSingle = {\r\n    title: \"On Change (single mode)\",\r\n    description: \"on_change\",\r\n    code: `const [state, setState] = useState({ format: \"MM/DD/YYYY\" })\r\n\r\nconst {\r\n  date,\r\n  format,\r\n  gregorian = \"\",\r\n  persian = \"\",\r\n  arabic = \"\",\r\n  indian = \"\",\r\n  jsDate = \"\"\r\n} = state\r\n  \r\nconst convert = (date, format = state.format) => {\r\n  let object = { date, format }\r\n  \r\n  setState({\r\n    gregorian: new DateObject(object)${language === \"en\" ? \"\" : `.convert(\"gregorian\")`}.format(),\r\n    persian: new DateObject(object)${language === \"en\" ? `.convert(\"persian\")` : \"\"}.format(),\r\n    arabic: new DateObject(object).convert(\"arabic\").format(),\r\n    indian: new DateObject(object).convert(\"indian\").format(),\r\n    jsDate: date.toDate(),\r\n    ...object\r\n  })\r\n}\r\n  \r\nconst Span = ({ children }) => <span style={{ fontWeight: \"bold\" }}>{children}</span>\r\n\r\nreturn(\r\n  <div>\r\n    <div>\r\n      <div>\r\n        <Span>${translate(\"click to select\")}: </Span>\r\n        <DatePicker\r\n          value={date}\r\n          onChange={convert}\r\n        ${language === \"en\" ? \"/>\" : `  calendar=\"persian\"\r\n          locale=\"fa\"\r\n          calendarPosition=\"auto-right\"\r\n        />`}\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"format\")}: </Span>\r\n        <select\r\n          value={format}\r\n          onChange={e => convert(date, e.target.value)}\r\n          className=\"select\"\r\n        >\r\n          <option>MM/DD/YYYY</option>\r\n          <option>DD-MM-YYYY</option>\r\n          <option>YYYY,MM,DD</option>\r\n          <option>dddd DD MMMM YYYY</option>\r\n          <option>ddd MMM DD YYYY HH:mm:ss</option>\r\n          <option>MMM/DD/YYYY hh:mm:ss a</option>\r\n          <option>MMM/DD/YYYY HH:mm:ss</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"gregorian\")}: </Span>\r\n        <span>{gregorian}</span>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"persian\")}: </Span>\r\n        <span>{persian}</span>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"arabic\")}: </Span>\r\n        <span>{arabic}</span>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"indian\")}: </Span>\r\n        <span>{indian}</span>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"javascript date\")}: </Span>\r\n        <span>{jsDate.toString()}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n`,\r\n    jsx: <div>\r\n      <div>\r\n        <div>\r\n          <Span>{translate(\"click to select\")}: </Span>\r\n          <DatePicker\r\n            value={date}\r\n            onChange={convert}\r\n            {...otherProps}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Span>{translate(\"format\")}: </Span>\r\n          <select\r\n            value={format}\r\n            onChange={e => convert(date, e.target.value)}\r\n            className=\"select\"\r\n            onBlur={() => { }}\r\n          >\r\n            <option>MM/DD/YYYY</option>\r\n            <option>DD-MM-YYYY</option>\r\n            <option>YYYY,MM,DD</option>\r\n            <option>dddd DD MMMM YYYY</option>\r\n            <option>ddd MMM DD YYYY HH:mm:ss</option>\r\n            <option>MMM/DD/YYYY hh:mm:ss a</option>\r\n            <option>MMM/DD/YYYY HH:mm:ss</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <Span>{translate(\"gregorian\")}: </Span>\r\n          <span>{gregorian}</span>\r\n        </div>\r\n        <div>\r\n          <Span>{translate(\"persian\")}: </Span>\r\n          <span>{persian}</span>\r\n        </div>\r\n        <div>\r\n          <Span>{translate(\"arabic\")}: </Span>\r\n          <span>{arabic}</span>\r\n        </div>\r\n        <div>\r\n          <Span>{translate(\"indian\")}: </Span>\r\n          <span>{indian}</span>\r\n        </div>\r\n        <div>\r\n          <Span>{translate(\"javascript date\")}: </Span>\r\n          <span>{jsDate.toString()}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  const onChangeMultiple = {\r\n    title: \"On Change (multiple mode)\",\r\n    code: `<DatePicker\r\n  multiple\r\n  onChange={array => { //${translate(\"Array of Dateobjecs\")}\r\n    alert(\"${translate(\"selected dates\")} :\\\\n\" + array.join(\",\\\\n\"))\r\n  }}\r\n/>`,\r\n    jsx: <DatePicker\r\n      multiple\r\n      onChange={array => {\r\n        alert(translate(\"selected dates\") + \" :\\n\" + array.join(\",\\n\"))\r\n      }}\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  const onOpen = {\r\n    title: \"OnOpen\",\r\n    description: \"on_open\",\r\n    code: `const [shouldOpenCalendar, setShouldOpenCalendar] = useState(false)\r\n.\r\n.\r\n.\r\n<div>\r\n  <DatePicker\r\n    onOpen={() => shouldOpenCalendar}\r\n  ${language === \"en\" ? \"/>\" : `  calendar=\"persian\"\r\n    locale=\"fa\"\r\n    calendarPosition=\"auto-right\"\r\n  />`}\r\n  <label>\r\n    <input\r\n      type=\"checkbox\"\r\n      checked={shouldOpenCalendar}\r\n      onChange={() => setShouldOpenCalendar(!shouldOpenCalendar)}\r\n    />\r\n    ${translate(\"Should open calendar\")}\r\n  </label>\r\n</div>`,\r\n    jsx: <div>\r\n      <DatePicker\r\n        onOpen={() => shouldOpenCalendar}\r\n        {...otherProps}\r\n      />\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={shouldOpenCalendar}\r\n          onChange={() => setShouldOpenCalendar(!shouldOpenCalendar)}\r\n        />\r\n        {translate(\"Should open calendar\")}\r\n      </label>\r\n    </div>\r\n  }\r\n\r\n  const onClose = {\r\n    title: \"OnClose\",\r\n    code: `const [shouldCloseCalendar, setShouldCloseCalendar] = useState(false)\r\n.\r\n.\r\n.\r\n<div>\r\n  <DatePicker\r\n    onClose={() => shouldCloseCalendar}\r\n  ${language === \"en\" ? \"/>\" : `  calendar=\"persian\"\r\n    locale=\"fa\"\r\n    calendarPosition=\"auto-right\"\r\n  />`}\r\n  <label>\r\n    <input\r\n      type=\"checkbox\"\r\n      checked={shouldCloseCalendar}\r\n      onChange={() => setShouldCloseCalendar(!shouldCloseCalendar)}\r\n    />\r\n    ${translate(\"Should close calendar\")}\r\n  </label>\r\n</div>`,\r\n    jsx: <div>\r\n      <DatePicker\r\n        onClose={() => shouldCloseCalendar}\r\n        {...otherProps}\r\n      />\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={shouldCloseCalendar}\r\n          onChange={() => setShouldCloseCalendar(!shouldCloseCalendar)}\r\n        />\r\n        {translate(\"Should close calendar\")}\r\n      </label>\r\n    </div>\r\n  }\r\n\r\n  const onPositionChange = {\r\n    title: \"onPositionChange\",\r\n    description: \"on_position_change\",\r\n    code: `<DatePicker\r\n  onPositionChange={data => console.log(data)}\r\n/>`,\r\n    jsx: <DatePicker\r\n      onPositionChange={data => console.log(data)}\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  return [\r\n    onChangeSingle,\r\n    onChangeMultiple,\r\n    onOpen,\r\n    onClose,\r\n    onPositionChange\r\n  ]\r\n}","import React from \"react\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport events from \"../docs/events\"\r\n\r\nexport default function Events({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={events} />\r\n  )\r\n}"],"sourceRoot":""}