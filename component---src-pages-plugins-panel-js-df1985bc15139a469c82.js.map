{"version":3,"sources":["webpack://date-picker/./src/docs/plugins/panel.js","webpack://date-picker/./src/pages/plugins/panel.js"],"names":["translate","language","otherProps","useState","DateObject","calendar","add","value","setValue","value1","setValue1","value2","setValue2","map","day","setDay","value3","setValue3","title","description","jsx","code","onChange","multiple","plugins","sort","position","removeButton","onDateClicked","dateObject","window","confirm","filter","date","Panel","pageContext","doc","panel","section"],"mappings":"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","file":"component---src-pages-plugins-panel-js-df1985bc15139a469c82.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport DatePicker, { DateObject } from \"../../../../build/index\"\r\nimport DatePanel from \"../../../../plugins/date_panel\"\r\n\r\nexport default function (translate, language, otherProps) {\r\n  const [value, setValue] = useState([\r\n    new DateObject({ calendar: language === \"en\" ? \"gregorian\" : \"persian\" }),\r\n    new DateObject({ calendar: language === \"en\" ? \"gregorian\" : \"persian\" }).add(2, \"days\"),\r\n    new DateObject({ calendar: language === \"en\" ? \"gregorian\" : \"persian\" }).add(10, \"days\")\r\n  ])\r\n\r\n  const [value1, setValue1] = useState([new DateObject({ calendar: language === \"en\" ? \"gregorian\" : \"persian\" }), new DateObject({ calendar: language === \"en\" ? \"gregorian\" : \"persian\" }).add(1, \"day\")])\r\n  const [value2, setValue2] = useState([new DateObject({ calendar: language === \"en\" ? \"gregorian\" : \"persian\" }), new DateObject({ calendar: language === \"en\" ? \"gregorian\" : \"persian\" }).add(1, \"day\")])\r\n  const [value3, setValue3] = useState([5, 10, 15, 20, 25, 30].map(day => new DateObject({ calendar: language === \"en\" ? \"gregorian\" : \"persian\" }).setDay(day)))\r\n\r\n  const props = {\r\n    title: \"Props\",\r\n    description: <table>\r\n      <thead>\r\n        <tr>\r\n          <th>{translate(\"Prop\")}</th>\r\n          <th>{translate(\"Type\")}</th>\r\n          <th>{translate(\"Default\")}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>sort</td>\r\n          <td>String</td>\r\n          <td>\"\"</td>\r\n        </tr>\r\n        <tr>\r\n          <td>eachDaysInRange</td>\r\n          <td>Boolean</td>\r\n          <td>false</td>\r\n        </tr>\r\n        <tr>\r\n          <td>onDateClicked</td>\r\n          <td>Function</td>\r\n          <td>undefined</td>\r\n        </tr>\r\n        <tr>\r\n          <td>removeButton</td>\r\n          <td>Boolean</td>\r\n          <td>true</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  }\r\n\r\n  const sort = {\r\n    title: \"Sort\",\r\n    jsx: <ul>\r\n      <li>date</li>\r\n      <li>color</li>\r\n    </ul>\r\n  }\r\n\r\n  const sortByDate = {\r\n    title: \"Sort By Date\",\r\n    code: `import DatePicker, { DateObject } from \"react-multi-date-picker\"\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\" \r\n.\r\n.\r\n.\r\nconst [value, setValue] = useState([\r\n  new DateObject(${language === \"en\" ? \"\" : `{ calendar: \"persian\" }`}),\r\n  new DateObject(${language === \"en\" ? \"\" : `{ calendar: \"persian\" }`}).add(2, \"days\"),\r\n  new DateObject(${language === \"en\" ? \"\" : `{ calendar: \"persian\" }`}).add(10, \"days\")\r\n])\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={value}\r\n  onChange={setValue}\r\n  multiple\r\n  plugins={[\r\n    <DatePanel sort=\"date\" ${language === \"en\" ? \"\" : `position=\"left\" `}/>\r\n  ]}\r\n/>`,\r\n    jsx: <DatePicker\r\n      value={value}\r\n      onChange={setValue}\r\n      multiple\r\n      plugins={[\r\n        <DatePanel sort=\"date\" position={language === \"en\" ? \"right\" : \"left\"} />\r\n      ]}\r\n      {...otherProps}\r\n    />\r\n\r\n  }\r\n\r\n  const bottom = {\r\n    title: \"Position \" + (language === \"en\" ? \"Left\" : \"Right\"),\r\n    code: `import DatePicker, { DateObject } from \"react-multi-date-picker\"\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\" \r\n.\r\n.\r\n.\r\nconst [value, setValue] = useState(\r\n  [\r\n    5, \r\n    10,\r\n    15,\r\n    20,\r\n    25,\r\n    30\r\n  ].map(day => new DateObject(${language === \"en\" ? \"\" : `{ calendar: \"persian\" }`}).setDay(day))\r\n)\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={value}\r\n  onChange={setValue}\r\n  multiple\r\n  plugins={[\r\n    <DatePanel position=\"${language === \"en\" ? \"left\" : \"right\"}\" />\r\n  ]}\r\n/>`,\r\n    jsx: <DatePicker\r\n      value={value3}\r\n      onChange={setValue3}\r\n      multiple\r\n      plugins={[\r\n        <DatePanel position={language === \"en\" ? \"left\" : \"right\"} />\r\n      ]}\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  const withoutButton = {\r\n    title: \"Without Remove Button\",\r\n    code: `import DatePicker, { DateObject } from \"react-multi-date-picker\"\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\" \r\n.\r\n.\r\n.\r\nconst [value, setValue] = useState([\r\n  new DateObject(${language === \"en\" ? \"\" : `{ calendar: \"persian\" }`}), \r\n  new DateObject(${language === \"en\" ? \"\" : `{ calendar: \"persian\" }`}).add(1, \"day\")\r\n])\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={value}\r\n  onChange={setValue}\r\n  plugins={[\r\n    <DatePanel\r\n      removeButton={false}\r\n    ${language === \"en\" ? \"/>\" : `  position=\"left\" \r\n    />`}\r\n  ]}\r\n/>`,\r\n    jsx: <DatePicker\r\n      value={value1}\r\n      onChange={setValue1}\r\n      plugins={[\r\n        <DatePanel\r\n          removeButton={false}\r\n          position={language === \"en\" ? \"right\" : \"left\"}\r\n        />\r\n      ]}\r\n      {...otherProps}\r\n    />\r\n\r\n  }\r\n\r\n  const clickListener = {\r\n    title: \"Date Click Listener\",\r\n    code: `import DatePicker, { DateObject } from \"react-multi-date-picker\"\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\" \r\n.\r\n.\r\n.\r\nconst [value, setValue] = useState([\r\n  new DateObject(${language === \"en\" ? \"\" : `{ calendar: \"persian\" }`}), \r\n  new DateObject(${language === \"en\" ? \"\" : `{ calendar: \"persian\" }`}).add(1, \"day\")\r\n])\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={value}\r\n  onChange={setValue}\r\n  plugins={[\r\n    <DatePanel\r\n      removeButton={false}\r\n      onDateClicked={dateObject => {\r\n        let mustDelete = window.confirm(\"${translate(\"are you sure you want to delete this date ?\")}\")\r\n      \r\n        if (mustDelete) setValue(\r\n          value.filter(date => date !== dateObject)\r\n        )\r\n      }}\r\n    ${language === \"en\" ? \"/>\" : `  position=\"left\" \r\n    />`}\r\n  ]}\r\n/>`,\r\n    jsx: <DatePicker\r\n      value={value2}\r\n      onChange={setValue2}\r\n      plugins={[\r\n        <DatePanel\r\n          removeButton={false}\r\n          onDateClicked={dateObject => {\r\n            let mustDelete = window.confirm(translate(\"are you sure you want to delete this date ?\"))\r\n\r\n            if (mustDelete) {\r\n              setValue2(value2.filter(date => date !== dateObject))\r\n            }\r\n          }}\r\n          position={language === \"en\" ? \"right\" : \"left\"}\r\n        />\r\n      ]}\r\n      {...otherProps}\r\n    />\r\n\r\n  }\r\n\r\n  return [\r\n    props,\r\n    sort,\r\n    sortByDate,\r\n    bottom,\r\n    withoutButton,\r\n    clickListener\r\n  ]\r\n}","import React from \"react\"\r\nimport Layout from \"../../components/layout/layout\"\r\nimport panel from \"../../docs/plugins/panel\"\r\n\r\nexport default function Panel({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={panel} section=\"plugins\" />\r\n  )\r\n}"],"sourceRoot":""}