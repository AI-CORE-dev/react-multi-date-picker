{"version":3,"sources":["webpack://date-picker/./src/docs/events.js","webpack://date-picker/./src/pages/events.js"],"names":["Events","translate","language","otherProps","useState","format","state","setState","value","Date","onChange","date","console","log","props","setProps","DateObject","calendar","locale","dateObject","setDateObject","gregorian","persian","arabic","indian","jsDate","convert","object","toDate","Span","children","style","fontWeight","shouldCloseCalendar","setShouldCloseCalendar","shouldOpenCalendar","setShouldOpenCalendar","dates","setDates","title","description","code","jsx","e","target","className","onBlur","toString","multiple","array","alert","join","onOpen","type","checked","onClose","onPositionChange","data","onPropsChange","onMonthChange","currentDate","month","name","map","text","index","key","onFocusedDateChange","dateFocused","dateClicked","plugins","markFocused","Link","to","pageContext","doc"],"mappings":"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","file":"component---src-pages-events-js-dc8536903e9a9ad0772d.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport DatePicker, { DateObject } from \"../../../build/index\";\r\nimport DatePanel from \"../../../plugins/date_panel\";\r\nimport { Link } from \"gatsby\";\r\n\r\nexport default function Events(translate, language, otherProps) {\r\n  const [state, setState] = useState({ format: \"MM/DD/YYYY\" });\r\n  const [props, setProps] = useState({\r\n    value: new Date(),\r\n    format: \"MM-DD-YYYY\",\r\n    onChange: (date) => console.log(date.format()),\r\n    ...otherProps,\r\n  });\r\n  const [dateObject, setDateObject] = useState(\r\n    new DateObject({\r\n      calendar: language === \"en\" ? \"gregorian\" : \"persian\",\r\n      locale: language,\r\n    })\r\n  );\r\n\r\n  const {\r\n    date,\r\n    format,\r\n    gregorian = \"\",\r\n    persian = \"\",\r\n    arabic = \"\",\r\n    indian = \"\",\r\n    jsDate = \"\",\r\n  } = state;\r\n\r\n  const convert = (date, format = state.format) => {\r\n    let object = { date, format };\r\n\r\n    setState({\r\n      gregorian: new DateObject(object).convert(\"gregorian\").format(),\r\n      persian: new DateObject(object).convert(\"persian\").format(),\r\n      arabic: new DateObject(object).convert(\"arabic\").format(),\r\n      indian: new DateObject(object).convert(\"indian\").format(),\r\n      jsDate: date.toDate(),\r\n      ...object,\r\n    });\r\n  };\r\n\r\n  const Span = ({ children }) => (\r\n    <span style={{ fontWeight: \"bold\" }}>{children}</span>\r\n  );\r\n\r\n  const [shouldCloseCalendar, setShouldCloseCalendar] = useState(false);\r\n  const [shouldOpenCalendar, setShouldOpenCalendar] = useState(false);\r\n  const [dates, setDates] = useState({});\r\n\r\n  const onChangeSingle = {\r\n    title: \"onChange (single mode)\",\r\n    description: \"on_change\",\r\n    code: `const [state, setState] = useState({ format: \"MM/DD/YYYY\" })\r\n\r\nconst {\r\n  date,\r\n  format,\r\n  gregorian = \"\",\r\n  persian = \"\",\r\n  arabic = \"\",\r\n  indian = \"\",\r\n  jsDate = \"\"\r\n} = state\r\n  \r\nconst convert = (date, format = state.format) => {\r\n  let object = { date, format }\r\n  \r\n  setState({\r\n    gregorian: new DateObject(object)${\r\n      language === \"en\" ? \"\" : `.convert(\"gregorian\")`\r\n    }.format(),\r\n    persian: new DateObject(object)${\r\n      language === \"en\" ? `.convert(\"persian\")` : \"\"\r\n    }.format(),\r\n    arabic: new DateObject(object).convert(\"arabic\").format(),\r\n    indian: new DateObject(object).convert(\"indian\").format(),\r\n    jsDate: date.toDate(),\r\n    ...object\r\n  })\r\n}\r\n  \r\nconst Span = ({ children }) => <span style={{ fontWeight: \"bold\" }}>{children}</span>\r\n\r\nreturn(\r\n  <div>\r\n    <div>\r\n      <div>\r\n        <Span>${translate(\"click to select\")}: </Span>\r\n        <DatePicker\r\n          value={date}\r\n          onChange={convert}\r\n        ${\r\n          language === \"en\"\r\n            ? \"/>\"\r\n            : `  calendar=\"persian\"\r\n          locale=\"fa\"\r\n          calendarPosition=\"auto-right\"\r\n        />`\r\n        }\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"format\")}: </Span>\r\n        <select\r\n          value={format}\r\n          onChange={e => convert(date, e.target.value)}\r\n          className=\"select\"\r\n        >\r\n          <option>MM/DD/YYYY</option>\r\n          <option>DD-MM-YYYY</option>\r\n          <option>YYYY,MM,DD</option>\r\n          <option>dddd DD MMMM YYYY</option>\r\n          <option>ddd MMM DD YYYY HH:mm:ss</option>\r\n          <option>MMM/DD/YYYY hh:mm:ss a</option>\r\n          <option>MMM/DD/YYYY HH:mm:ss</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"gregorian\")}: </Span>\r\n        <span>{gregorian}</span>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"persian\")}: </Span>\r\n        <span>{persian}</span>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"arabic\")}: </Span>\r\n        <span>{arabic}</span>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"indian\")}: </Span>\r\n        <span>{indian}</span>\r\n      </div>\r\n      <div>\r\n        <Span>${translate(\"javascript date\")}: </Span>\r\n        <span>{jsDate.toString()}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n`,\r\n    jsx: (\r\n      <div>\r\n        <div>\r\n          <div>\r\n            <Span>{translate(\"click to select\")}: </Span>\r\n            <DatePicker value={date} onChange={convert} {...otherProps} />\r\n          </div>\r\n          <div>\r\n            <Span>{translate(\"format\")}: </Span>\r\n            <select\r\n              value={format}\r\n              onChange={(e) => convert(date, e.target.value)}\r\n              className=\"select\"\r\n              onBlur={() => {}}\r\n            >\r\n              <option>MM/DD/YYYY</option>\r\n              <option>DD-MM-YYYY</option>\r\n              <option>YYYY,MM,DD</option>\r\n              <option>dddd DD MMMM YYYY</option>\r\n              <option>ddd MMM DD YYYY HH:mm:ss</option>\r\n              <option>MMM/DD/YYYY hh:mm:ss a</option>\r\n              <option>MMM/DD/YYYY HH:mm:ss</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <Span>{translate(\"gregorian\")}: </Span>\r\n            <span>{gregorian}</span>\r\n          </div>\r\n          <div>\r\n            <Span>{translate(\"persian\")}: </Span>\r\n            <span>{persian}</span>\r\n          </div>\r\n          <div>\r\n            <Span>{translate(\"arabic\")}: </Span>\r\n            <span>{arabic}</span>\r\n          </div>\r\n          <div>\r\n            <Span>{translate(\"indian\")}: </Span>\r\n            <span>{indian}</span>\r\n          </div>\r\n          <div>\r\n            <Span>{translate(\"javascript date\")}: </Span>\r\n            <span>{jsDate.toString()}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const onChangeMultiple = {\r\n    title: \"onChange (multiple mode)\",\r\n    code: `<DatePicker\r\n  multiple\r\n  onChange={array => { //${translate(\"Array of Dateobjecs\")}\r\n    alert(\"${translate(\"selected dates\")} :\\\\n\" + array.join(\",\\\\n\"))\r\n  }}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        multiple\r\n        onChange={(array) => {\r\n          alert(translate(\"selected dates\") + \" :\\n\" + array.join(\",\\n\"));\r\n        }}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const onOpen = {\r\n    title: \"OnOpen\",\r\n    description: \"on_open\",\r\n    code: `const [shouldOpenCalendar, setShouldOpenCalendar] = useState(false)\r\n.\r\n.\r\n.\r\n<div>\r\n  <DatePicker\r\n    onOpen={() => shouldOpenCalendar}\r\n  ${\r\n    language === \"en\"\r\n      ? \"/>\"\r\n      : `  calendar=\"persian\"\r\n    locale=\"fa\"\r\n    calendarPosition=\"auto-right\"\r\n  />`\r\n  }\r\n  <label>\r\n    <input\r\n      type=\"checkbox\"\r\n      checked={shouldOpenCalendar}\r\n      onChange={() => setShouldOpenCalendar(!shouldOpenCalendar)}\r\n    />\r\n    ${translate(\"Should open calendar\")}\r\n  </label>\r\n</div>`,\r\n    jsx: (\r\n      <div>\r\n        <DatePicker onOpen={() => shouldOpenCalendar} {...otherProps} />\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={shouldOpenCalendar}\r\n            onChange={() => setShouldOpenCalendar(!shouldOpenCalendar)}\r\n          />\r\n          {translate(\"Should open calendar\")}\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const onClose = {\r\n    title: \"OnClose\",\r\n    code: `const [shouldCloseCalendar, setShouldCloseCalendar] = useState(false)\r\n.\r\n.\r\n.\r\n<div>\r\n  <DatePicker\r\n    onClose={() => shouldCloseCalendar}\r\n  ${\r\n    language === \"en\"\r\n      ? \"/>\"\r\n      : `  calendar=\"persian\"\r\n    locale=\"fa\"\r\n    calendarPosition=\"auto-right\"\r\n  />`\r\n  }\r\n  <label>\r\n    <input\r\n      type=\"checkbox\"\r\n      checked={shouldCloseCalendar}\r\n      onChange={() => setShouldCloseCalendar(!shouldCloseCalendar)}\r\n    />\r\n    ${translate(\"Should close calendar\")}\r\n  </label>\r\n</div>`,\r\n    jsx: (\r\n      <div>\r\n        <DatePicker onClose={() => shouldCloseCalendar} {...otherProps} />\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={shouldCloseCalendar}\r\n            onChange={() => setShouldCloseCalendar(!shouldCloseCalendar)}\r\n          />\r\n          {translate(\"Should close calendar\")}\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const onPositionChange = {\r\n    title: \"onPositionChange\",\r\n    description: \"on_position_change\",\r\n    code: `<DatePicker\r\n  onPositionChange={data => console.log(data)}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        onPositionChange={(data) => console.log(data)}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const onPropsChange = {\r\n    title: \"onPropsChange\",\r\n    description: \"on_props_change\",\r\n    code: `const [props, setProps] = useState({ \r\n  value: new Date(),\r\n  format: \"MM-DD-YYYY\",\r\n  onChange: (date) => console.log(date.format()),${\r\n    language === \"en\"\r\n      ? \"\"\r\n      : `\r\n  calendar: \"persian\",\r\n  locale: \"fa\",\r\n  calendarPosition: \"bottom-right\"`\r\n  }\r\n});\r\n.\r\n.\r\n.\r\n<DatePicker \r\n  {...props} \r\n  onPropsChange={setProps} \r\n/> `,\r\n    jsx: <DatePicker {...props} onPropsChange={setProps} />,\r\n  };\r\n\r\n  const onMonthChange = {\r\n    title: \"onMonthChange\",\r\n    description: \"on_month_change\",\r\n    code: `import React, { useState } from \"react\";\r\nimport DatePicker, { DateObject } from \"react-multi-date-picker\";\r\n\r\nexport default function Example() {\r\n  const [dateObject, setDateObject] = useState(\r\n    new DateObject(${\r\n      language === \"en\"\r\n        ? \"\"\r\n        : `{\r\n      calendar: \"persian\",\r\n      locale: \"fa\"\r\n    }`\r\n    })\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DatePicker\r\n        onMonthChange={(date) => setDateObject(new DateObject(date))}\r\n        onChange={(date) => setDateObject(new DateObject(date))}\r\n        currentDate={dateObject}\r\n      />\r\n      <p>${\r\n        language === \"en\" ? \"Selected Month\" : \"نام ماه انتخاب شده\"\r\n      }: {dateObject.month.name}</p>\r\n    </>\r\n  )\r\n}`,\r\n    jsx: (\r\n      <>\r\n        <DatePicker\r\n          onMonthChange={(date) => setDateObject(new DateObject(date))}\r\n          onChange={(date) => setDateObject(new DateObject(date))}\r\n          currentDate={dateObject}\r\n          {...otherProps}\r\n        />\r\n        <p>\r\n          {language === \"en\" ? \"Selected Month\" : \"نام ماه انتخاب شده\"}:{\" \"}\r\n          {dateObject.month.name}\r\n        </p>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  const onFocusedDateChange = {\r\n    title: \"onFocusedDateChange\",\r\n    description: (\r\n      <>\r\n        {translate(\"focus_event_1\").map((text, index) => (\r\n          <p key={index}>{text}</p>\r\n        ))}\r\n        <ol>\r\n          {translate(\"focus_event_2\").map((text, index) => (\r\n            <li key={index}>\r\n              <p>{text}</p>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n        {translate(\"focus_event_3\").map((text, index) => (\r\n          <p key={index}>{text}</p>\r\n        ))}\r\n        <ul>\r\n          {translate(\"focus_event_4\").map((text, index) => (\r\n            <li key={index}>\r\n              <p>{text}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p>{translate(\"focus_event_5\")}</p>\r\n        <ul>\r\n          <li>\r\n            <p style={{ fontWeight: \"bold\" }}>{translate(\"focus_event_6\")}</p>\r\n            <ul>\r\n              {translate(\"focus_event_7\").map((text, index) => (\r\n                <li key={index}>\r\n                  <p>{text}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <p style={{ fontWeight: \"bold\" }}>{translate(\"focus_event_8\")}</p>\r\n            <ul>\r\n              <li>\r\n                <p>{translate(\"focus_event_9\")}</p>\r\n              </li>\r\n              <li>\r\n                <p>{translate(\"focus_event_10\")}</p>\r\n              </li>\r\n              <li>\r\n                <p>{translate(\"focus_event_11\")}</p>\r\n                <ul>\r\n                  {translate(\"focus_event_12\").map((text, index) => (\r\n                    <li key={index}>\r\n                      <p>{text}</p>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <p style={{ fontWeight: \"bold\" }}>{translate(\"focus_event_13\")}</p>\r\n            <ul>\r\n              {translate(\"focus_event_14\").map((text, index) => (\r\n                <li key={index}>\r\n                  <p>{text}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    ),\r\n    code: `import React, { useState } from \"react\";\r\nimport DatePicker from \"react-multi-date-picker\";\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\";\r\n.\r\n.\r\n.\r\nconst [state, setState] = useState({});\r\n.\r\n.\r\n.\r\n<>\r\n  <DatePicker\r\n    multiple\r\n    onFocusedDateChange={(dateFocused, dateClicked) => {\r\n      setState({ dateFocused, dateClicked });\r\n    }}\r\n    onClose={() => setState({})}\r\n    plugins={[<DatePanel markFocused />]}\r\n    ${\r\n      language === \"en\"\r\n        ? \"\"\r\n        : `calendar=\"persian\"\r\n    locale=\"fa\"\r\n    calendarPosition=\"bottom-left\"`\r\n    }\r\n  />\r\n  <div>\r\n    <p>\r\n      <b>Date focused:</b> {state.dateFocused?.format?.()}\r\n    </p>\r\n    <p>\r\n      <b>Date clicked:</b> {state.dateClicked?.format?.()}\r\n    </p>\r\n  </div>\r\n</> `,\r\n    jsx: (\r\n      <>\r\n        <DatePicker\r\n          multiple\r\n          onFocusedDateChange={(dateFocused, dateClicked) => {\r\n            setDates({ dateFocused, dateClicked });\r\n          }}\r\n          onClose={() => setDates({})}\r\n          plugins={[<DatePanel markFocused />]}\r\n          {...otherProps}\r\n        />\r\n        <div>\r\n          <p>\r\n            <b>{translate(\"Date focused\")}:</b> {dates.dateFocused?.format?.()}\r\n          </p>\r\n          <p>\r\n            <b>{translate(\"Date clicked\")}:</b> {dates.dateClicked?.format?.()}\r\n          </p>\r\n        </div>\r\n        <h4>{translate(\"See Also\")}:</h4>\r\n        <Link\r\n          to={\r\n            language === \"en\"\r\n              ? \"../plugins/panel/#customizing-focused-date\"\r\n              : \"../plugins/panel/#%D8%B4%D8%AE%D8%B5%DB%8C-%D8%B3%D8%A7%D8%B2%DB%8C-%D8%AA%D8%A7%D8%B1%DB%8C%D8%AE-%D9%85%D8%AA%D9%85%D8%B1%DA%A9%D8%B2-%D8%B4%D8%AF%D9%87\"\r\n          }\r\n        >\r\n          {language === \"en\"\r\n            ? \"DatePanel #customizing-focused-date\"\r\n            : \"پنل تاریخ ها #شخصی سازی تاریخ متمرکز شده\"}\r\n        </Link>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return [\r\n    onChangeSingle,\r\n    onChangeMultiple,\r\n    onOpen,\r\n    onClose,\r\n    onPositionChange,\r\n    onPropsChange,\r\n    onMonthChange,\r\n    onFocusedDateChange,\r\n  ];\r\n}\r\n","import React from \"react\";\r\nimport Layout from \"../components/layout/layout\";\r\nimport doc from \"../docs/events\";\r\n\r\nexport default function Events({ pageContext }) {\r\n  const language = pageContext.language || \"en\";\r\n\r\n  return <Layout language={language} doc={doc} />;\r\n}\r\n"],"sourceRoot":""}