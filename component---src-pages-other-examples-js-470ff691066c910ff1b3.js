(self.webpackChunkdate_picker=self.webpackChunkdate_picker||[]).push([[430],{6858:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return l}});var a=t(7294),i=t(316),c=t(7821);function r(e,n,t){var i,r=(0,a.useState)(new c.NT({calendar:"en"===n?"gregorian":"persian",locale:n})),l=r[0],o=r[1];return[{title:"Opening Calendar On The Specified Date",description:a.createElement(a.Fragment,null,a.createElement("p",null,"en"===n?"The currentDate prop forces the datepicker & calendar to open in specific date.":"پراپرتی currentDate تقویم را مجبور به باز شدن در زمان تعیین شده میکند."),a.createElement("p",null,"en"===n?"For example if you want the datepicker opens in February 2021 , you can set the currentDate prop to new DateObject ({ year:2021,month:2,day:1})":"به عنوان نمونه برای باز شدن تقویم در اسفند 1399 مانند مثال زیر عمل کنید:")),code:"<DatePicker\n  currentDate={\n    new DateObject({"+("en"===n?"":'\n      calendar: "persian", ')+" \n      year: "+("en"===n?2021:1399)+",\n      month: "+("en"===n?"2":"12")+",\n      day: 1\n    })\n  }\n/>",jsx:a.createElement(c.ZP,Object.assign({currentDate:new c.NT({calendar:"en"===n?"gregorian":"persian",year:"en"===n?2021:1399,month:"en"===n?2:12,day:1,locale:n})},t))},{title:"Manually Set Year And Month In DatePicker",code:'import React, { useState } from "react";\nimport DatePicker, { DateObject } from "react-multi-date-picker";\n\nexport default function Example() {\n  const [date, setDate] = useState(\n    new DateObject('+("en"===n?"":'{ calendar: "persian", locale: "fa" }')+"),\n  );\n\n  return (\n    <>\n      <div>\n        <button\n          onClick={() => {\n            date.month += 1;\n\n            setDate(new DateObject(date));\n          }}\n        >\n          +\n        </button>\n        <span>{date.month.name}</span>\n        <button\n          onClick={() => {\n            date.month -= 1;\n\n            setDate(new DateObject(date));\n          }}\n        >\n          -\n        </button>\n      </div>\n      <div>\n        <button\n          onClick={() => {\n            date.year += 1;\n\n            setDate(new DateObject(date));\n          }}\n        >\n          +\n        </button>\n        <span>{date.year}</span>\n        <button\n          onClick={() => {\n            date.year -= 1;\n\n            setDate(new DateObject(date));\n          }}\n        >\n          -\n        </button>\n      </div>\n      <DatePicker \n        currentDate={date} \n      "+("en"===n?"/>":'  calendar="persian" \n        locale="fa" \n      />')+"\n    </>\n  )\n}  ",jsx:a.createElement(a.Fragment,null,a.createElement("div",null,a.createElement("button",{onClick:function(){l.month+=1,o(new c.NT(l))}},"+"),a.createElement("span",null,null===(i=l.month)||void 0===i?void 0:i.name),a.createElement("button",{onClick:function(){l.month-=1,o(new c.NT(l))}},"-")),a.createElement("div",null,a.createElement("button",{onClick:function(){l.year+=1,o(new c.NT(l))}},"+"),a.createElement("span",null,l.year),a.createElement("button",{onClick:function(){l.year-=1,o(new c.NT(l))}},"-")),a.createElement(c.ZP,Object.assign({currentDate:l},t)))},{title:"Animation",code:"<DatePicker \n  animation \n/>",jsx:a.createElement(c.ZP,Object.assign({animation:!0},t))},{title:"Other Days",code:"<DatePicker \n  showOtherDays \n/>",jsx:a.createElement(c.ZP,Object.assign({showOtherDays:!0},t))},{title:"Disabling Scroll Sensitivity",description:"disable_scroll",code:"<DatePicker \n  scrollSensitive={false} \n/>",jsx:a.createElement(c.ZP,Object.assign({scrollSensitive:!1},t))},{title:"Hide On Scroll",code:"<DatePicker \n  hideOnScroll \n/>",jsx:a.createElement(c.ZP,Object.assign({hideOnScroll:!0},t))},{title:"Ignore Formatting",code:'<DatePicker\n  timePicker\n  format="Date:YYYY/MM/DD, Time:HH:mm:ss"\n  formattingIgnoreList={["Date", "Time"]}\n/>',jsx:a.createElement(c.ZP,Object.assign({timePicker:!0,format:"Date:YYYY/MM/DD, Time:HH:mm:ss",formattingIgnoreList:["Date","Time"]},t))},{title:"Disable Virtual Keyboard",code:'<DatePicker\n  inputMode="none"\n/>',jsx:a.createElement(c.ZP,Object.assign({inputMode:"none"},t))},{title:"Disable Editing",description:"disable_edit",code:"<DatePicker\n  editable={false}\n/>",jsx:a.createElement(c.ZP,Object.assign({editable:!1},t))},{title:"Placeholder",code:'<DatePicker\n  placeholder="click to open"\n/>',jsx:a.createElement(c.ZP,Object.assign({placeholder:"click to open"},t))},{title:"Disable Year Picker",code:"<DatePicker \n  disableYearPicker \n/>",jsx:a.createElement(c.ZP,Object.assign({disableYearPicker:!0},t))},{title:"Disable Month Picker",code:"<DatePicker \n  disableMonthPicker \n/>",jsx:a.createElement(c.ZP,Object.assign({disableMonthPicker:!0,mind:!0},t))},{title:"Disabled Input",code:"<DatePicker \n  disabled \n/>",jsx:a.createElement(c.ZP,Object.assign({disabled:!0},t))},{title:"Disabled Button",code:'<DatePicker\n  type="button"\n  placeholder="this button is disabled"\n  disabled\n/>',jsx:a.createElement(c.ZP,Object.assign({type:"button",placeholder:"this button is disabled",disabled:!0},t))}]}function l(e){var n=e.pageContext.language||"en";return a.createElement(i.Z,{language:n,doc:r})}}}]);
//# sourceMappingURL=component---src-pages-other-examples-js-470ff691066c910ff1b3.js.map