{"version":3,"sources":["components/example.js","assets/github.svg","assets/npm.svg","assets/screenshot.jpg","components/arrow/arrow.js","components/selectors.js","custom_component.js","routes/home.js","routes/plugins.js","App.js","serviceWorker.js","index.js"],"names":["Example","id","title","description","code","jsx","className","getCode","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","fillRule","clipRule","d","transform","fill","SvgGithub","_ref","svgRef","titleId","props","width","height","viewBox","xmlns","ref","ForwardRef","points","_ref4","_ref5","SvgNpm","x","y","Arrow","direction","onClick","Selector","value","options","onChange","disabled","e","map","item","index","Selectors","selectors","result","first","second","push","CustomComponent","openCalendar","stringDate","React","Component","CustomInput","handleValueChange","onFocus","CustomRangeInput","stringDates","from","to","readOnly","CustomMultipleInput","join","Home","today","Date","tomorrow","setDate","getDate","useState","isActive","setIsActive","sidebarRef","useRef","appRef","calendar","setCalendar","local","setLocal","range","setRange","multiple","setMultiple","timePicker","setTimePicker","onlyTimePicker","setOnlyTimePicker","onlyMonthPicker","setOnlyMonthPicker","onlyYearPicker","setOnlyYearPicker","mustShowDates","setMustShowDates","color","setColor","bg","setbg","type","setType","layout","setLayout","showOtherDays","setShowOtherDays","position","setPosition","animation","setAnimation","dateObject","setDateObject","gregorian","setGregorian","persian","setPersian","arabic","setArabic","indian","setIndian","format","setFormat","jsDate","setJsDate","date","childDate","setChildDate","minMax2","setMinMax2","minMax1","setMinMax1","minmaxToday","DateObject","minmaxTomorrow","setDay","day","minMax3","setMinMax3","datesM1","setDatesM1","datesR1","setDatesR1","year","month","multipleDates","setMultipleDates","FL2","setFL2","FL3","setFL3","dates","setDates","allDates","setAllDates","useEffect","isValid","convert","toDate","toString","Prism","highlightAll","scrollToTop","document","querySelector","main","handleClickOutside","event","current","contains","classList","activeScrollTop","style","display","scrollTop","toTop","addEventListener","removeEventListener","window","logos","npm","github","Doc","screenshot","navbar","name","url","examples","href","rel","colSpan","margin","undefined","alert","scrollSensitive","arrow","hideOnScroll","mapDays","selectedDate","currentMonth","isSameDate","borderRadius","backgroundColor","fontWeight","border","includes","weekDay","hidden","dayOfBeginning","padding","minHeight","zIndex","flex","inputMode","containerStyle","boxSizing","calendarPosition","eachDaysInRange","dateObjects","getAllDatesInRange","minDate","toFirstOfMonth","maxDate","toLastOfMonth","closeCalendar","formattingIgnoreList","array","weekDays","months","shortName","render","marginBottom","textAlign","editable","placeholder","fontSize","inputClass","disableYearPicker","disableMonthPicker","mind","a","b","packageJson","dependencies","replace","logo","getSidebarItem","example","toLowerCase","val","Array","isArray","getExamples","settings1","setSettings1","setProps","marginLeft","plugins","plugin","size","onSettingChanged","defaultActive","sort","App","exact","path","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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CA,0CACA,2CACA,yCAEJ,+BACI,2CACA,wCACA,oCACA,yCAEJ,+BACI,0CACA,uCACA,2CACA,yCAEJ,+BACI,wCACA,uCACA,2CACA,yCAEJ,+BACI,+CACA,yCACA,sCACA,yCAEJ,+BACI,yCACA,oEACA,2CACA,yCAEJ,+BACI,yCACA,oEACA,2CACA,yCAEJ,+BACI,mDACA,yCACA,uCACA,yCAEJ,+BACI,oDACA,yCACA,uCACA,yCAEJ,+BACI,iDACA,yCACA,uCACA,yCAEJ,+BACI,wCACA,wCACA,qCACA,yCAEJ,+BACI,qCACA,iDACA,sCACA,+CAEJ,+BACI,uCACA,yCACA,sCACA,+CAEJ,+BACI,2CACA,yCACA,uCACA,+CAEJ,+BACI,4CACA,wCACA,oCACA,+CAEJ,+BACI,sCACA,wCACA,oCACA,+CAEJ,+BACI,oCACA,wCACA,oCACA,+CAEJ,+BACI,uCACA,wCACA,oCACA,+CAEJ,+BACI,6CACA,wCACA,oCACA,+CAEJ,+BACI,uCACA,wCACA,6BAAK,OACL,+CAEJ,+BACI,sCACA,wCACA,uCACA,+CAEJ,+BACI,wCACA,6DACA,2CACA,+CAEJ,+BACI,0CACA,yCACA,uCACA,+CAEJ,+BACI,2CACA,wCACA,2CACA,+CAEJ,+BACI,iDACA,yCACA,sCACA,+CAEJ,+BACI,8CACA,yCACA,uCACA,+CAEJ,+BACI,kDACA,wCACA,sCACA,+CAEJ,+BACI,gDACA,wCACA,2CACA,+CAEJ,+BACI,qDACA,wCACA,oCACA,+CAEJ,+BACI,0CACA,yCACA,sCACA,+CAEJ,+BACI,sDACA,yCACA,sCACA,+CAEJ,+BACI,yCACA,uCACA,oCACA,sDAKhB,CACI7M,MAAO,uBACPG,IAAK,kCACD,gCACI,+BACI,2CACA,6CAGR,kCACI,+BACI,qDACA,iDAEJ,+BACI,yCACA,uCAEJ,+BACI,wCACA,uCAEJ,+BACI,wCACA,8CAKhB,CACIH,MAAO,mBACPG,IAAK,kCACD,gCACI,6BACI,oBAAI4M,QAAQ,IAAZ,kCAGR,gCACI,+BACI,iDACA,4CACA,sCACA,wCACA,iDAKhB,CACI/M,MAAO,cACPG,IAAK,kCACD,gCACI,+BACI,sCACA,8CAGR,kCACI,+BACI,sCACA,+CAEJ,+BACI,4CACA,qDAEJ,+BACI,wCACA,8DAEJ,+BACI,wCACA,kDAEJ,+BACI,uCACA,0FAKhB,CACIH,MAAO,oBACPG,IAAK,kCACD,gCACI,+BACI,sCACA,yCACA,6CACA,mEAGR,kCACI,+BACI,sCACA,sCACA,2CACA,yCAEJ,+BACI,oCACA,oCACA,+CACA,yCAEJ,+BACI,sCACA,0CACA,4CACA,yCAEJ,+BACI,qCACA,qCACA,kDACA,yCAEJ,+BACI,oCACA,oDACA,uDACA,yCAEJ,+BACI,mCACA,kDACA,8CACA,yCAEJ,+BACI,sCACA,oCACA,6CACA,2CAEJ,+BACI,qCACA,mCACA,6CACA,2CAEJ,+BACI,oCACA,oDACA,uDACA,yCAEJ,+BACI,mCACA,kDACA,8CACA,yCAEJ,+BACI,oCACA,qDACA,8CACA,2CAEJ,+BACI,mCACA,mDACA,8CACA,2CAEJ,+BACI,sCACA,gEACA,+CACA,2CAEJ,+BACI,qCACA,qDACA,qDACA,2CAEJ,+BACI,oCACA,8CACA,0DACA,2CAEJ,+BACI,mCACA,2CACA,iDACA,2CAEJ,+BACI,oCACA,oDACA,8DACA,yCAEJ,+BACI,mCACA,kDACA,qDACA,yCAEJ,+BACI,oCACA,oDACA,8DACA,yCAEJ,+BACI,mCACA,kDACA,qDACA,yCAEJ,+BACI,oCACA,oDACA,iDACA,yCAEJ,+BACI,mCACA,kDACA,wCACA,yCAEJ,+BACI,oCACA,oDACA,iDACA,yCAEJ,+BACI,mCACA,kDACA,wCACA,yCAEJ,+BACI,qCACA,qCACA,sDACA,yCAEJ,+BACI,oCACA,oCACA,sDACA,yCAEJ,+BACI,mCACA,mCACA,qDACA,yCAEJ,+BACI,mCACA,oCACA,0CACA,yCAEJ,+BACI,mCACA,oCACA,oDACA,gDAKhB,CACIH,MAAO,WACP4M,SAAU,CACN,CACI5M,MAAO,mBACPE,KAAK,eACLC,IAAK,cAAC,IAAD,KAET,CACIH,MAAO,qBACPE,KAAK,iBACLC,IA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","file":"static/js/main.89128445.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default function Example({ id, title, description, code, jsx }) {\r\n    return (\r\n        <div className=\"example\" id={id}>\r\n            <div className=\"title\">{title}</div>\r\n            {description && typeof description === \"string\" ?\r\n                <p>{description}</p> : (description || null)\r\n            }\r\n            {code &&\r\n                <pre>\r\n                    {getCode(code)}\r\n                </pre>\r\n            }\r\n            { jsx}\r\n        </div >\r\n    )\r\n\r\n    function getCode(code) {\r\n        if (!code) return null\r\n        return <code className=\"language-jsx\">{code}</code>\r\n    }\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\",\n  transform: \"scale(64)\",\n  fill: \"#1B1F23\"\n});\n\nfunction SvgGithub(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 1024,\n    height: 1024,\n    viewBox: \"0 0 1024 1024\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithub);\nexport default __webpack_public_path__ + \"static/media/github.255db585.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#CB3837\",\n  d: \"M0,0h18v6H9v1H5V6H0V0z M1,5h2V2h1v3h1V1H1V5z M6,1v5h2V5h2V1H6z M8,2h1v2H8V2z M11,1v4h2V2h1v3h1V2h1v3h1V1H11z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#FFFFFF\",\n  points: \"1,5 3,5 3,2 4,2 4,5 5,5 5,1 1,1 \"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  d: \"M6,1v5h2V5h2V1H6z M9,4H8V2h1V4z\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#FFFFFF\",\n  points: \"11,1 11,5 13,5 13,2 14,2 14,5 15,5 15,2 16,2 16,5 17,5 17,1 \"\n});\n\nfunction SvgNpm(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"540px\",\n    height: \"210px\",\n    viewBox: \"0 0 18 7\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNpm);\nexport default __webpack_public_path__ + \"static/media/npm.3cad4cc6.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/screenshot.6b940f3f.jpg\";","import React from \"react\"\r\n\r\nexport default function Arrow({ direction, onClick }) {\r\n    return (\r\n        <span\r\n            className={`rmdp-arrow-container ${direction}`}\r\n            onClick={onClick}\r\n        >\r\n            <i className=\"rmdp-arrow\"></i>\r\n        </span>\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport function Selector({ title, value = \"\", options = [], onChange = () => { }, disabled }) {\r\n    return (\r\n        <div className=\"form-group flex-1\">\r\n            <label>{title}</label>\r\n            <select className=\"select full-width\" value={value} onChange={e => onChange(e.target.value)} disabled={disabled}>\r\n                {options.map((item, index) => <option key={index} value={item[1]}>{item[0]}</option>)}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function Selectors({ selectors }) {\r\n    let result = []\r\n\r\n    for (let i = 0; i < selectors.length; i += 2) {\r\n        let first = selectors[i]\r\n        let second = selectors[i + 1]\r\n\r\n        if (!first) break\r\n\r\n        result.push(\r\n            <div key={i} className=\"display-flex\">\r\n                <Selector\r\n                    title={first.title}\r\n                    disabled={first.disabled}\r\n                    value={first.value}\r\n                    options={first.options}\r\n                    onChange={first.onChange}\r\n                />\r\n                {second &&\r\n                    <Selector\r\n                        title={second.title}\r\n                        disabled={second.disabled}\r\n                        value={second.value}\r\n                        options={second.options}\r\n                        onChange={second.onChange}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    return result\r\n}","import React from \"react\"\r\n\r\nexport default class CustomComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <button onClick={this.props.openCalendar}>\r\n                {this.props.stringDate}\r\n            </button >\r\n        )\r\n    }\r\n}\r\n\r\nexport function CustomInput({ openCalendar, stringDate, handleValueChange }) {\r\n    return (\r\n        <input\r\n            onFocus={openCalendar}\r\n            value={stringDate}\r\n            onChange={handleValueChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport function CustomRangeInput({ openCalendar, stringDates }) {\r\n    let from = stringDates[0] || \"\"\r\n    let to = stringDates[stringDates.length - 1] || \"\"\r\n    let value = from && to ? `from: ${from}, to: ${to}` : \"\"\r\n\r\n    return (\r\n        <input\r\n            onFocus={openCalendar}\r\n            value={value}\r\n            readOnly\r\n        />\r\n    )\r\n}\r\n\r\nexport function CustomMultipleInput({ openCalendar, stringDates }) {\r\n    return (\r\n        <input\r\n            onFocus={openCalendar}\r\n            value={stringDates.join(\", \")}\r\n            readOnly\r\n        />\r\n    )\r\n}","import React, { useState, useRef, useEffect } from 'react';\r\nimport packageJson from \"../../package.json\"\r\nimport DatePicker, { Calendar, DateObject, getAllDatesInRange } from \"react-multi-date-picker\"\r\n// import DatePicker from \"../components/date_picker/date_picker\"\r\n// import Calendar from '../components/calendar/calendar';\r\n// import DateObject from \"react-date-object\"\r\n// import { getAllDatesInRange } from \"../plugins/date_panel/date_panel\"\r\nimport Example from \"../components/example\"\r\nimport { ReactComponent as GitHub } from \"../assets/github.svg\"\r\nimport { ReactComponent as NPM } from \"../assets/npm.svg\"\r\nimport screenshot from \"../assets/screenshot.jpg\"\r\nimport \"../calendar_demo.css\"\r\nimport Arrow from \"../components/arrow/arrow\"\r\nimport Selectors from \"../components/selectors\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport \"react-multi-date-picker/styles/backgrounds/bg-dark.css\"\r\nimport \"react-multi-date-picker/styles/backgrounds/bg-gray.css\"\r\nimport \"react-multi-date-picker/styles/backgrounds/bg-brown.css\"\r\n\r\n\r\nimport \"react-multi-date-picker/styles/colors/red.css\"\r\nimport \"react-multi-date-picker/styles/colors/green.css\"\r\nimport \"react-multi-date-picker/styles/colors/yellow.css\"\r\nimport \"react-multi-date-picker/styles/colors/purple.css\"\r\nimport \"react-multi-date-picker/styles/colors/teal.css\"\r\n\r\nimport \"react-multi-date-picker/styles/layouts/mobile.css\"\r\n\r\n// import { Settings, DatePickerHeader } from \"react-multi-date-picker/plugins\"\r\n\r\n\r\n// import 'react-modern-calendar-datepicker/lib/DatePicker.css';\r\n// import DatePicker from 'react-modern-calendar-datepicker';\r\n\r\nimport CustomComponent, { CustomInput, CustomRangeInput, CustomMultipleInput } from \"../custom_component\"\r\n\r\n// import \"../styles/colors/red.css\"\r\n// import \"../styles/colors/green.css\"\r\n// import \"../styles/colors/yellow.css\"\r\n// import \"../styles/colors/purple.css\"\r\n// import \"../styles/colors/teal.css\"\r\n// import \"../styles/backgrounds/bg-dark.css\"\r\n// import \"../styles/backgrounds/bg-gray.css\"\r\n// import \"../styles/backgrounds/bg-brown.css\"\r\n// import \"../styles/layouts/mobile.css\"\r\n\r\nimport \"../custom-class.css\"\r\n\r\nimport Prism from 'prismjs';\r\nimport \"prismjs/themes/prism-okaidia.css\"\r\nimport 'prismjs/components/prism-jsx.min';\r\n\r\nfunction Home() {\r\n    const today = new Date()\r\n    const tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n\r\n\r\n\r\n    const [isActive, setIsActive] = useState(false)\r\n    const sidebarRef = useRef(null)\r\n    const appRef = useRef(null)\r\n    const [calendar, setCalendar] = useState(\"gregorian\")\r\n    const [local, setLocal] = useState(\"en\")\r\n    const [range, setRange] = useState(false)\r\n    const [multiple, setMultiple] = useState(false)\r\n    const [timePicker, setTimePicker] = useState(false)\r\n    const [onlyTimePicker, setOnlyTimePicker] = useState(false)\r\n    const [onlyMonthPicker, setOnlyMonthPicker] = useState(false)\r\n    const [onlyYearPicker, setOnlyYearPicker] = useState(false)\r\n    const [mustShowDates, setMustShowDates] = useState(true)\r\n    const [color, setColor] = useState(\"\")\r\n    const [bg, setbg] = useState(\"\")\r\n    const [type, setType] = useState(\"calendar\")\r\n    const [layout, setLayout] = useState(\"\")\r\n    const [showOtherDays, setShowOtherDays] = useState(true)\r\n    const [position, setPosition] = useState(\"auto\")\r\n    const [animation, setAnimation] = useState(\"off\")\r\n    const [dateObject, setDateObject] = useState({})\r\n    const [gregorian, setGregorian] = useState(\"\")\r\n    const [persian, setPersian] = useState(\"\")\r\n    const [arabic, setArabic] = useState(\"\")\r\n    const [indian, setIndian] = useState(\"\")\r\n    const [format, setFormat] = useState(\"MM/DD/YYYY\")\r\n    const [jsDate, setJsDate] = useState(\"\")\r\n\r\n    const [date, setDate] = useState(new Date())\r\n    const [childDate, setChildDate] = useState(new Date())\r\n\r\n    const [minMax2, setMinMax2] = useState(\"2020/12/04\")\r\n    const [minMax1, setMinMax1] = useState(new Date().setDate(10))\r\n\r\n    let minmaxToday = new DateObject()\r\n    let minmaxTomorrow = new DateObject(minmaxToday).setDay(minmaxToday.day + 1)\r\n\r\n    const [minMax3, setMinMax3] = useState([\r\n        minmaxToday,\r\n        minmaxTomorrow\r\n    ])\r\n\r\n    const [datesM1, setDatesM1] = useState([today, tomorrow])\r\n    const [datesR1, setDatesR1] = useState([today, tomorrow])\r\n    const [multipleDates, setMultipleDates] = useState([new Date(), new DateObject({ year: 2020, month: 9, day: 8 }), \"December 09 2020\", 1597994736000])\r\n    const [FL2, setFL2] = useState(new Date())\r\n    const [FL3, setFL3] = useState(new Date())\r\n\r\n    const [dates, setDates] = useState([])\r\n    const [allDates, setAllDates] = useState([])\r\n\r\n    const ref = useRef(null)\r\n\r\n\r\n    useEffect(() => {\r\n        if (dateObject.isValid) {\r\n            setGregorian(dateObject.convert(\"gregorian\").format(format))\r\n            setPersian(dateObject.convert(\"persian\").format(format))\r\n            setArabic(dateObject.convert(\"arabic\").format(format))\r\n            setIndian(dateObject.convert(\"indian\").format(format))\r\n            setJsDate(dateObject.toDate().toString())\r\n        } else {\r\n            setGregorian(\"\")\r\n            setPersian(\"\")\r\n            setArabic(\"\")\r\n            setIndian(\"\")\r\n            setJsDate(\"\")\r\n        }\r\n    }, [dateObject, format])\r\n\r\n    useEffect(() => Prism.highlightAll(), [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let scrollToTop = document.querySelector(\".scroll-to-top\");\r\n        let main = document.querySelector(\".main\")\r\n\r\n        document.addEventListener(\"click\", handleClickOutside)\r\n        scrollToTop.addEventListener(\"click\", toTop)\r\n        main.addEventListener(\"scroll\", activeScrollTop)\r\n\r\n        function handleClickOutside(event) {\r\n            if (sidebarRef.current && !sidebarRef.current.contains(event.target) && !event.target.classList.contains(\"open-sidebar\")) {\r\n                setIsActive(false);\r\n            }\r\n        }\r\n\r\n        function activeScrollTop() {\r\n            scrollToTop.style.display = main.scrollTop > 50 ? \"block\" : \"none\"\r\n        }\r\n\r\n        function toTop() {\r\n            main.scrollTop = 0;\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleClickOutside, false)\r\n            scrollToTop.removeEventListener(\"click\", toTop)\r\n            window.removeEventListener(\"scroll\", activeScrollTop)\r\n        }\r\n    }, [])\r\n\r\n    const logos = {\r\n        npm: <NPM />,\r\n        github: <GitHub />\r\n    }\r\n\r\n    let Doc = {\r\n        title: \"DatePicker\",\r\n        screenshot,\r\n        navbar: {\r\n            title: \"React Multi Date Picker\",\r\n            logos: [\r\n                { name: \"github\", url: \"https://github.com/shahabyazdi/react-multi-date-picker\" },\r\n                { name: \"npm\", url: \"https://www.npmjs.com/package/react-multi-date-picker\" }\r\n            ]\r\n        },\r\n        examples: [{\r\n            title: \"Installation\",\r\n            examples: [{\r\n                title: \"npm\",\r\n                code: \"npm install --save react-multi-date-picker\"\r\n            }, {\r\n                title: \"yarn\",\r\n                code: \"yarn add react-multi-date-picker\"\r\n            }]\r\n        }, {\r\n            title: \"Usage\",\r\n            examples: [{\r\n                title: \"DatePicker\",\r\n                code: `import React from \"react\";\r\nimport DatePicker from \"react-multi-date-picker\";\r\n\r\nexport default function Example() {\r\n  return <DatePicker />\r\n}`\r\n            },\r\n            {\r\n                title: \"Calendar\",\r\n                code: `import React from \"react\";\r\nimport { Calendar } from \"react-multi-date-picker\";\r\n\r\nexport default function Example() {\r\n  return <Calendar />\r\n}`\r\n            }, {\r\n                title: \"DateObject\",\r\n                jsx: <div>\r\n                    <p>This library is using DateObject to convert , parse and format date. click <a href=\"#on-change-(single-mode)\">here</a> to see how it works.</p>\r\n                    <p style={{ color: \"red\" }}>*Using DateObject as value is optional. You can ignore it.</p>\r\n                    <pre>\r\n                        <code className=\"language-jsx\">\r\n                            {`import React from \"react\";\r\nimport DatePicker, { DateObject } from \"react-multi-date-picker\";\r\n\r\nexport default function Example() {\r\n  const [date, setDate] = useState(new DateObject())\r\n\r\n  return (\r\n    <DatePicker \r\n      value={date} \r\n      onChange={setDate} \r\n    />\r\n  )\r\n}`}\r\n                        </code>\r\n                    </pre>\r\n                    <p>to see more information about DateObject please click <a target=\"__blanck\" href=\"https://github.com/shahabyazdi/react-date-object/\">here.</a></p>\r\n                </div>\r\n            }, {\r\n                title: \"Plugins\",\r\n                description: <div>\r\n                    <p>There are a few other features that I do not put them in the original datepicker file by default.</p>\r\n                    <p>This is because of not all users may want to use them. So there is no reason to put them in the original file and increase the production bounde.</p>\r\n                    <p>Another good thing about plugins is that you may want to add a feature to your datepicker that does not exist by default, so you can use this feature to add your own plugin to the datepicker.</p>\r\n                    <p>Click <Link to=\"/react-multi-date-picker/plugins\">here</Link> to see the plugins section.</p>\r\n                </div>\r\n            }]\r\n        }, {\r\n            title: \"Props\",\r\n            code: \"\",\r\n            jsx: <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Default</th>\r\n                        <th>Availability (DatePicker/ Calendar)</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>value</td>\r\n                        <td>Date, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/shahabyazdi/react-date-object\">DateObject</a>, String, Number or Array</td>\r\n                        <td>new Date()</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>multiple</td>\r\n                        <td>Boolean</td>\r\n                        <td>false (true if value is Array)</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>range</td>\r\n                        <td>Boolean</td>\r\n                        <td>false</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>timePicker</td>\r\n                        <td>Boolean</td>\r\n                        <td>false</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>onlyTimePicker</td>\r\n                        <td>Boolean</td>\r\n                        <td>false</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>onlyMonthPicker</td>\r\n                        <td>Boolean</td>\r\n                        <td>false</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>onlyYearPicker</td>\r\n                        <td>Boolean</td>\r\n                        <td>false</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>mustShowDates</td>\r\n                        <td>Boolean</td>\r\n                        <td>false (true in multiple & range mode)</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>format</td>\r\n                        <td>String</td>\r\n                        <td>YYYY/MM/DD</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>formattingIgnoreList</td>\r\n                        <td>Array</td>\r\n                        <td>undefined</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>calendar</td>\r\n                        <td>String</td>\r\n                        <td>gregorian</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>local</td>\r\n                        <td>String</td>\r\n                        <td>en</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>mapDays</td>\r\n                        <td>Function</td>\r\n                        <td>undefined</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>onChange</td>\r\n                        <td>Function</td>\r\n                        <td>undefined</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>className</td>\r\n                        <td>String</td>\r\n                        <td>\"\"</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>weekDays</td>\r\n                        <td>Array</td>\r\n                        <td>undefined</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>months</td>\r\n                        <td>Array</td>\r\n                        <td>undefined</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>showOtherDays</td>\r\n                        <td>Boolean</td>\r\n                        <td>true</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>minDate</td>\r\n                        <td>Date, DateObject, String or Number</td>\r\n                        <td>undefined</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>maxDate</td>\r\n                        <td>Date, DateObject, String or Number</td>\r\n                        <td>undefined</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>disableYearPicker</td>\r\n                        <td>Boolean</td>\r\n                        <td>false</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>disableMonthPicker</td>\r\n                        <td>Boolean</td>\r\n                        <td>false</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>eachDaysInRange</td>\r\n                        <td>Boolean</td>\r\n                        <td>false</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>zIndex</td>\r\n                        <td>Number</td>\r\n                        <td>100</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>ref</td>\r\n                        <td>React.RefObject</td>\r\n                        <td>true</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>arrow</td>\r\n                        <td>Boolean</td>\r\n                        <td>true</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>animation</td>\r\n                        <td>Boolean</td>\r\n                        <td>false</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>inputClass</td>\r\n                        <td>String</td>\r\n                        <td>\"\"</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>name</td>\r\n                        <td>String</td>\r\n                        <td>\"\"</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>id</td>\r\n                        <td>String</td>\r\n                        <td>\"\"</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>title</td>\r\n                        <td>String</td>\r\n                        <td>\"\"</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>placeholder</td>\r\n                        <td>String</td>\r\n                        <td>\"\"</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>style</td>\r\n                        <td>Object</td>\r\n                        <td>{\"{}\"}</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>type</td>\r\n                        <td>String</td>\r\n                        <td>input</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>render</td>\r\n                        <td>React.Component or Function</td>\r\n                        <td>undefined</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>disabled</td>\r\n                        <td>Boolean</td>\r\n                        <td>false</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>inputMode</td>\r\n                        <td>String</td>\r\n                        <td>undefined</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>scrollSensitive</td>\r\n                        <td>Boolean</td>\r\n                        <td>true</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>hideOnScroll</td>\r\n                        <td>Boolean</td>\r\n                        <td>false</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>calendarPosition</td>\r\n                        <td>String</td>\r\n                        <td>auto</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>containerStyle</td>\r\n                        <td>Object</td>\r\n                        <td>undefined</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>containerClassNamey</td>\r\n                        <td>String</td>\r\n                        <td>\"\"</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>editable</td>\r\n                        <td>Boolean</td>\r\n                        <td>true</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>onlyShowInRangeDates</td>\r\n                        <td>Boolean</td>\r\n                        <td>true</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>plugins</td>\r\n                        <td>Array</td>\r\n                        <td>[]</td>\r\n                        <td>DatePicker</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        },\r\n        {\r\n            title: \"Calendars and Locals\",\r\n            jsx: <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Calendars</th>\r\n                        <th>Locals</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>gregorian (default)</td>\r\n                        <td>en (default)</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>persian</td>\r\n                        <td>fa</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>arabic</td>\r\n                        <td>ar</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>indian</td>\r\n                        <td>hi</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        },\r\n        {\r\n            title: \"DatePicker Types\",\r\n            jsx: <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th colSpan=\"5\">DatePicker Types</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>input (default)</td>\r\n                        <td>input-icon</td>\r\n                        <td>icon</td>\r\n                        <td>button</td>\r\n                        <td>custom</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        },\r\n        {\r\n            title: \"Value Types\",\r\n            jsx: <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Type</th>\r\n                        <th>Example</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Date</td>\r\n                        <td>new Date()</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>DateObject</td>\r\n                        <td>new DateObject()</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>String</td>\r\n                        <td>\"2020/11/08 17:12:24.187\"</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Number</td>\r\n                        <td>1597994736000</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Array</td>\r\n                        <td>[new Date().setDate(1), new Date().setDate(2)]</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        },\r\n        {\r\n            title: \"Formatting Tokens\",\r\n            jsx: <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Type</th>\r\n                        <th>Example</th>\r\n                        <th>Description</th>\r\n                        <th>Availability (Parse /Format)</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>YYYY</td>\r\n                        <td>2020</td>\r\n                        <td>full year</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>YY</td>\r\n                        <td>20</td>\r\n                        <td>2 digits year</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>MMMM</td>\r\n                        <td>December</td>\r\n                        <td>month name</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>MMM</td>\r\n                        <td>Dec</td>\r\n                        <td>month short name</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>MM</td>\r\n                        <td>03, 09, 10, 11,...</td>\r\n                        <td>2 digits month number</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>M</td>\r\n                        <td>3, 9, 10, 11,...</td>\r\n                        <td>month number</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>DDDD</td>\r\n                        <td>09</td>\r\n                        <td>day of year</td>\r\n                        <td>format</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>DDD</td>\r\n                        <td>9</td>\r\n                        <td>day of year</td>\r\n                        <td>format</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>DD</td>\r\n                        <td>03, 09, 10, 17,...</td>\r\n                        <td>2 digits day of month</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>D</td>\r\n                        <td>3, 9, 10, 17,...</td>\r\n                        <td>day of month</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>WW</td>\r\n                        <td>01, 03, 24, 33, ...</td>\r\n                        <td>week of year</td>\r\n                        <td>format</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>W</td>\r\n                        <td>1, 3, 24, 33, ...</td>\r\n                        <td>week of year</td>\r\n                        <td>format</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>dddd</td>\r\n                        <td>Saturday, Sunday, Monday, ...\t</td>\r\n                        <td>week day name</td>\r\n                        <td>format</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>ddd</td>\r\n                        <td>Sat, Sun, Mon, ...\t</td>\r\n                        <td>week day short name</td>\r\n                        <td>format</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>dd</td>\r\n                        <td>01,02,...,07</td>\r\n                        <td>2 digits week day number</td>\r\n                        <td>format</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>d</td>\r\n                        <td>1,2,...,7</td>\r\n                        <td>week day number</td>\r\n                        <td>format</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>HH</td>\r\n                        <td>03, 09, 10, 17,...</td>\r\n                        <td>2 digits hour (24 hour mode)</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>H</td>\r\n                        <td>3, 9, 10, 17,...</td>\r\n                        <td>hour (24 hour mode)</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>hh</td>\r\n                        <td>03, 09, 10, 17,...</td>\r\n                        <td>2 digits hour (12 hour mode)</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>h</td>\r\n                        <td>3, 9, 10, 17,...</td>\r\n                        <td>hour (12 hour mode)</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>mm</td>\r\n                        <td>03, 09, 10, 17,...</td>\r\n                        <td>2 digits minute</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>m</td>\r\n                        <td>3, 9, 10, 17,...</td>\r\n                        <td>minute</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>ss</td>\r\n                        <td>03, 09, 10, 17,...</td>\r\n                        <td>2 digits second</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>s</td>\r\n                        <td>3, 9, 10, 17,...</td>\r\n                        <td>second</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>SSS</td>\r\n                        <td>100</td>\r\n                        <td>3 digits millisecond</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>SS</td>\r\n                        <td>10</td>\r\n                        <td>2 digits millisecond</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>S</td>\r\n                        <td>1</td>\r\n                        <td>1 digit millisecond</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>A</td>\r\n                        <td>AM</td>\r\n                        <td>meridiem</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>a</td>\r\n                        <td>am</td>\r\n                        <td>meridiem lowercase</td>\r\n                        <td>both</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        },\r\n        {\r\n            title: \"Examples\",\r\n            examples: [\r\n                {\r\n                    title: \"Default Calendar\",\r\n                    code: `<Calendar />`,\r\n                    jsx: <Calendar />\r\n                },\r\n                {\r\n                    title: \"Default DatePicker\",\r\n                    code: `<DatePicker />`,\r\n                    jsx: <DatePicker />\r\n                },\r\n                {\r\n                    title: \"Calendar With Children\",\r\n                    code: `const [date, setDate] = useState(new Date())\r\n.\r\n.\r\n.\r\n<Calendar\r\n  value={date}\r\n  onChange={setDate}\r\n>\r\n  <button\r\n    style={{ margin: \"5px\" }}\r\n    onClick={() => setDate(undefined)}\r\n  >\r\n    DESELECT\r\n  </button>\r\n  <button\r\n    style={{ margin: \"5px\" }}\r\n    onClick={() => setDate(new Date())}\r\n  >\r\n    TODAY\r\n  </button>\r\n</Calendar>`,\r\n                    jsx: <Calendar\r\n                        value={childDate}\r\n                        onChange={setChildDate}\r\n                    >\r\n                        <button\r\n                            style={{ margin: \"5px\" }}\r\n                            onClick={() => setChildDate(undefined)}\r\n                        >\r\n                            DESELECT\r\n            </button>\r\n                        <button\r\n                            style={{ margin: \"5px\" }}\r\n                            onClick={() => setChildDate(new Date())}\r\n                        >\r\n                            TODAY\r\n            </button>\r\n                    </Calendar>\r\n                },\r\n                {\r\n                    title: \"DatePicker With Children\",\r\n                    code: `<DatePicker >\r\n  <button\r\n    style={{ margin: \"5px 0\" }}\r\n    onClick={() => alert(\"clicked\")}\r\n  >\r\n    button\r\n  </button>\r\n</DatePicker>`,\r\n                    jsx: <DatePicker>\r\n                        <button\r\n                            style={{ margin: \"5px 0\" }}\r\n                            onClick={() => alert(\"clicked\")}\r\n                        >\r\n                            button\r\n              </button>\r\n                    </DatePicker>\r\n                },\r\n                {\r\n                    title: \"Animation\",\r\n                    code: `<DatePicker animation />`,\r\n                    jsx: <DatePicker animation />\r\n                },\r\n                {\r\n                    title: \"Hiding Other Days\",\r\n                    code: `<DatePicker showOtherDays={false} />`,\r\n                    jsx: <DatePicker showOtherDays={false} />\r\n                },\r\n                {\r\n                    title: \"Disabling Scroll Sensitivity\",\r\n                    description: \"Scroll sensitivity is enabled by default but if you don't want it, you can disable this feature by setting scrollSensitive to false\",\r\n                    code: `<DatePicker scrollSensitive={false} />`,\r\n                    jsx: <DatePicker scrollSensitive={false} />\r\n                }\r\n                ,\r\n                {\r\n                    title: \"Disable Arrow\",\r\n                    code: `<DatePicker arrow={false} />`,\r\n                    jsx: <DatePicker arrow={false} />\r\n                },\r\n                {\r\n                    title: \"Hide On Scroll\",\r\n                    code: `<DatePicker hideOnScroll />`,\r\n                    jsx: <DatePicker hideOnScroll />\r\n                }\r\n                ,\r\n                {\r\n                    title: \"Map Days\",\r\n                    jsx: <div>\r\n                        <p>You can customize your calendar days with the mapDays Prop and create different properties for each of them by returning the Props you want.</p>\r\n                        <p>In general, this is how it works :</p>\r\n                        <pre>\r\n                            <code className=\"language-jsx\">\r\n                                {\r\n                                    `<DatePicker\r\n  mapDays={object => {\r\n    return { props }\r\n  }}\r\n/>`\r\n                                }\r\n                            </code>\r\n                        </pre>\r\n                        <p>The object which is received as an argument, contains following properties :</p>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Property</th>\r\n                                    <th>Type</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>date</td>\r\n                                    <td>DateObject</td>\r\n                                    <td>The Date is being rendered</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>today</td>\r\n                                    <td>DateObject</td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>selectedDate</td>\r\n                                    <td>DateObject or Array</td>\r\n                                    <td>according to the calendar mode (single, multiple or range) , type of selected date can be a DateObject or Array of DateObjects</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>currentMonth</td>\r\n                                    <td>Object</td>\r\n                                    <td>the month that the user has selected and is displayed in the calendars header. <span style={{ color: \"red\" }}>(it can be diffrent from the month of selected date)</span></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>isSameDate</td>\r\n                                    <td>Function</td>\r\n                                    <td>it returns the comparison between the day, month and year of two DateObjects.</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <p>as you know you can destructure received object and pick each property that you want as follows :</p>\r\n                        <pre><code className=\"language-jsx\">{`{ date, today, selectedDate, currentMonth, isSameDate }`}</code></pre>\r\n                        <p style={{ color: \"red\" }}>*Please note that none of the properties inside the object should be changed, as this will cause the calendar to malfunction.</p>\r\n                        <p>For example, if we change the day of all the rendering dates to today, it will result in an unpleasant outcome.</p>\r\n                        <pre>\r\n                            <code className=\"language-jsx\">\r\n                                {`<Calendar\r\n  mapDays={({ date, today }) => {\r\n    date.day = today.day\r\n  }}\r\n/>`}\r\n                            </code>\r\n                        </pre>\r\n                        <Calendar\r\n                            mapDays={({ date, today }) => {\r\n                                date.day = today.day\r\n                            }}\r\n                        />\r\n                        <p>The Props you return can contains all the Props that a span element accepts, plus two other properties that I have added to them, which are:</p>\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>disabled</td>\r\n                                    <td>hidden</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <p>Here are some examples of things that can be performed using mapDays.</p>\r\n                    </div>,\r\n                    examples: [\r\n                        {\r\n                            title: \"Styling Days\",\r\n                            code: `<DatePicker\r\n  mapDays={({ date, today, selectedDate, currentMonth, isSameDate }) => {\r\n    let props = {}\r\n\r\n    props.style = {\r\n      borderRadius: \"3px\",\r\n      backgroundColor: date.month.index === currentMonth.index ? \"#bbb\" : \"#ddd\"\r\n    }\r\n\r\n    if (isSameDate(date, today)) props.style.color = \"green\"\r\n    if (isSameDate(date, selectedDate)) props.style = {\r\n      ...props.style,\r\n      color: \"#0074d9\",\r\n      backgroundColor: \"#a5a5a5\",\r\n      fontWeight: \"bold\",\r\n      border: \"1px solid #777\"\r\n    }\r\n\r\n    return props\r\n  }}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                mapDays={({ date, today, selectedDate, currentMonth, isSameDate }) => {\r\n                                    let props = {}\r\n\r\n                                    props.style = {\r\n                                        borderRadius: \"3px\",\r\n                                        backgroundColor: date.month.index === currentMonth.index ? \"#bbb\" : \"#ddd\"\r\n                                    }\r\n\r\n                                    if (isSameDate(date, today)) props.style.color = \"green\"\r\n                                    if (isSameDate(date, selectedDate)) props.style = {\r\n                                        ...props.style,\r\n                                        color: \"#0074d9\",\r\n                                        backgroundColor: \"#a5a5a5\",\r\n                                        fontWeight: \"bold\",\r\n                                        border: \"1px solid #777\"\r\n                                    }\r\n\r\n                                    return props\r\n                                }}\r\n                            />\r\n                        },\r\n                        {\r\n                            title: \"Styling Weekends\",\r\n                            description: `For convenience, the \"highlight highlight-red\" class is included in css files, so you do not need to import it.`,\r\n                            code: `<DatePicker\r\n  mapDays={({ date }) => {\r\n    let props = {}\r\n    let isWeekend = [0, 6].includes(date.weekDay.index)\r\n\r\n    if (isWeekend) props.className = \"highlight highlight-red\"\r\n\r\n    return props\r\n  }}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                mapDays={({ date }) => {\r\n                                    let props = {}\r\n                                    let isWeekend = [0, 6].includes(date.weekDay.index)\r\n\r\n                                    if (isWeekend) props.className = \"highlight highlight-red\"\r\n\r\n                                    return props\r\n                                }}\r\n                            />\r\n                        },\r\n                        {\r\n                            title: \"Styling Persian Weekends\",\r\n                            code: `<DatePicker\r\n  calendar=\"persian\"\r\n  mapDays={({ date }) => {\r\n    let props = {}\r\n    let isWeekend = date.weekDay.index === 6\r\n\r\n    if (isWeekend) props.className = \"highlight highlight-red\"\r\n\r\n    return props\r\n  }}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                calendar=\"persian\"\r\n                                mapDays={({ date }) => {\r\n                                    let props = {}\r\n                                    let isWeekend = date.weekDay.index === 6\r\n\r\n                                    if (isWeekend) props.className = \"highlight highlight-red\"\r\n\r\n                                    return props\r\n                                }}\r\n                            />\r\n                        },\r\n                        {\r\n                            title: \"Disabling Days\",\r\n                            code: `<DatePicker\r\n  mapDays={({ date }) => {\r\n    let isWeekend = [0, 6].includes(date.weekDay.index)\r\n\r\n    if (isWeekend) return {\r\n      disabled: true,\r\n      style: { color: \"#ccc\" },\r\n      onClick: () => alert(\"weekends are disabled\")\r\n    }\r\n  }}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                mapDays={({ date }) => {\r\n                                    let isWeekend = [0, 6].includes(date.weekDay.index)\r\n\r\n                                    if (isWeekend) return {\r\n                                        disabled: true,\r\n                                        style: { color: \"#ccc\" },\r\n                                        onClick: (e) => alert(\"weekend are disabled\",)\r\n                                    }\r\n                                }}\r\n                            />\r\n                        },\r\n                        {\r\n                            title: \"Hiding Days\",\r\n                            code: `<DatePicker\r\n  mapDays={({ date }) => {\r\n    let props = {}\r\n    \r\n    if ([5, 10, 15, 20, 25].includes(date.day)) props.hidden = true\r\n\r\n    return props\r\n  }}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                mapDays={({ date, currentMonth }) => {\r\n                                    let props = {}\r\n\r\n                                    if ([5, 10, 15, 20, 25].includes(date.day)) props.hidden = true\r\n\r\n                                    return props\r\n                                }}\r\n                            />\r\n                        },\r\n                        {\r\n                            title: \"Adding Tiltle to Days\",\r\n                            description: `You can add titles to your days, in the example below the title is added to today, yesterday and tomorrow.`,\r\n                            code: `<DatePicker\r\n  mapDays={({ date, today }) => {\r\n    let props = {}\r\n    let result = date.dayOfBeginning - today.dayOfBeginning\r\n\r\n    if (result === -1) props.title = \"Yesterday\"\r\n    if (result === 0) props.title = \"Today\"\r\n    if (result === 1) props.title = \"Tomorrow\"\r\n\r\n    return props\r\n  }}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                mapDays={({ date, today }) => {\r\n                                    let props = {}\r\n                                    let result = date.dayOfBeginning - today.dayOfBeginning\r\n\r\n                                    if (result === -1) props.title = \"Yesterday\"\r\n                                    if (result === 0) props.title = \"Today\"\r\n                                    if (result === 1) props.title = \"Tomorrow\"\r\n\r\n                                    return props\r\n                                }}\r\n                            />\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"Persian\",\r\n                    code: `<DatePicker\r\n  calendar=\"persian\"\r\n  local=\"fa\"\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        calendar=\"persian\"\r\n                        local=\"fa\"\r\n                    />\r\n                }, {\r\n                    title: \"Arabic\",\r\n                    code: `<DatePicker\r\n  calendar=\"arabic\"\r\n  local=\"ar\"\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        calendar=\"arabic\"\r\n                        local=\"ar\"\r\n                    />\r\n                },\r\n                {\r\n                    title: \"Indian\",\r\n                    code: `<DatePicker\r\n  calendar=\"indian\"\r\n  local=\"hi\"\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        calendar=\"indian\"\r\n                        local=\"hi\"\r\n                    />\r\n                },\r\n                {\r\n                    title: \"Direction RTL\",\r\n                    description: <div>\r\n                        <p>Here I want to display three DatePickers with different settings in a Container with rtl direction.</p>\r\n                        <p>The first DatePicker has the default settings and only its input direction has been changed to rtl.</p>\r\n                        <p>As you can see, the calendar with the default settings is displayed below the sidebar.</p>\r\n                        <p>To solve this problem in the second DatePicker, the input length is increased, so that the calendar is displayed in the (bottom or top) and center of the input.</p>\r\n                        <p>Or just like the third one, it can be possible to change the calendarDirection to auto-right.</p>\r\n                        <p>Note: To prevent the keyboard from opening in mobile mode, the inputMode value is set to none in all three cases.</p>\r\n                    </div>,\r\n                    code: `<div\r\n  style={{\r\n    direction: \"rtl\",\r\n    display: \"flex\"\r\n  }}\r\n>\r\n  <div\r\n    style={{\r\n      direction: \"rtl\",\r\n      padding: \"0 10px\",\r\n      backgroundColor: \"wheat\",\r\n      minHeight: \"250px\",\r\n      zIndex: \"101\"\r\n    }}\r\n  >\r\n    SIDEBAR\r\n  </div>\r\n  <div\r\n    style={{\r\n      direction: \"rtl\",\r\n      flex: \"1\",\r\n      backgroundColor: \"aliceblue\"\r\n    }}\r\n  >\r\n    <div>MAIN CONTENT</div>\r\n    <div>\r\n      <div>1:</div>\r\n      <DatePicker\r\n        inputMode=\"none\"\r\n        style={{ direction: \"rtl\" }}\r\n      />\r\n    </div>\r\n    <div>\r\n      <div>2:</div>\r\n      <DatePicker\r\n        inputMode=\"none\"\r\n        containerStyle={{ width: \"260px\" }}\r\n        style={{\r\n          width: \"100%\",\r\n          boxSizing: \"border-box\",\r\n          height: \"26px\",\r\n          direction: \"rtl\"\r\n        }}\r\n      />\r\n    </div>\r\n    <div>\r\n      <div>3:</div>\r\n      <DatePicker\r\n        inputMode=\"none\"\r\n        calendarPosition=\"auto-right\"\r\n        style={{ direction: \"rtl\" }}\r\n      />\r\n    </div>\r\n  </div>\r\n</div>`,\r\n                    jsx: <div>\r\n                        <div\r\n                            style={{\r\n                                direction: \"rtl\",\r\n                                display: \"flex\"\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    direction: \"rtl\",\r\n                                    padding: \"0 10px\",\r\n                                    backgroundColor: \"wheat\",\r\n                                    minHeight: \"250px\",\r\n                                    zIndex: \"101\"\r\n                                }}\r\n                            >SIDEBAR\r\n              </div>\r\n                            <div\r\n                                style={{\r\n                                    direction: \"rtl\",\r\n                                    flex: \"1\",\r\n                                    backgroundColor: \"aliceblue\"\r\n                                }}\r\n                            >\r\n                                <div>MAIN CONTENT</div>\r\n                                <div>\r\n                                    <div>1:</div>\r\n                                    <DatePicker\r\n                                        inputMode=\"none\"\r\n                                        style={{ direction: \"rtl\" }}\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <div>2:</div>\r\n                                    <DatePicker\r\n                                        inputMode=\"none\"\r\n                                        containerStyle={{ width: \"260px\" }}\r\n                                        style={{\r\n                                            width: \"100%\",\r\n                                            boxSizing: \"border-box\",\r\n                                            height: \"26px\",\r\n                                            direction: \"rtl\"\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <div>3:</div>\r\n                                    <DatePicker\r\n                                        inputMode=\"none\"\r\n                                        calendarPosition=\"auto-right\"\r\n                                        style={{ direction: \"rtl\" }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                },\r\n                {\r\n                    title: \"Multiple Mode #1\",\r\n                    code: `const today = new Date()\r\nconst tomorrow = new Date();\r\n\r\ntomorrow.setDate(tomorrow.getDate() + 1);\r\n\r\nconst [dates, setDates] = useState([today, tomorrow])\r\n.\r\n.\r\n.\r\n<DatePicker \r\n  value={dates} \r\n  onChange={setDates}\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        value={datesM1}\r\n                        onChange={setDatesM1}\r\n                    />\r\n                },\r\n                {\r\n                    title: \"Multiple Mode #2\",\r\n                    code: `<DatePicker multiple />`,\r\n                    jsx: <DatePicker multiple />\r\n                },\r\n                {\r\n                    title: \"Multiple Mode #3\",\r\n                    code: `<DatePicker\r\n  multiple\r\n  mustShowDates={false}\r\n/>`,\r\n                    jsx: <DatePicker multiple mustShowDates={false} />\r\n                }\r\n                ,\r\n                {\r\n                    title: \"Multiple Mode #4\",\r\n                    code: `const [dates, setDates] = useState([\r\n  new Date(), \r\n  new DateObject({ year: 2020, month: 9, day: 8 }), \r\n  \"December 09 2020\", \r\n  1597994736000 //unix time in milliseconds (August 21 2020)\r\n])\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={dates}\r\n  onChange={setDates}\r\n  format=\"MMMM DD YYYY\"\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        value={multipleDates}\r\n                        onChange={setMultipleDates}\r\n                        format=\"MMMM DD YYYY\"\r\n                    />\r\n                }\r\n                , {\r\n                    title: \"Range Mode #1\",\r\n                    code: `const today = new Date()\r\nconst tomorrow = new Date();\r\n\r\ntomorrow.setDate(tomorrow.getDate() + 1);\r\n\r\nconst [dates, setDates] = useState([today, tomorrow])\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={dates}\r\n  onChange={setDates}\r\n  range\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        value={datesR1}\r\n                        onChange={setDatesR1}\r\n                        range\r\n                    />\r\n                },\r\n                {\r\n                    title: \"Range Mode #2\",\r\n                    code: `<DatePicker range />`,\r\n                    jsx: <DatePicker range />\r\n                }\r\n                ,\r\n                {\r\n                    title: \"Range Mode #3\",\r\n                    description: <div>\r\n                        <p>As you can see in the two examples above, in range mode, only the start and end dates are displayed in the date panel.</p>\r\n                        <p>But if you want to see every single dates between the start and end date in the date panel, you can use the eachDaysInRange Prop.</p>\r\n                        <p>Similarly, in onChange, only the start and end dates are given, and if you want to have separate dates between the start and end dates, you can use the getAllDatesInRange function.</p>\r\n                        <p>Just keep in mind that enabling eachDaysInRange property in large ranges of dates may cause <b style={{ color: \"red\" }}>slow rendering</b>, so it's a good idea to limit your DatePicker with minDate and maxDate.</p>\r\n                        <p>In the example below, the DatePicker is limited to the beginning and end of the current month.</p>\r\n                    </div>,\r\n                    code: `import DatePicker, { DateObject, getAllDatesInRange } from \"react-multi-date-picker\"\r\n.\r\n.\r\n.\r\nconst [dates, setDates] = useState([])\r\nconst [allDates, setAllDates] = useState([])\r\n\r\n<div>\r\n  <DatePicker\r\n    range\r\n    eachDaysInRange\r\n    value={dates}\r\n    onChange={dateObjects => {\r\n      setDates(dateObjects)\r\n      setAllDates(getAllDatesInRange(dateObjects))\r\n    }}\r\n    minDate={new DateObject().toFirstOfMonth()}\r\n    maxDate={new DateObject().toLastOfMonth()}\r\n  />\r\n  {dates.length > 1 &&\r\n    <div>\r\n      <h5>\r\n        All Dates between {dates[0].format()} and {dates[1].format()}:\r\n      </h5>\r\n      <ul>\r\n        {allDates.map((date, index) => <li key={index}>{date.format()}</li>)}\r\n      </ul>\r\n    </div>\r\n  }\r\n</div>\r\n`         ,\r\n                    jsx: <div>\r\n                        <DatePicker\r\n                            range\r\n                            eachDaysInRange\r\n                            value={dates}\r\n                            onChange={dateObjects => {\r\n                                setDates(dateObjects)\r\n                                setAllDates(getAllDatesInRange(dateObjects))\r\n                            }}\r\n                            minDate={new DateObject().toFirstOfMonth()}\r\n                            maxDate={new DateObject().toLastOfMonth()}\r\n                        />\r\n                        {dates.length > 1 &&\r\n                            <div>\r\n                                <h5>\r\n                                    All Dates between {dates[0].format()} and {dates[1].format()}:\r\n                </h5>\r\n                                <ul>\r\n                                    {allDates.map((date, index) => <li key={index}>{date.format()}</li>)}\r\n                                </ul>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n                , {\r\n                    title: \"Time Picker\",\r\n                    code: `<DatePicker timePicker />`,\r\n                    jsx: <DatePicker timePicker />\r\n                }, {\r\n                    title: \"Only Time Picker\",\r\n                    code: `<DatePicker onlyTimePicker />`,\r\n                    jsx: <DatePicker onlyTimePicker />\r\n                }, {\r\n                    title: \"Only Time Picker Meridiem\",\r\n                    code: `<DatePicker\r\n  format=\"hh:mm:ss A\"\r\n  onlyTimePicker\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        format=\"hh:mm:ss A\"\r\n                        onlyTimePicker\r\n                    />\r\n                },\r\n                {\r\n                    title: \"Only Month Picker #1\",\r\n                    code: `<DatePicker onlyMonthPicker />`,\r\n                    jsx: <DatePicker onlyMonthPicker />\r\n                },\r\n                {\r\n                    title: \"Only Month Picker #2\",\r\n                    code: `<DatePicker\r\n  onlyMonthPicker\r\n  format=\"MMMM YYYY\"\r\n/>`,\r\n                    jsx: <DatePicker onlyMonthPicker format=\"MMMM YYYY\" />\r\n                },\r\n                {\r\n                    title: \"Only Year Picker\",\r\n                    code: `<DatePicker onlyYearPicker />`,\r\n                    jsx: <DatePicker onlyYearPicker />\r\n                },\r\n                {\r\n                    title: \"Forward Ref\",\r\n                    code: `const ref = useRef(null)\r\n.\r\n.\r\n.\r\n<div>\r\n    <button\r\n        onClick={() => ref.current.openCalendar()}\r\n    >\r\n        open\r\n    </button>\r\n    <DatePicker ref={ref} >\r\n        <button\r\n            style={{ margin: \"5px\" }}\r\n            onClick={() => ref.current.closeCalendar()}\r\n        >\r\n            close\r\n        </button>\r\n    </DatePicker>\r\n</div>`,\r\n                    description: <div>\r\n                        <p>For those who want to manually open and close DatePicker:</p>\r\n                        <p><a target=\"__blank\" href=\"https://github.com/shahabyazdi/react-multi-date-picker/issues/8\">see discussion</a></p>\r\n                    </div>,\r\n                    jsx: <div>\r\n                        <button\r\n                            onClick={() => ref.current.openCalendar()}\r\n                        >\r\n                            open\r\n                        </button>\r\n                        <DatePicker ref={ref} >\r\n                            <button\r\n                                style={{ margin: \"5px\" }}\r\n                                onClick={() => ref.current.closeCalendar()}\r\n                            >\r\n                                close\r\n                            </button>\r\n                        </DatePicker>\r\n                    </div>\r\n                },\r\n                {\r\n                    title: \"Min & Max Date\",\r\n                    description: <div style={{ margin: \"5px\" }}>\r\n                        <p>Type of min & max dates can be Date, DateObject, String or Number.</p>\r\n                        <p>Here are some examples</p>\r\n                    </div>,\r\n                    examples: [\r\n                        {\r\n                            title: \"Date\",\r\n                            code: `const [date, setDate] = useState(new Date().setDate(10))\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={date}\r\n  onChange={setDate}\r\n  minDate={new Date().setDate(5)}\r\n  maxDate={new Date().setDate(15)}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                value={minMax1}\r\n                                onChange={setMinMax1}\r\n                                minDate={new Date().setDate(5)}\r\n                                maxDate={new Date().setDate(15)}\r\n                            />\r\n                        },\r\n                        {\r\n                            title: \"String\",\r\n                            code: `const [date, setDate] = useState(\"2020/12/04\")\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={date}\r\n  onChange={setDate}\r\n  minDate={\"2020/11/20\"}\r\n  maxDate={\"2021/01/20\"}\r\n  showOtherDays={false}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                value={minMax2}\r\n                                onChange={setMinMax2}\r\n                                minDate={\"2020/11/20\"}\r\n                                maxDate={\"2021/01/20\"}\r\n                                showOtherDays={false}\r\n                            />\r\n                        },\r\n                        {\r\n                            title: \"Date Object\",\r\n                            code: `const today = new DateObject()\r\nconst tomorrow = new DateObject(today).setDay(today.day + 1)\r\nconst [dates, setDates] = useState([today, tomorrow])\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={dates}\r\n  onChange={setDates}\r\n  range\r\n  minDate={new DateObject(today).setDay(today.day - 2)}\r\n  maxDate={new DateObject(tomorrow).setDay(tomorrow.day + 2)}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                value={minMax3}\r\n                                onChange={setMinMax3}\r\n                                range\r\n                                minDate={new DateObject(minmaxToday).setDay(minmaxToday.day - 2)}\r\n                                maxDate={new DateObject(minmaxTomorrow).setDay(minmaxTomorrow.day + 2)}\r\n                            />\r\n                        },\r\n                        {\r\n                            title: \"Only MinDate\",\r\n                            code: `<DatePicker\r\n  minDate={new Date().setDate(5)}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                minDate={new Date().setDate(5)}\r\n                            />\r\n                        },\r\n                        {\r\n                            title: \"Only MaxDate\",\r\n                            code: `<DatePicker\r\n  maxDate={new Date().setDate(15)}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                maxDate={new Date().setDate(15)}\r\n                            />\r\n                        },\r\n                    ]\r\n                }\r\n                ,\r\n                {\r\n                    title: \"Format & Local #1\",\r\n                    code: `<DatePicker\r\n  value=\"2020/09/01 11:30:24 pm\"\r\n  format=\"YYYY/MM/DD hh:mm:ss a\"\r\n  calendar=\"gregorian\"\r\n  local=\"en\"\r\n  timePicker\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        value=\"2020/09/01 11:30:24 pm\"\r\n                        format=\"YYYY/MM/DD hh:mm:ss a\"\r\n                        calendar=\"gregorian\"\r\n                        local=\"en\"\r\n                        timePicker\r\n                    />\r\n                },\r\n                {\r\n                    title: \"Format & Local #2\",\r\n                    code: `const [date, setDate] = useState(new Date())\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={date}\r\n  onChange={setDate}\r\n  format=\"dddd DD MMMM YYYY @ hh:mm A\"\r\n  calendar=\"persian\"\r\n  local=\"en\"\r\n  timePicker\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        value={FL2}\r\n                        onChange={setFL2}\r\n                        format=\"dddd DD MMMM YYYY @ hh:mm A\"\r\n                        calendar=\"persian\"\r\n                        local=\"en\"\r\n                        timePicker\r\n                    />\r\n                }, {\r\n                    title: \"Format & Local #3\",\r\n                    code: `const [date, setDate] = useState(new DateObject())\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={date}\r\n  onChange={setDate}\r\n  format=\"HH:mm:ss YYYY/MM/DD\"\r\n  calendar=\"arabic\"\r\n  local=\"ar\"\r\n  timePicker\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        value={FL3}\r\n                        onChange={setFL3}\r\n                        format=\"HH:mm:ss YYYY/MM/DD\"\r\n                        calendar=\"arabic\"\r\n                        local=\"ar\"\r\n                        timePicker\r\n                    />\r\n                },\r\n                {\r\n                    title: \"Ignore Formating\",\r\n                    code: `<DatePicker\r\n  timePicker\r\n  format=\"Date:YYYY/MM/DD, Time:HH:mm:ss\"\r\n  formattingIgnoreList={[\"Date\", \"Time\"]}\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        timePicker\r\n                        format=\"Date:YYYY/MM/DD, Time:HH:mm:ss\"\r\n                        formattingIgnoreList={[\"Date\", \"Time\"]}\r\n                    />\r\n                }\r\n                ,\r\n                {\r\n                    title: \"On Change (single mode)\",\r\n                    code: `const [dateObject, setDateObject] = useState({ })\r\nconst [gregorian, setGregorian] = useState(\"\")\r\nconst [persian, setPersian] = useState(\"\")\r\nconst [arabic, setArabic] = useState(\"\")\r\nconst [indian, setIndian] = useState(\"\")\r\nconst [format, setFormat] = useState(\"MM/DD/YYYY\")\r\nconst [jsDate, setJsDate] = useState(\"\")\r\n\r\nuseEffect(() => {\r\n  if (dateObject.isValid) {\r\n                setGregorian(dateObject.convert(\"gregorian\").format(format))\r\n    setPersian(dateObject.convert(\"persian\").format(format))\r\n    setArabic(dateObject.convert(\"arabic\").format(format))\r\n    setIndian(dateObject.convert(\"indian\").format(format))\r\n    setJsDate(dateObject.toDate().toString())\r\n  } else {\r\n                setGregorian(\"\")\r\n    setPersian(\"\")\r\n    setArabic(\"\")\r\n    setIndian(\"\")\r\n    setJsDate(\"\")\r\n  }\r\n}, [dateObject, format])\r\n\r\nreturn(\r\n  <div>\r\n    <div>\r\n      <div>\r\n        <span style={{ fontWeight: \"bold\" }}>click to select:</span>\r\n        <DatePicker\r\n          onChange={dateObject => setDateObject(dateObject)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <span style={{ fontWeight: \"bold\" }}>format:</span>\r\n        <select\r\n          value={format}\r\n          onChange={e => setFormat(e.target.value)}\r\n        >\r\n          <option>MM/DD/YYYY</option>\r\n          <option>DD-MM-YYYY</option>\r\n          <option>YYYY,MM,DD</option>\r\n          <option>dddd DD MMMM YYYY</option>\r\n          <option>MMM/DD/YYYY hh:mm:ss a</option>\r\n          <option>MMM/DD/YYYY HH:mm:ss</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <span style={{ fontWeight: \"bold\" }}>gregorian :</span>\r\n        <span>{gregorian}</span>\r\n      </div>\r\n      <div>\r\n        <span style={{ fontWeight: \"bold\" }}>persian :</span>\r\n        <span>{persian}</span>\r\n      </div>\r\n      <div>\r\n        <span style={{ fontWeight: \"bold\" }}>arabic :</span>\r\n        <span>{arabic}</span>\r\n      </div>\r\n      <div>\r\n        <span style={{ fontWeight: \"bold\" }}>indian :</span>\r\n        <span>{indian}</span>\r\n      </div>\r\n      <div>\r\n        <span style={{ fontWeight: \"bold\" }}>javascript date :</span>\r\n        <span>{jsDate}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n`,\r\n                    jsx: <div>\r\n                        <div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\" }}>click to select:</span>\r\n                                <DatePicker\r\n                                    onChange={dateObject => setDateObject(dateObject)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\" }}>format:</span>\r\n                                <select value={format} onChange={e => setFormat(e.target.value)}>\r\n                                    <option>MM/DD/YYYY</option>\r\n                                    <option>DD-MM-YYYY</option>\r\n                                    <option>YYYY,MM,DD</option>\r\n                                    <option>dddd DD MMMM YYYY</option>\r\n                                    <option>ddd MMM DD YYYY HH:mm:ss</option>\r\n                                    <option>MMM/DD/YYYY hh:mm:ss a</option>\r\n                                    <option>MMM/DD/YYYY HH:mm:ss</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\" }}>gregorian :</span>\r\n                                <span>{gregorian}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\" }}>persian :</span>\r\n                                <span>{persian}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\" }}>arabic :</span>\r\n                                <span>{arabic}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\" }}>indian :</span>\r\n                                <span>{indian}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={{ fontWeight: \"bold\" }}>javascript date :</span>\r\n                                <span>{jsDate}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                },\r\n                {\r\n                    title: \"On Change (multiple mode)\",\r\n                    code: `<DatePicker\r\n  multiple\r\n  onChange={array => { //Array of Dateobjecs\r\n    alert(\"selected dates :\\\\n\" + array.join(\",\\\\n\"))\r\n  }}\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        multiple\r\n                        onChange={array => {\r\n                            alert(\"selected dates :\\n\" + array.join(\",\\n\"))\r\n                        }}\r\n                    />\r\n                },\r\n                {\r\n                    title: \"Custom Months & WeekDays\",\r\n                    description: \"The following 4 examples are used in case you want the names of months or week days be displayed only in the calendar.\",\r\n                    examples: [\r\n                        {\r\n                            title: \"Week Days #1\",\r\n                            code: `<DatePicker\r\n  weekDays={[1, 2, 3, 4, 5, 6, 7]}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                weekDays={[1, 2, 3, 4, 5, 6, 7]}\r\n                            />\r\n                        }, {\r\n                            title: \"Week Days #2\",\r\n                            code: `<DatePicker\r\n  weekDays={[\"SU\", \"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\"]}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                weekDays={[\"SU\", \"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\"]}\r\n                            />\r\n                        }, {\r\n                            title: \"Months #1\",\r\n                            code: `<DatePicker\r\n  months={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                months={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]}\r\n                            />\r\n                        }, {\r\n                            title: \"Months #2\",\r\n                            code: `import DatePicker, {DateObject} from \"react-multi-date-picker\";\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  months={new DateObject().months.map(month => month.shortName)}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                months={new DateObject().months.map(month => month.shortName)}\r\n                            />\r\n                        },\r\n                        {\r\n                            title: \"Format Months & WeekDays\",\r\n                            description: <div>\r\n                                <p>Follow the instructions below to see the custom names in Datepicker input. (this option is only availble for DatePicker)</p>\r\n                                <p>*format, formattingIgnoreList and style are optional</p>\r\n                            </div>,\r\n                            code: `<DatePicker\r\n  months={[\r\n    [\"jan\", \"j\"], //[[\"name\",\"shortName\"], ... ]\r\n    [\"feb\", \"f\"],\r\n    [\"mar\", \"m\"],\r\n    [\"apr\", \"a\"],\r\n    [\"may\", \"m\"],\r\n    [\"jun\", \"j\"],\r\n    [\"jul\", \"j\"],\r\n    [\"aug\", \"a\"],\r\n    [\"sep\", \"s\"],\r\n    [\"oct\", \"o\"],\r\n    [\"nov\", \"n\"],\r\n    [\"dec\", \"d\"],\r\n  ]}\r\n  weekDays={[\r\n    [\"sun\", \"s\"], //[[\"name\",\"shortName\"], ... ]\r\n    [\"mon\", \"m\"],\r\n    [\"tue\", \"t\"],\r\n    [\"wed\", \"w\"],\r\n    [\"thu\", \"t\"],\r\n    [\"fri\", \"f\"],\r\n    [\"sat\", \"s\"],\r\n  ]}\r\n  format=\"week day name: ddd (dddd), month name: MMM (MMMM) of YYYY\"\r\n  formattingIgnoreList={[\"week\", \"day\", \"name\", \"month\", \"of\"]}\r\n  containerStyle={{ width: \"90%\" }}\r\n  style={{ width: \"100%\" }}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                months={[\r\n                                    [\"jan\", \"j\"],\r\n                                    [\"feb\", \"f\"],\r\n                                    [\"mar\", \"m\"],\r\n                                    [\"apr\", \"a\"],\r\n                                    [\"may\", \"m\"],\r\n                                    [\"jun\", \"j\"],\r\n                                    [\"jul\", \"j\"],\r\n                                    [\"aug\", \"a\"],\r\n                                    [\"sep\", \"s\"],\r\n                                    [\"oct\", \"o\"],\r\n                                    [\"nov\", \"n\"],\r\n                                    [\"dec\", \"d\"],\r\n                                ]}\r\n                                weekDays={[\r\n                                    [\"sun\", \"s\"],\r\n                                    [\"mon\", \"m\"],\r\n                                    [\"tue\", \"t\"],\r\n                                    [\"wed\", \"w\"],\r\n                                    [\"thu\", \"t\"],\r\n                                    [\"fri\", \"f\"],\r\n                                    [\"sat\", \"s\"],\r\n                                ]}\r\n                                format=\"week day name: ddd (dddd), month name: MMM (MMMM) of YYYY\"\r\n                                formattingIgnoreList={[\"week\", \"day\", \"name\", \"month\", \"of\"]}\r\n                                containerStyle={{ width: \"90%\" }}\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                        }\r\n                    ]\r\n                },\r\n\r\n                {\r\n                    title: \"Layouts\",\r\n                    examples: [\r\n                        {\r\n                            title: \"Mobile\",\r\n                            code: `import \"react-multi-date-picker/styles/layouts/mobile.css\"\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  className=\"rmdp-mobile\"\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                className=\"rmdp-mobile\"\r\n                            />\r\n                        }\r\n                    ]\r\n                }\r\n                , {\r\n                    title: \"Colors\",\r\n                    examples: [{\r\n                        title: \"green\",\r\n                        code: `import \"react-multi-date-picker/styles/colors/green.css\"\r\n.\r\n.\r\n.\r\n<DatePicker className=\"green\" />`,\r\n                        jsx: <DatePicker className=\"green\" />\r\n                    }, {\r\n                        title: \"red\",\r\n                        code: `import \"react-multi-date-picker/styles/colors/red.css\"\r\n.\r\n.\r\n.\r\n<DatePicker className=\"red\" />`,\r\n                        jsx: <DatePicker className=\"red\" />\r\n                    },\r\n                    {\r\n                        title: \"yellow\",\r\n                        code: `import \"react-multi-date-picker/styles/colors/yellow.css\"\r\n.\r\n.\r\n.\r\n<DatePicker className=\"yellow\" />`,\r\n                        jsx: <DatePicker className=\"yellow\" />\r\n                    },\r\n                    {\r\n                        title: \"purple\",\r\n                        code: `import \"react-multi-date-picker/styles/colors/purple.css\"\r\n.\r\n.\r\n.\r\n<DatePicker className=\"purple\" />`,\r\n                        jsx: <DatePicker className=\"purple\" />\r\n                    },\r\n                    {\r\n                        title: \"teal\",\r\n                        code: `import \"react-multi-date-picker/styles/colors/teal.css\"\r\n.\r\n.\r\n.\r\n<DatePicker className=\"teal\" />`,\r\n                        jsx: <DatePicker className=\"teal\" />\r\n                    },\r\n                    {\r\n                        title: \"bg-dark\",\r\n                        code: `import \"react-multi-date-picker/styles/backgrounds/bg-dark.css\"\r\n.\r\n.\r\n.\r\n<DatePicker className=\"bg-dark\" />`,\r\n                        jsx: <DatePicker className=\"bg-dark\" />\r\n                    },\r\n                    {\r\n                        title: \"bg-gray\",\r\n                        code: `import \"react-multi-date-picker/styles/backgrounds/bg-gray.css\"\r\n.\r\n.\r\n.\r\n<DatePicker className=\"bg-gray\" />`,\r\n                        jsx: <DatePicker className=\"bg-gray\" />\r\n                    }, {\r\n                        title: \"bg-brown\",\r\n                        code: `import \"react-multi-date-picker/styles/backgrounds/bg-brown.css\"\r\n.\r\n.\r\n.\r\n<DatePicker className=\"bg-brown\" />`,\r\n                        jsx: <DatePicker className=\"bg-brown\" />\r\n                    }]\r\n                },\r\n                {\r\n                    title: \"Types\",\r\n                    jsx: <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"5\">Availble Types</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>input (default)</td>\r\n                                <td>input-icon</td>\r\n                                <td>button</td>\r\n                                <td>icon</td>\r\n                                <td>custom</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>,\r\n                    examples: [\r\n                        {\r\n                            title: \"input\",\r\n                            code: `<DatePicker type=\"input\" />`,\r\n                            jsx: <DatePicker type=\"input\" />\r\n                        },\r\n                        {\r\n                            title: \"input-icon\",\r\n                            code: `<DatePicker type=\"input-icon\" />`,\r\n                            jsx: <DatePicker type=\"input-icon\" />\r\n                        },\r\n                        {\r\n                            title: \"button\",\r\n                            code: `<DatePicker type=\"button\" />`,\r\n                            jsx: <DatePicker type=\"button\" />\r\n                        },\r\n                        {\r\n                            title: \"icon\",\r\n                            code: `<DatePicker type=\"icon\" />`,\r\n                            jsx: <DatePicker type=\"icon\" />\r\n                        },\r\n                        {\r\n                            title: \"custom (function)\",\r\n                            code: `<DatePicker\r\n  value=\"2020/10/19\"\r\n  type=\"custom\"\r\n  render={(stringDate, openCalendar) => {\r\n    return (\r\n      <button onClick={openCalendar}>\r\n        {stringDate}\r\n      </button>\r\n    )\r\n  }}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                value=\"2020/10/19\"\r\n                                type=\"custom\"\r\n                                render={(stringDate, openCalendar) => {\r\n                                    return (\r\n                                        <button onClick={openCalendar}>\r\n                                            {stringDate}\r\n                                        </button>\r\n                                    )\r\n                                }}\r\n                            />\r\n                        },\r\n                        {\r\n                            title: \"custom (component)\",\r\n                            code: `import React from \"react\"\r\n\r\nclass CustomComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <button onClick={this.props.openCalendar}>\r\n        {this.props.stringDate}\r\n      </button >\r\n    )\r\n  }\r\n}\r\n\r\nexport default class CustomDatePicker extends React.Component {\r\n  render() {\r\n    return (\r\n      <DatePicker\r\n        value=\"2020/10/19\"\r\n        type=\"custom\"\r\n        render={<CustomComponent />}\r\n      />\r\n    )\r\n  }\r\n}`,\r\n                            jsx: <DatePicker\r\n                                value=\"2020/10/19\"\r\n                                type=\"custom\"\r\n                                render={<CustomComponent />}\r\n                            />\r\n                        },\r\n                        {\r\n                            title: \"custom (input)\",\r\n                            description: <p>Use <b>handleValueChange</b> if you want to see changes in the calendar as the input value changes.</p>,\r\n                            code: `import React from \"react\"\r\n\r\nfunction CustomInput({\r\n  openCalendar,\r\n  stringDate,\r\n  handleValueChange\r\n}) {\r\n  return (\r\n    <input\r\n      onFocus={openCalendar}\r\n      value={stringDate}\r\n      onChange={handleValueChange}\r\n    />\r\n  )\r\n}\r\n\r\n<DatePicker\r\n  type=\"custom\"\r\n  render={<CustomInput />}\r\n/>`,\r\n                            jsx: <DatePicker\r\n                                type=\"custom\"\r\n                                render={<CustomInput />}\r\n                            />\r\n                        },\r\n                        {\r\n                            title: \"Multiple & Range\",\r\n                            description: <div>\r\n                                <p>At version 1.8.1 and in multiple and range mode, I decided to send an array of stringDates instead of stringDate.</p>\r\n                                <p>So to get the input value in versions {\">=\"} 1.8.1, you can follow the below examples.</p>\r\n                            </div>,\r\n                            examples: [\r\n                                {\r\n                                    title: \"custom (multiple mode)\",\r\n                                    code: `import React from \"react\"\r\n\r\nfunction CustomMultipleInput({openCalendar, stringDates}) {\r\n  return (\r\n    <input\r\n      onFocus={openCalendar}\r\n      value={stringDates.join(\", \")}\r\n      readOnly\r\n    />\r\n  )\r\n}\r\n\r\n<DatePicker\r\n  multiple\r\n  type=\"custom\"\r\n  render={<CustomMultipleInput />}\r\n/>`,\r\n                                    jsx: <DatePicker\r\n                                        multiple\r\n                                        type=\"custom\"\r\n                                        render={<CustomMultipleInput />}\r\n                                    />\r\n                                },\r\n                                {\r\n                                    title: \"custom (range mode)\",\r\n                                    code: `import React from \"react\"\r\n\r\nfunction CustomRangeInput({openCalendar, stringDates}) {\r\n  let from = stringDates[0] || \"\"\r\n  let to = stringDates[stringDates.length - 1] || \"\"\r\n  let value = from && to ? ${\"`\"}from: ${\"${\"}from}, to: ${\"${\"}to}${\"`\"} : \"\"\r\n\r\n  return (\r\n    <input\r\n      onFocus={openCalendar}\r\n      value={value}\r\n      readOnly\r\n    />\r\n  )\r\n}\r\n\r\n<DatePicker\r\n  range\r\n  eachDaysInRange\r\n  type=\"custom\"\r\n  render={<CustomRangeInput />}\r\n/>`,\r\n                                    jsx: <DatePicker\r\n                                        range\r\n                                        eachDaysInRange\r\n                                        type=\"custom\"\r\n                                        render={<CustomRangeInput />}\r\n                                    />\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"Calendar Position\",\r\n                    description: <div>\r\n                        <p>\r\n                            You can use this feature to adjust the calendar position relative to the input.<br />\r\n                To use this, you must enter the X and Y positions as positionY-positionX.\r\n            </p>\r\n                        <p>Example: top-center</p>\r\n                        <p>Keep in mind that each of the X and Y positions can be entered as auto.</p>\r\n                        <p>Example: top-auto</p>\r\n                        <table style={{ marginBottom: \"5px\" }}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan=\"3\">Position Y</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>auto</td>\r\n                                    <td>top</td>\r\n                                    <td>bottom</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan=\"4\">Position X</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>auto</td>\r\n                                    <td>left</td>\r\n                                    <td>right</td>\r\n                                    <td>center</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <p>Here are some examples:</p>\r\n                    </div>,\r\n                    examples: [\r\n                        {\r\n                            title: \"Auto\",\r\n                            code: `<div style={{ textAlign: \"center\" }}>\r\n  <DatePicker />\r\n</div>`,\r\n                            jsx: <div style={{ textAlign: \"center\" }}>\r\n                                <DatePicker />\r\n                            </div>\r\n                        },\r\n                        {\r\n                            title: \"Top Center\",\r\n                            code: `<div style={{ textAlign: \"center\" }}>\r\n  <DatePicker\r\n    calendarPosition=\"top-center\"\r\n  />\r\n</div>`,\r\n                            jsx: <div style={{ textAlign: \"center\" }}>\r\n                                <DatePicker\r\n                                    calendarPosition=\"top-center\"\r\n                                />\r\n                            </div>\r\n                        },\r\n                        {\r\n                            title: \"Bottom Left\",\r\n                            code: `<div style={{ textAlign: \"center\" }}>\r\n  <DatePicker\r\n    calendarPosition=\"bottom-left\"\r\n  />\r\n</div>`,\r\n                            jsx: <div style={{ textAlign: \"center\" }}>\r\n                                <DatePicker\r\n                                    calendarPosition=\"bottom-left\"\r\n                                />\r\n                            </div>\r\n                        },\r\n                        {\r\n                            title: \"Auto Right\",\r\n                            code: `<div style={{ textAlign: \"center\" }}>\r\n  <p>Open calendar and scroll to see the result</p>\r\n  <DatePicker\r\n    calendarPosition=\"auto-right\"\r\n    animation\r\n  />\r\n</div>`,\r\n                            jsx: <div style={{ textAlign: \"center\" }}>\r\n                                <p>Open calendar and scroll to see the result</p>\r\n                                <DatePicker\r\n                                    calendarPosition=\"auto-right\"\r\n                                    animation\r\n                                />\r\n                            </div>\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    title: \"Disable Virtual Keyboard\",\r\n                    code: `<DatePicker\r\n  inputMode=\"none\"\r\n/>`,\r\n                    jsx: <DatePicker inputMode=\"none\" />\r\n                },\r\n                {\r\n                    title: \"Disable Editing\",\r\n                    description: <p>This feature only affects on <b>input</b> in <b>single</b> mode</p>,\r\n                    code: `<DatePicker\r\n  editable={false}\r\n/>`,\r\n                    jsx: <DatePicker editable={false} />\r\n                },\r\n                {\r\n                    title: \"Placeholder\",\r\n                    code: `<DatePicker\r\n  placeholder=\"click to open\"\r\n/>`,\r\n                    jsx: <DatePicker placeholder=\"click to open\" />\r\n                },\r\n                {\r\n                    title: \"Input Style\",\r\n                    code: `<DatePicker\r\n  style={{\r\n    backgroundColor: \"white\",\r\n    height: \"24px\",\r\n    borderRadius: \"8px\",\r\n    fontSize: \"14px\",\r\n    padding: \"3px 10px\"\r\n  }}\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        style={{\r\n                            backgroundColor: \"white\",\r\n                            height: \"24px\",\r\n                            borderRadius: \"8px\",\r\n                            fontSize: \"14px\",\r\n                            padding: \"3px 10px\"\r\n                        }}\r\n                    />\r\n                },\r\n                {\r\n                    title: \"Input ClassName\",\r\n                    description: <div>\r\n                        <p>Default <b>input</b> className : <b>rmdp-input</b><br />\r\n            Default <b>button</b> className : <b>rmdp-button</b></p>\r\n                        <p>Note that when you enter a new className, the default className is automatically removed</p>\r\n                    </div>,\r\n                    code: `<DatePicker\r\n  inputClass=\"custom-input\"\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        inputClass=\"custom-input\"\r\n                    />\r\n                },\r\n                {\r\n                    title: \"Disable Year Picker\",\r\n                    code: `<DatePicker disableYearPicker />`,\r\n                    jsx: <DatePicker disableYearPicker />\r\n                },\r\n                {\r\n                    title: \"Disable Month Picker\",\r\n                    code: `<DatePicker disableMonthPicker />`,\r\n                    jsx: <DatePicker disableMonthPicker mind />\r\n                },\r\n                {\r\n                    title: \"Disabled #1\",\r\n                    code: `<DatePicker disabled />`,\r\n                    jsx: <DatePicker disabled />\r\n                },\r\n                {\r\n                    title: \"Disabled #2\",\r\n                    code: `<DatePicker\r\n  type=\"button\"\r\n  placeholder=\"this button is disabled\"\r\n  disabled\r\n/>`,\r\n                    jsx: <DatePicker\r\n                        type=\"button\"\r\n                        placeholder=\"this button is disabled\"\r\n                        disabled\r\n                    />\r\n                }\r\n            ]\r\n        }\r\n        ]\r\n    }\r\n\r\n    // Doc = undefined\r\n\r\n    let a = 0, b = 0\r\n\r\n    function getExamples(examples) {\r\n        if (!examples) return null\r\n\r\n        return examples.map((example, index) => {\r\n            a++\r\n            return (\r\n                <div key={a + index}>\r\n                    <Example\r\n                        id={example.title.replace(/\\s/g, \"-\").toLowerCase()}\r\n                        title={example.title}\r\n                        description={example.description}\r\n                        code={example.code}\r\n                        jsx={example.jsx}\r\n                    />\r\n                    {getExamples(example.examples)}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function getSidebarItem(examples) {\r\n        if (!examples) return null\r\n\r\n        return examples.map((example, index) => {\r\n            b++\r\n            return (\r\n                <li key={b + index}>\r\n                    <a href={\"#\" + example.title.replace(/\\s/g, \"-\").toLowerCase()}>{example.title}</a>\r\n                    <ul className=\"sidebar-sub-menu\">\r\n                        {getSidebarItem(example.examples)}\r\n                    </ul>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div ref={appRef} className=\"App\" >\r\n            <nav className=\"navbar\">\r\n                <span className=\"open-sidebar\" onClick={toggleSidebar}>&#9776;</span>\r\n                <span className=\"title\">\r\n                    {Doc?.navbar?.title}\r\n                </span>\r\n                <span>\r\n                    {\" \" + packageJson.dependencies[\"react-multi-date-picker\"].replace(\"^\", \"\")}\r\n                </span>\r\n                <div className=\"nav-images\">\r\n                    {Doc ?\r\n                        Doc.navbar.logos.map((logo, index) => <div key={index} className=\"nav-image\">\r\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" className={logo.name} href={logo.url}>{logos[logo.name]}</a>\r\n                        </div>)\r\n                        : null\r\n                    }\r\n                </div>\r\n            </nav>\r\n            <ul ref={sidebarRef} className={`sidebar ${isActive ? \"active\" : \"\"}`}>\r\n                {Doc ? getSidebarItem(Doc.examples) : null}\r\n            </ul>\r\n            <div className=\"main\">\r\n                <div className=\"scroll-to-top\"><Arrow direction=\"rmdp-up\" /></div>\r\n                <div className=\"calendar-demo\">\r\n                    {type === \"calendar\" ?\r\n                        <Calendar\r\n                            value={date}\r\n                            onChange={setDate}\r\n                            calendar={calendar}\r\n                            local={local}\r\n                            multiple={multiple}\r\n                            range={range}\r\n                            timePicker={timePicker}\r\n                            onlyTimePicker={onlyTimePicker}\r\n                            onlyMonthPicker={onlyMonthPicker}\r\n                            onlyYearPicker={onlyYearPicker}\r\n                            mustShowDates={mustShowDates}\r\n                            className={`${layout} ${color} ${bg}`}\r\n                            showOtherDays={showOtherDays}\r\n                        />\r\n                        :\r\n                        <DatePicker\r\n                            value={date}\r\n                            onChange={setDate}\r\n                            calendar={calendar}\r\n                            local={local}\r\n                            multiple={multiple}\r\n                            range={range}\r\n                            timePicker={timePicker}\r\n                            onlyTimePicker={onlyTimePicker}\r\n                            onlyMonthPicker={onlyMonthPicker}\r\n                            onlyYearPicker={onlyYearPicker}\r\n                            mustShowDates={mustShowDates}\r\n                            className={`${layout} ${color} ${bg}`}\r\n                            type={type}\r\n                            showOtherDays={showOtherDays}\r\n                            calendarPosition={position}\r\n                            animation={animation === \"on\"}\r\n                        />\r\n                    }\r\n                </div>\r\n                <Selectors\r\n                    selectors={[\r\n                        {\r\n                            title: \"Calendar\",\r\n                            options: [\r\n                                [\"Gregorian\", \"gregorian\"],\r\n                                [\"Persian\", \"persian\"],\r\n                                [\"Arabic\", \"arabic\"],\r\n                                [\"Indian\", \"indian\"],\r\n                            ],\r\n                            value: calendar,\r\n                            onChange: setCalendar\r\n                        },\r\n                        {\r\n                            title: \"Local\",\r\n                            options: [\r\n                                [\"English\", \"en\"],\r\n                                [\"Persian\", \"fa\"],\r\n                                [\"Arabic\", \"ar\"],\r\n                                [\"Hindi\", \"hi\"],\r\n                            ],\r\n                            value: local,\r\n                            onChange: setLocal\r\n                        },\r\n                        {\r\n                            title: \"Mode\",\r\n                            options: [\r\n                                [\"Single\", \"single\"],\r\n                                [\"Multiple\", \"multiple\"],\r\n                                [\"Range\", \"range\"],\r\n                            ],\r\n                            value: !multiple && !range\r\n                                ? \"single\"\r\n                                : multiple\r\n                                    ? \"multiple\"\r\n                                    : \"range\"\r\n                            ,\r\n                            onChange: val => {\r\n                                switch (val) {\r\n                                    case \"multiple\":\r\n                                        if (range) setRange(false)\r\n\r\n                                        setMultiple(true)\r\n                                        break\r\n                                    case \"range\":\r\n                                        if (multiple) setMultiple(false)\r\n\r\n                                        setRange(true)\r\n                                        break\r\n                                    default:\r\n                                        if (Array.isArray(date)) setDate(date[date.length - 1])\r\n\r\n                                        setMultiple(false)\r\n                                        setRange(false)\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            title: \"Time Picker\",\r\n                            disabled: range || multiple,\r\n                            options: [\r\n                                [\"Disable\", \"disable\"],\r\n                                [\"Enable\", \"enable\"],\r\n                                [\"Only Time Picker\", \"onlyTimePicker\"],\r\n                                [\"Only Month Picker\", \"onlyMonthPicker\"],\r\n                                [\"Only Year Picker\", \"onlyYearPicker\"],\r\n                            ],\r\n                            value: !timePicker && !onlyTimePicker && !onlyMonthPicker && !onlyYearPicker ? \"disable\"\r\n                                : timePicker ? \"enable\"\r\n                                    : onlyTimePicker ? \"onlyTimePicker\"\r\n                                        : onlyMonthPicker ? \"onlyMonthPicker\"\r\n                                            : \"onlyYearPicker\"\r\n                            ,\r\n                            onChange: val => {\r\n                                switch (val) {\r\n                                    case \"enable\":\r\n                                        setTimePicker(true)\r\n                                        setOnlyTimePicker(false)\r\n                                        setOnlyMonthPicker(false)\r\n                                        setOnlyYearPicker(false)\r\n                                        break\r\n                                    case \"onlyTimePicker\":\r\n                                        setTimePicker(false)\r\n                                        setOnlyTimePicker(true)\r\n                                        setOnlyMonthPicker(false)\r\n                                        setOnlyYearPicker(false)\r\n                                        break\r\n                                    case \"onlyMonthPicker\":\r\n                                        setTimePicker(false)\r\n                                        setOnlyTimePicker(false)\r\n                                        setOnlyMonthPicker(true)\r\n                                        setOnlyYearPicker(false)\r\n                                        break\r\n                                    case \"onlyYearPicker\":\r\n                                        setTimePicker(false)\r\n                                        setOnlyTimePicker(false)\r\n                                        setOnlyMonthPicker(false)\r\n                                        setOnlyYearPicker(true)\r\n                                        break\r\n                                    default:\r\n                                        setTimePicker(false)\r\n                                        setOnlyTimePicker(false)\r\n                                        setOnlyMonthPicker(false)\r\n                                        setOnlyYearPicker(false)\r\n                                }\r\n                            }\r\n                        }\r\n                        ,\r\n                        {\r\n                            title: \"Dates panel\",\r\n                            disabled: !range && !multiple,\r\n                            options: [\r\n                                [\"Enable\", \"enable\"],\r\n                                [\"Disable\", \"disable\"]\r\n                            ],\r\n                            value: mustShowDates ? \"enable\" : \"disable\",\r\n                            onChange: val => {\r\n                                if (val === \"enable\") {\r\n                                    setMustShowDates(true)\r\n                                } else {\r\n                                    setMustShowDates(false)\r\n                                }\r\n                            }\r\n                        }\r\n                        ,\r\n                        {\r\n                            title: \"Type\",\r\n                            options: [\r\n                                [\"Calendar\", \"calendar\"],\r\n                                [\"Input\", \"input\"],\r\n                                [\"Input-Icon\", \"input-icon\"],\r\n                                [\"Icon\", \"icon\"],\r\n                                [\"Button\", \"button\"],\r\n                            ],\r\n                            value: type,\r\n                            onChange: setType\r\n                        },\r\n                        {\r\n                            title: \"Layout\",\r\n                            options: [\r\n                                [\"Default\", \"default\"],\r\n                                [\"Mobile\", \"rmdp-mobile\"]\r\n                            ],\r\n                            value: !layout ? \"default\" : \"rmdp-mobile\",\r\n                            onChange: val => {\r\n                                if (val === \"default\") {\r\n                                    setLayout(\"\")\r\n                                } else {\r\n                                    setLayout(\"rmdp-mobile\")\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            title: \"Other Days\",\r\n                            options: [\r\n                                [\"Enable\", \"enable\"],\r\n                                [\"Disable\", \"disable\"]\r\n                            ],\r\n                            value: showOtherDays ? \"enable\" : \"disable\",\r\n                            onChange: val => {\r\n                                if (val === \"enable\") {\r\n                                    setShowOtherDays(true)\r\n                                } else {\r\n                                    setShowOtherDays(false)\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            title: \"Colors\",\r\n                            options: [\r\n                                [\"Default\", \"\"],\r\n                                [\"Green\", \"green\"],\r\n                                [\"Red\", \"red\"],\r\n                                [\"Yellow\", \"yellow\"],\r\n                                [\"Purple\", \"purple\"],\r\n                                [\"Teal\", \"teal\"],\r\n                            ],\r\n                            value: color,\r\n                            onChange: setColor\r\n                        },\r\n                        {\r\n                            title: \"BackGrounds\",\r\n                            options: [\r\n                                [\"Default\", \"\"],\r\n                                [\"Dark\", \"bg-dark\"],\r\n                                [\"Gray\", \"bg-gray\"],\r\n                                [\"Brown\", \"bg-brown\"]\r\n                            ],\r\n                            value: bg,\r\n                            onChange: setbg\r\n                        },\r\n                        {\r\n                            title: \"Calendar Position\",\r\n                            options: [\r\n                                [\"Auto\", \"auto\"],\r\n                                [\"Bottom Left\", \"bottom-left\"],\r\n                                [\"Bottom Center\", \"bottom-center\"],\r\n                                [\"Bottom Right\", \"bottom-right\"],\r\n                                [\"Top Left\", \"top-left\"],\r\n                                [\"Top Center\", \"top-center\"],\r\n                                [\"Top Right\", \"top-right\"],\r\n                            ],\r\n                            value: position,\r\n                            onChange: setPosition,\r\n                            disabled: type === \"calendar\" || layout === \"rmdp-mobile\"\r\n                        },\r\n                        {\r\n                            title: \"Animation\",\r\n                            options: [\r\n                                [\"OFF\", \"off\"],\r\n                                [\"ON\", \"on\"]\r\n                            ],\r\n                            value: animation,\r\n                            onChange: setAnimation,\r\n                            disabled: type === \"calendar\" || layout === \"rmdp-mobile\"\r\n                        }\r\n                    ]}\r\n                />\r\n\r\n                {Doc && getExamples(Doc.examples)}\r\n            </div>\r\n        </div >\r\n    );\r\n\r\n    function toggleSidebar() {\r\n        setIsActive(!isActive)\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport packageJson from \"../../package.json\"\r\nimport DatePicker from \"react-multi-date-picker\"\r\n// import DatePicker from \"../components/date_picker/date_picker\"\r\nimport Example from \"../components/example\"\r\nimport { ReactComponent as GitHub } from \"../assets/github.svg\"\r\nimport { ReactComponent as NPM } from \"../assets/npm.svg\"\r\nimport screenshot from \"../assets/screenshot.jpg\"\r\nimport \"../calendar_demo.css\"\r\nimport Arrow from \"../components/arrow/arrow\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport \"react-multi-date-picker/styles/backgrounds/bg-dark.css\"\r\nimport \"react-multi-date-picker/styles/backgrounds/bg-gray.css\"\r\nimport \"react-multi-date-picker/styles/backgrounds/bg-brown.css\"\r\n\r\n\r\nimport \"react-multi-date-picker/styles/colors/red.css\"\r\nimport \"react-multi-date-picker/styles/colors/green.css\"\r\nimport \"react-multi-date-picker/styles/colors/yellow.css\"\r\nimport \"react-multi-date-picker/styles/colors/purple.css\"\r\nimport \"react-multi-date-picker/styles/colors/teal.css\"\r\n\r\nimport \"react-multi-date-picker/styles/layouts/mobile.css\"\r\n\r\n// import Settings from \"../plugins/settings/settings\"\r\n// import DatePickerHeader from \"../plugins/date_picker_header/date_picker_header.js\"\r\n// import MultiColors from \"../plugins/mutli_colors/multi_colors\"\r\n// import DatePanel from \"../plugins/date_panel/date_panel\"\r\n\r\nimport { Settings, DatePickerHeader, MultiColors, DatePanel } from \"react-multi-date-picker/plugins\"\r\n\r\n// import 'react-modern-calendar-datepicker/lib/DatePicker.css';\r\n// import DatePicker from 'react-modern-calendar-datepicker';\r\n\r\n// import \"../styles/colors/red.css\"\r\n// import \"../styles/colors/green.css\"\r\n// import \"../styles/colors/yellow.css\"\r\n// import \"../styles/colors/purple.css\"\r\n// import \"../styles/colors/teal.css\"\r\n// import \"../styles/backgrounds/bg-dark.css\"\r\n// import \"../styles/backgrounds/bg-gray.css\"\r\n// import \"../styles/backgrounds/bg-brown.css\"\r\n// import \"../styles/layouts/mobile.css\"\r\n\r\nimport \"../custom-class.css\"\r\n\r\nimport Prism from 'prismjs';\r\nimport \"prismjs/themes/prism-okaidia.css\"\r\nimport 'prismjs/components/prism-jsx.min';\r\n\r\nfunction Home() {\r\n    const [isActive, setIsActive] = useState(false)\r\n    const sidebarRef = useRef(null)\r\n    const appRef = useRef(null)\r\n    const [settings1, setSettings1] = useState({})\r\n    const [props, setProps] = useState({})\r\n\r\n    useEffect(() => Prism.highlightAll(), [])\r\n\r\n    useEffect(() => {\r\n        let scrollToTop = document.querySelector(\".scroll-to-top\");\r\n        let main = document.querySelector(\".main\")\r\n\r\n        document.addEventListener(\"click\", handleClickOutside)\r\n        scrollToTop.addEventListener(\"click\", toTop)\r\n        main.addEventListener(\"scroll\", activeScrollTop)\r\n\r\n        function handleClickOutside(event) {\r\n            if (sidebarRef.current && !sidebarRef.current.contains(event.target) && !event.target.classList.contains(\"open-sidebar\")) {\r\n                setIsActive(false);\r\n            }\r\n        }\r\n\r\n        function activeScrollTop() {\r\n            scrollToTop.style.display = main.scrollTop > 50 ? \"block\" : \"none\"\r\n        }\r\n\r\n        function toTop() {\r\n            main.scrollTop = 0;\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleClickOutside, false)\r\n            scrollToTop.removeEventListener(\"click\", toTop)\r\n            window.removeEventListener(\"scroll\", activeScrollTop)\r\n        }\r\n    }, [])\r\n\r\n    const logos = {\r\n        npm: <NPM />,\r\n        github: <GitHub />\r\n    }\r\n\r\n    let Doc = {\r\n        title: \"DatePicker\",\r\n        screenshot,\r\n        navbar: {\r\n            title: \"React Multi Date Picker\",\r\n            logos: [\r\n                { name: \"github\", url: \"https://github.com/shahabyazdi/react-multi-date-picker\" },\r\n                { name: \"npm\", url: \"https://www.npmjs.com/package/react-multi-date-picker\" }\r\n            ]\r\n        },\r\n        examples: [\r\n            {\r\n                title: \"Usage\",\r\n                description: <div>\r\n                    <p>Plugins Prop accepts an array of objects, which the following three properties can be entered on each of them.</p>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>plugin</th>\r\n                                <th>position</th>\r\n                                <th>disable</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                    <p>This is the general way to add a imported plugin to Datepicker:</p>\r\n                    <pre>\r\n                        <code className=\"language-jsx\">\r\n                            {`import React from \"react\"\r\nimport DatePicker from \"react-multi-date-picker\"\r\nimport { MyFavoritePlugin } from \"react-mylti-date-picker/plugins\"\r\n\r\nexport default function Example() {\r\n    return (\r\n        <DatePicker\r\n            plugins={[\r\n                {\r\n                    plugin: <MyFavoritePlugin />,\r\n                    position: \"favoritePosition\",\r\n                    disable: false\r\n                }\r\n            ]}\r\n        />\r\n    )\r\n}\r\n\r\n`}\r\n                        </code>\r\n                    </pre>\r\n                    <p>In the example above, entering a position value is required to render the plugin.</p>\r\n                    <p>But you only need to enter the disable value when you want to disable that plugin.</p>\r\n                </div>\r\n            },\r\n            {\r\n                title: \"Positions\",\r\n                description: <div>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>top</th>\r\n                                <th>bottom</th>\r\n                                <th>left</th>\r\n                                <th>right</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                </div>\r\n            },\r\n            {\r\n                title: \"Examples\",\r\n                examples: [\r\n                    {\r\n                        title: \"Header\",\r\n                        description: <div>\r\n                            <h5>Header Props:</h5>\r\n                            <table style={{ marginLeft: \"15px\" }}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Prop</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>size</td>\r\n                                        <td>String</td>\r\n                                        <td>\"big\"</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>calendar</td>\r\n                                        <td>String</td>\r\n                                        <td>Default DatePicker Calendar</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>local</td>\r\n                                        <td>String</td>\r\n                                        <td>Default DatePicker Local</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <h5>Sizes:</h5>\r\n                            <table style={{ marginLeft: \"15px\" }}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>big</th>\r\n                                        <th>medium</th>\r\n                                        <th>small</th>\r\n                                    </tr>\r\n                                </thead>\r\n                            </table>\r\n                        </div>,\r\n                        examples: [\r\n                            {\r\n                                title: \"Header Right\",\r\n                                code: `import { DatePickerHeader } from \"react-multi-date-picker/plugins\"\r\n.\r\n.\r\n.\r\n<DatePicker\r\n    arrow\r\n    plugins={[\r\n        {\r\n            plugin: <DatePickerHeader />,\r\n            position: \"right\"\r\n        }\r\n    ]}\r\n/>`,\r\n                                jsx: <DatePicker\r\n                                    arrow\r\n                                    plugins={[\r\n                                        {\r\n                                            plugin: <DatePickerHeader />,\r\n                                            position: \"right\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            },\r\n                            {\r\n                                title: \"Persian Calendar\",\r\n                                code: `import { DatePickerHeader } from \"react-multi-date-picker/plugins\"\r\n.\r\n.\r\n.\r\n<DatePicker\r\n    calendar=\"persian\"\r\n    local=\"fa\"\r\n    arrow\r\n    plugins={[\r\n        {\r\n            plugin: <DatePickerHeader />,\r\n            position: \"right\"\r\n        }\r\n    ]}\r\n/>`,\r\n                                jsx: <DatePicker\r\n                                    calendar=\"persian\"\r\n                                    local=\"fa\"\r\n                                    arrow\r\n                                    plugins={[\r\n                                        {\r\n                                            plugin: <DatePickerHeader />,\r\n                                            position: \"right\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            },\r\n                            {\r\n                                title: \"English Calendar with Indian Header\",\r\n                                code: `import { DatePickerHeader } from \"react-multi-date-picker/plugins\"\r\n.\r\n.\r\n.\r\n<DatePicker\r\n    arrow\r\n    plugins={[\r\n        {\r\n            plugin: <DatePickerHeader local=\"hi\" size=\"medium\" />,\r\n            position: \"right\"\r\n        }\r\n    ]}\r\n/>`,\r\n                                jsx: <DatePicker\r\n                                    arrow\r\n                                    plugins={[\r\n                                        {\r\n                                            plugin: <DatePickerHeader local=\"hi\" size=\"medium\" />,\r\n                                            position: \"right\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            },\r\n                            {\r\n                                title: \"Styling Header\",\r\n                                code: `import { DatePickerHeader } from \"react-multi-date-picker/plugins\"\r\n.\r\n.\r\n.\r\n<DatePicker\r\n    arrow\r\n    plugins={[\r\n        {\r\n            plugin: <DatePickerHeader size=\"small\" style={{ backgroundColor: \"red\" }} />,\r\n            position: \"top\"\r\n        }\r\n    ]}\r\n/>`,\r\n                                jsx: <DatePicker\r\n                                    arrow\r\n                                    plugins={[\r\n                                        {\r\n                                            plugin: <DatePickerHeader size=\"small\" style={{ backgroundColor: \"red\" }} />,\r\n                                            position: \"top\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: \"Settings\",\r\n                        examples: [\r\n                            {\r\n                                title: \"Settings Bottom\",\r\n                                description: <div>\r\n                                </div>,\r\n                                code: `import { Settings } from \"react-multi-date-picker/plugins\"\r\n.\r\n.\r\n.\r\nconst [settings, setSettings] = useState({})\r\n\r\n<DatePicker\r\n    arrow\r\n    {...settings}\r\n    plugins={[\r\n        {\r\n            plugin: <Settings onSettingChanged={setSettings} />,\r\n            position: \"bottom\"\r\n        }\r\n    ]}\r\n/>`,\r\n                                jsx: <DatePicker\r\n                                    arrow\r\n                                    {...settings1}\r\n                                    plugins={[\r\n                                        {\r\n                                            plugin: <Settings onSettingChanged={setSettings1} />,\r\n                                            position: \"bottom\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    Doc = undefined\r\n\r\n    let a = 0, b = 0\r\n\r\n    function getExamples(examples) {\r\n        if (!examples) return null\r\n\r\n        return examples.map((example, index) => {\r\n            a++\r\n            return (\r\n                <div key={a + index}>\r\n                    <Example\r\n                        id={example.title.replace(/\\s/g, \"-\").toLowerCase()}\r\n                        title={example.title}\r\n                        description={example.description}\r\n                        code={example.code}\r\n                        jsx={example.jsx}\r\n                    />\r\n                    {getExamples(example.examples)}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function getSidebarItem(examples) {\r\n        if (!examples) return null\r\n\r\n        return examples.map((example, index) => {\r\n            b++\r\n            return (\r\n                <li key={b + index}>\r\n                    <a href={\"#\" + example.title.replace(/\\s/g, \"-\").toLowerCase()}>{example.title}</a>\r\n                    <ul className=\"sidebar-sub-menu\">\r\n                        {getSidebarItem(example.examples)}\r\n                    </ul>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div ref={appRef} className=\"App\" >\r\n            <nav className=\"navbar\">\r\n                <span className=\"open-sidebar\" onClick={toggleSidebar}>&#9776;</span>\r\n                <span className=\"title\">\r\n                    {Doc?.navbar?.title}\r\n                </span>\r\n                <span>\r\n                    {\" \" + packageJson.dependencies[\"react-multi-date-picker\"].replace(\"^\", \"\")}\r\n                </span>\r\n                <span style={{ marginLeft: \"10px\" }}><Link to=\"/react-multi-date-picker\">Home</Link></span>\r\n                <div className=\"nav-images\">\r\n                    {Doc ?\r\n                        Doc.navbar.logos.map((logo, index) => <div key={index} className=\"nav-image\">\r\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" className={logo.name} href={logo.url}>{logos[logo.name]}</a>\r\n                        </div>)\r\n                        : null\r\n                    }\r\n                </div>\r\n            </nav>\r\n            <ul ref={sidebarRef} className={`sidebar ${isActive ? \"active\" : \"\"}`}>\r\n                {Doc ? getSidebarItem(Doc.examples) : null}\r\n            </ul>\r\n            <div className=\"main\">\r\n                <div className=\"scroll-to-top\"><Arrow direction=\"rmdp-up\" /></div>\r\n                <div className=\"calendar-demo\" style={{ direction: \"ltr\" }}>\r\n                    <DatePicker\r\n                        {...props}\r\n                        arrow\r\n                        plugins={[\r\n                            <MultiColors position=\"left\" setProps={setProps} />,\r\n\r\n                            <DatePickerHeader position=\"top\" size=\"big\" />,\r\n                            <Settings position=\"bottom\" setProps={setProps} defaultActive=\"others\" />,\r\n                            <DatePanel position=\"right\" sort=\"date\" eachDaysInRange />,\r\n                        ]}\r\n                    />\r\n                </div>\r\n                {Doc && getExamples(Doc.examples)}\r\n            </div>\r\n        </div >\r\n    );\r\n\r\n    function toggleSidebar() {\r\n        setIsActive(!isActive)\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\"\nimport Home from \"./routes/home\"\nimport Plugins from \"./routes/plugins\"\nimport { Route, Switch } from \"react-router-dom\"\n\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route exact path=\"/react-multi-date-picker\"><Home /></Route>\n      <Route exact path=\"/react-multi-date-picker/plugins\"><Plugins /></Route>\n    </Switch>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\"\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}