{"version":3,"sources":["webpack://date-picker/./src/docs/installation.js","webpack://date-picker/./src/pages/installation.js"],"names":["translate","language","title","description","code","className","jsx","Installation","pageContext","doc","installation"],"mappings":"kLAEe,SAAS,EAACA,EAAWC,GA4KlC,MAAO,CA3KK,CACVC,MAAO,MACPC,YAAaH,EAAU,mBACvBI,KAAK,8CAGM,CACXF,MAAO,OACPC,YAAaH,EAAU,oBACvBI,KAAK,oCAGa,CAClBF,MAAO,eACPC,YAAa,gCACX,yBAAIH,EAAU,qBAAd,MACA,2BACE,wBAAMK,UAAU,gBAAhB,qDAMF,yBAAIL,EAAU,mBAAd,MACA,2BACE,wBAAMK,UAAU,gBAAhB,yDASO,CACXH,MAAOF,EAAU,mBACjBM,IAAK,gCACH,0BACE,0BACE,yBAAIN,EAAU,sCACd,yBAAIA,EAAU,sCACd,yBAAIA,EAAU,sCACd,2BACE,wBAAMK,UAAU,gBAAhB,mBAIF,yBAAIL,EAAU,sCACd,2BACE,wBAAMK,UAAU,gBAAhB,iKAWNL,EAAU,iCAXJ,gCAmBJ,0BACE,yBAAIA,EAAU,sCACd,yBAAIA,EAAU,sCACd,yBAAIA,EAAU,sCACd,2BACE,wBAAMK,UAAU,gBAAhB,8SA0BJ,0BACE,yBAAIL,EAAU,sCACd,yBAAIA,EAAU,sCACd,2BACE,wBAAMK,UAAU,gBAAhB,0BAGY,OAAbJ,EAAoB,sBAAwB,uBAH3C,uCAKG,OAAbA,EAAoB,KAApB,iDAWmB,CACjBC,MAAOF,EAAU,cACjBI,KAAK,sRAeU,CACfF,MAAOF,EAAU,YACjBI,KAAK,sRAeY,CACjBF,MAAO,aACPC,YAAaH,EAAU,cACvBI,KAAK,mSC3JM,SAASG,EAAT,GAAwC,IAC/CN,EAD8C,EAAfO,YACRP,UAAY,KAEzC,OACE,gBAAC,IAAD,CAAQA,SAAUA,EAAUQ,IAAKC","file":"component---src-pages-installation-js-967a3764b47524febd74.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default function (translate, language) {\r\n  const npm = {\r\n    title: \"npm\",\r\n    description: translate(\"npm_description\"),\r\n    code: `npm install --save react-multi-date-picker`\r\n  }\r\n\r\n  const yarn = {\r\n    title: \"yarn\",\r\n    description: translate(\"yarn_description\"),\r\n    code: `yarn add react-multi-date-picker`\r\n  }\r\n\r\n  const basicImport = {\r\n    title: \"Basic Import\",\r\n    description: <>\r\n      <p>{translate(\"import_datepicker\")} :</p>\r\n      <pre>\r\n        <code className=\"language-jsx\">\r\n          {\r\n            `import DatePicker from \"react-multi-date-picker\"`\r\n          }\r\n        </code>\r\n      </pre>\r\n      <p>{translate(\"import_calendar\")} :</p>\r\n      <pre>\r\n        <code className=\"language-jsx\">\r\n          {\r\n            `import { Calendar } from \"react-multi-date-picker\"`\r\n          }\r\n        </code>\r\n      </pre>\r\n    </>\r\n  }\r\n\r\n  const note = {\r\n    title: translate(\"Important Notes\"),\r\n    jsx: <>\r\n      <ul>\r\n        <li>\r\n          <p>{translate(\"important_note_description_part_1\")}</p>\r\n          <p>{translate(\"important_note_description_part_2\")}</p>\r\n          <p>{translate(\"important_note_description_part_3\")}</p>\r\n          <pre>\r\n            <code className=\"language-jsx\">\r\n              {`<DatePicker />`}\r\n            </code>\r\n          </pre>\r\n          <p>{translate(\"important_note_description_part_4\")}</p>\r\n          <pre>\r\n            <code className=\"language-jsx\">\r\n              {`const [value, setValue] = useState(initialValue)\r\n.\r\n.\r\n.\r\n<DatePicker \r\n  value={value}\r\n  onChange={handleChange}\r\n/>\r\n\r\nfunction handleChange(value){\r\n  //${translate(\"important_note_code_comment_1\")}\r\n  setValue(value)\r\n}\r\n\r\n`}\r\n            </code>\r\n          </pre>\r\n        </li>\r\n        <li>\r\n          <p>{translate(\"important_note_description_part_5\")}</p>\r\n          <p>{translate(\"important_note_description_part_6\")}</p>\r\n          <p>{translate(\"important_note_description_part_7\")}</p>\r\n          <pre>\r\n            <code className=\"language-jsx\">\r\n              {`const [value, setValue] = useState(new Date())\r\n.\r\n.\r\n.\r\n<DatePicker \r\n  value={value}\r\n  onChange={setValue}\r\n/>\r\n.\r\n.\r\n.\r\n<button onClick={handleSubmit}>submit</button>\r\n.\r\n.\r\n.\r\nfunction handleSubmit(){\r\n  if (value instanceof DateObject) value = value.toDate()\r\n  \r\n  submitDate(value)\r\n}\r\n\r\n`}\r\n            </code>\r\n          </pre>\r\n        </li>\r\n        <li>\r\n          <p>{translate(\"important_note_description_part_8\")}</p>\r\n          <p>{translate(\"important_note_description_part_9\")}</p>\r\n          <pre>\r\n            <code className=\"language-jsx\">\r\n              {\r\n                `<DatePicker\r\n  value=\"${language === \"en\" ? \"05/18/2020 02:20:36\" : \"۰۵/۱۸/۲۰۲۰ ۰۲:۲۰:۳۶\"}\"\r\n  format=\"MM/DD/YYYY HH:mm:ss\"\r\n${language === \"en\" ? \"/>\" : `  calendar=\"persian\"\r\n  locale=\"fa\"\r\n/>`}`\r\n              }\r\n            </code>\r\n          </pre>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  }\r\n\r\n  const datePicker = {\r\n    title: translate(\"DatePicker\"),\r\n    code: `import React, { useState } from \"react\"\r\nimport DatePicker from \"react-multi-date-picker\"\r\n\r\nexport default function Example() {\r\n  const [value, setValue] = useState(new Date())\r\n\r\n  return (\r\n    <DatePicker \r\n      value={value}\r\n      onChange={setValue}\r\n    />\r\n  )\r\n}`\r\n  }\r\n\r\n  const calendar = {\r\n    title: translate(\"Calendar\"),\r\n    code: `import React, { useState } from \"react\"\r\nimport { Calendar } from \"react-multi-date-picker\"\r\n\r\nexport default function Example() {\r\n  const [value, setValue] = useState(new Date())\r\n\r\n  return (\r\n    <Calendar \r\n      value={value}\r\n      onChange={setValue}\r\n    />\r\n  )\r\n}`\r\n  }\r\n\r\n  const dateObject = {\r\n    title: \"DateObject\",\r\n    description: translate(\"dateobject\"),\r\n    code: `import React from \"react\"\r\nimport DatePicker, { DateObject } from \"react-multi-date-picker\"\r\n\r\nexport default function Example() {\r\n  const [value, setValue] = useState(new DateObject())\r\n  \r\n  return (\r\n    <DatePicker \r\n      value={value} \r\n      onChange={setValue} \r\n    />\r\n  )\r\n}`\r\n  }\r\n\r\n  return [\r\n    npm,\r\n    yarn,\r\n    basicImport,\r\n    note,\r\n    datePicker,\r\n    calendar,\r\n    dateObject\r\n  ]\r\n}","import React from \"react\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport installation from \"../docs/installation\"\r\n\r\nexport default function Installation({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={installation} />\r\n  )\r\n}"],"sourceRoot":""}