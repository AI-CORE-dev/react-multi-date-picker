{"version":3,"sources":["webpack://date-picker/./src/docs/types.js","webpack://date-picker/./src/pages/types.js"],"names":["Doc","language","otherProps","translate","code","component","string","customComponent","title","description","jsx","Link","to","render","value","openCalendar","onClick","CustomComponent","CustomInput","multiple","CustomMultipleInput","range","eachDaysInRange","CustomRangeInput","from","onFocus","readOnly","this","props","React","handleValueChange","onChange","Types","pageContext","doc"],"mappings":"gPASe,SAASA,EAAT,GAAmD,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,UAClD,SAASC,EAAKC,EAAWC,EAAQC,GAC/B,MAAM,oDACS,OAAbN,EACII,EAAS,KAEjBA,EACU,GAJN,8HAQMA,EAAS,KAEnBA,EACc,KAZZ,4DAkBEC,EAlBF,UAoBe,OAAbL,EACI,KADJ,iGApBF,YA6BEM,EAAe,OAGnBA,EACQ,IA6KR,MAAO,CAzKc,CACnBC,MAAO,eACPC,YAAa,WACbC,IAAK,gBAAC,EAAAC,KAAD,CAAMC,GAAG,kBAAT,QAAgCT,EAAU,WAG/B,CAChBK,MAAO,aACPJ,KAAMA,EAAK,wEAAD,6CAKVM,IAAK,gBAAC,KAAD,eAAYG,OAAQ,gBAAC,IAAD,OAAmBX,KAGjC,CACXM,MAAO,OACPJ,KAAMA,EAAK,6DAAD,wCAKVM,IAAK,gBAAC,KAAD,eAAYG,OAAQ,gBAAC,IAAD,OAAcX,KAG1B,CACbM,MAAO,SACPJ,KAAMA,EAAK,iEAAD,0CAKVM,IAAK,gBAAC,KAAD,eAAYG,OAAQ,gBAAC,IAAD,OAAgBX,KAGpB,CACrBM,MAAO,oBACPJ,KAAMA,EAAK,GAAD,+MAYVM,IACE,gBAAC,KAAD,eACEI,MAAM,aACND,OAAQ,SAACC,EAAOC,GACd,OAAO,0BAAQC,QAASD,GAAeD,KAErCZ,KAKc,CACtBM,MAAO,qBACPJ,KAAMA,EAAK,4BAAD,0QAeVM,IACE,gBAAC,KAAD,eACEI,MAAM,aACND,OAAQ,gBAACI,EAAD,OACJf,KAKmB,CAC3BM,MAAO,iBACPC,YAAa,eACbL,KAAMA,EACJ,GADQ,mPAcVM,IAAK,gBAAC,KAAD,eAAYG,OAAQ,gBAACK,EAAD,OAAqBhB,KAEpB,CAC1BM,MAAO,mBACPC,YAAa,qBAEE,CACfD,MAAO,yBACPJ,KAAMA,EACJ,GADQ,0OAeVM,IACE,gBAAC,KAAD,eAAYS,UAAQ,EAACN,OAAQ,gBAACO,EAAD,OAA6BlB,KAIhD,CACZM,MAAO,sBACPJ,KAAMA,EACJ,GADQ,kOAWG,OAAbH,EAAA,gEAXU,0HAyBVS,IACE,gBAAC,KAAD,eACEW,OAAK,EACLC,iBAAe,EACfT,OAAQ,gBAACU,EAAD,OACJrB,MAkBV,SAASqB,EAAT,GAAoD,IAAxBR,EAAuB,EAAvBA,aAAcD,EAAS,EAATA,MACpCU,EAAOV,EAAM,IAAM,GACnBF,EAAKE,EAAM,IAAM,GASrB,OAPAA,EACEU,GAAQZ,EACS,OAAbX,EAAA,QACUuB,EADV,QACsBZ,EADtB,MAEQY,EAFR,QAEoBZ,EACpBY,EAEC,yBAAOC,QAASV,EAAcD,MAAOA,EAAOY,UAAQ,KAI/D,SAASN,EAAT,GAAuD,IAAxBL,EAAuB,EAAvBA,aAAcD,EAAS,EAATA,MAC3C,OAAO,yBAAOW,QAASV,EAAcD,MAAOA,EAAOY,UAAQ,I,IAGvDT,E,6FACJJ,OAAA,WACE,OACE,0BAAQG,QAASW,KAAKC,MAAMb,cAAeY,KAAKC,MAAMd,Q,GAH9Be,aAQ9B,SAASX,EAAT,GAAkE,IAA3CH,EAA0C,EAA1CA,aAAcD,EAA4B,EAA5BA,MAAOgB,EAAqB,EAArBA,kBAC1C,OACE,yBAAOL,QAASV,EAAcD,MAAOA,EAAOiB,SAAUD,IC/P3C,SAASE,EAAT,GAAiC,IACxC/B,EADuC,EAAfgC,YACDhC,UAAY,KAEzC,OAAO,gBAAC,IAAD,CAAQA,SAAUA,EAAUiC,IAAKA","file":"component---src-pages-types-js-667e29088fef93a264eb.js","sourcesContent":["import React from \"react\";\r\nimport DatePicker from \"../../../build/index\";\r\nimport { Link } from \"gatsby\";\r\n\r\n//other types\r\nimport InputIcon from \"../../../components/input_icon\";\r\nimport Icon from \"../../../components/icon\";\r\nimport Button from \"../../../components/button\";\r\n\r\nexport default function Doc({ language, otherProps, translate }) {\r\n  function code(component, string, customComponent) {\r\n    return `import DatePicker from \"react-multi-date-picker\"${\r\n      language === \"en\"\r\n        ? component\r\n          ? `\r\n${component}`\r\n          : \"\"\r\n        : `\r\nimport persian from \"react-date-object/calendars/persian\"\r\nimport persian_fa from \"react-date-object/locales/persian_fa\"${\r\n            component\r\n              ? `\r\n${component}`\r\n              : \"\"\r\n          }`\r\n    }\r\n\r\nexport default function Example() {\r\n  return (\r\n    ${string}\r\n    ${\r\n      language === \"en\"\r\n        ? \"/>\"\r\n        : `  calendar={persian}\r\n      locale={persian_fa}\r\n      calendarPosition=\"bottom-left\"\r\n    />`\r\n    }\r\n  )\r\n}${\r\n      customComponent\r\n        ? `\r\n\r\n${customComponent}`\r\n        : \"\"\r\n    }`;\r\n  }\r\n\r\n  const descriptions = {\r\n    title: \"Descriptions\",\r\n    description: \"types_v2\",\r\n    jsx: <Link to=\"../v2.x/types/\">v2.x {translate(\"Types\")}</Link>,\r\n  };\r\n\r\n  const inputIcon = {\r\n    title: \"Input-Icon\",\r\n    code: code(\r\n      `import InputIcon from \"react-multi-date-picker/components/input_icon\"`,\r\n      `<DatePicker \r\n      render={<InputIcon/>}`\r\n    ),\r\n    jsx: <DatePicker render={<InputIcon />} {...otherProps} />,\r\n  };\r\n\r\n  const icon = {\r\n    title: \"Icon\",\r\n    code: code(\r\n      `import Icon from \"react-multi-date-picker/components/icon\"`,\r\n      `<DatePicker \r\n      render={<Icon/>}`\r\n    ),\r\n    jsx: <DatePicker render={<Icon />} {...otherProps} />,\r\n  };\r\n\r\n  const button = {\r\n    title: \"Button\",\r\n    code: code(\r\n      `import Button from \"react-multi-date-picker/components/button\"`,\r\n      `<DatePicker \r\n      render={<Button/>}`\r\n    ),\r\n    jsx: <DatePicker render={<Button />} {...otherProps} />,\r\n  };\r\n\r\n  const customFunction = {\r\n    title: \"Custom (function)\",\r\n    code: code(\r\n      ``,\r\n      `<DatePicker\r\n      value=\"2020/10/19\"\r\n      render={(value, openCalendar) => {\r\n        return (\r\n          <button onClick={openCalendar}>\r\n            {value}\r\n          </button>\r\n        )\r\n      }}`\r\n    ),\r\n    jsx: (\r\n      <DatePicker\r\n        value=\"2020/10/19\"\r\n        render={(value, openCalendar) => {\r\n          return <button onClick={openCalendar}>{value}</button>;\r\n        }}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const customComponent = {\r\n    title: \"Custom (component)\",\r\n    code: code(\r\n      `import React from \"react\"`,\r\n      `<DatePicker\r\n      value=\"2020/10/19\"\r\n      render={<CustomComponent />}`,\r\n      `class CustomComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <button onClick={this.props.openCalendar}>\r\n        {this.props.value}\r\n      </button >\r\n    )\r\n  }\r\n}`\r\n    ),\r\n    jsx: (\r\n      <DatePicker\r\n        value=\"2020/10/19\"\r\n        render={<CustomComponent />}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const customComponentInput = {\r\n    title: \"Custom (input)\",\r\n    description: \"custom_input\",\r\n    code: code(\r\n      \"\",\r\n      `<DatePicker\r\n      render={<CustomInput />}`,\r\n      `function CustomInput({ openCalendar, value, handleValueChange }) {\r\n  return (\r\n    <input\r\n      onFocus={openCalendar}\r\n      value={value}\r\n      onChange={handleValueChange}\r\n    />\r\n  )\r\n}`\r\n    ),\r\n    jsx: <DatePicker render={<CustomInput />} {...otherProps} />,\r\n  };\r\n  const multipleDescription = {\r\n    title: \"Multiple & Range\",\r\n    description: \"multiple_range_v3\",\r\n  };\r\n  const multiple = {\r\n    title: \"Custom (multiple mode)\",\r\n    code: code(\r\n      \"\",\r\n      `<DatePicker\r\n      multiple\r\n      render={<CustomMultipleInput />}`,\r\n      `function CustomMultipleInput({openCalendar, value}) {\r\n  return (\r\n    <input\r\n      onFocus={openCalendar}\r\n      value={value}\r\n      readOnly\r\n    />\r\n  )\r\n}`\r\n    ),\r\n    jsx: (\r\n      <DatePicker multiple render={<CustomMultipleInput />} {...otherProps} />\r\n    ),\r\n  };\r\n\r\n  const range = {\r\n    title: \"Custom (range mode)\",\r\n    code: code(\r\n      \"\",\r\n      `<DatePicker\r\n      range\r\n      eachDaysInRange\r\n      render={<CustomRangeInput />}`,\r\n      `function CustomRangeInput({openCalendar, value}) {\r\n  let from = value[0] || \"\"\r\n  let to = value[1] || \"\"\r\n  \r\n  value = from && to ? ${\r\n    language === \"en\"\r\n      ? `\"from \" + from + \", to \" + to`\r\n      : `\"از \" + from + \"، تا \" + to\"`\r\n  } : from\r\n  \r\n  return (\r\n    <input\r\n      onFocus={openCalendar}\r\n      value={value}\r\n      readOnly\r\n    />\r\n  )\r\n}`\r\n    ),\r\n    jsx: (\r\n      <DatePicker\r\n        range\r\n        eachDaysInRange\r\n        render={<CustomRangeInput />}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return [\r\n    descriptions,\r\n    inputIcon,\r\n    icon,\r\n    button,\r\n    customFunction,\r\n    customComponent,\r\n    customComponentInput,\r\n    multipleDescription,\r\n    multiple,\r\n    range,\r\n  ];\r\n\r\n  function CustomRangeInput({ openCalendar, value }) {\r\n    let from = value[0] || \"\";\r\n    let to = value[1] || \"\";\r\n\r\n    value =\r\n      from && to\r\n        ? language === \"en\"\r\n          ? `from ${from}, to ${to}`\r\n          : `از ${from}، تا ${to}`\r\n        : from;\r\n\r\n    return <input onFocus={openCalendar} value={value} readOnly />;\r\n  }\r\n}\r\n\r\nfunction CustomMultipleInput({ openCalendar, value }) {\r\n  return <input onFocus={openCalendar} value={value} readOnly />;\r\n}\r\n\r\nclass CustomComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <button onClick={this.props.openCalendar}>{this.props.value}</button>\r\n    );\r\n  }\r\n}\r\n\r\nfunction CustomInput({ openCalendar, value, handleValueChange }) {\r\n  return (\r\n    <input onFocus={openCalendar} value={value} onChange={handleValueChange} />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Layout from \"../components/layout/layout\";\r\nimport doc from \"../docs/types\";\r\n\r\nexport default function Types({ pageContext }) {\r\n  const language = pageContext.language || \"en\";\r\n\r\n  return <Layout language={language} doc={doc} />;\r\n}\r\n"],"sourceRoot":""}