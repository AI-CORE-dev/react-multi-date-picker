{"version":3,"sources":["webpack://date-picker/./src/docs/types.js","webpack://date-picker/./src/pages/types.js"],"names":["translate","language","otherProps","singleDescription","title","jsx","input","code","type","inputIcon","value","render","stringDate","openCalendar","onClick","CustomComponent","description","CustomInput","multiple","CustomMultipleInput","range","eachDaysInRange","CustomRangeInput","stringDates","from","to","onFocus","readOnly","join","this","props","React","handleValueChange","onChange","Types","pageContext","doc","types"],"mappings":"uMAGe,SAAS,EAACA,EAAWC,EAAUC,GAC5C,IAAMC,EAAoB,CACxBC,MAAO,QACPC,IAAK,0BACH,6CACA,wCACA,oCACA,kCACA,sCAIEC,EAAQ,CACZF,MAAO,QACPG,KAAK,mCAGLF,IAAK,gBAAC,KAAD,eACHG,KAAK,SACDN,KAIFO,EAAY,CAChBL,MAAO,aACPG,KAAK,yCAGLF,IAAK,gBAAC,KAAD,eACHG,KAAK,cACDN,KA6KR,MAAO,CACLC,EACAG,EA3Ka,CACbF,MAAO,SACPG,KAAK,oCAGLF,IAAK,gBAAC,KAAD,eACHG,KAAK,UACDN,KAsKNO,EAlKW,CACXL,MAAO,OACPG,KAAK,mCAGLF,IAAK,gBAAC,KAAD,eACHG,KAAK,QACDN,KAIe,CACrBE,MAAO,oBACPG,KAAK,6MAWLF,IAAK,gBAAC,KAAD,eACHK,MAAM,aACNF,KAAK,SACLG,OAAQ,SAACC,EAAYC,GACnB,OACE,0BAAQC,QAASD,GACdD,KAIHV,KAIgB,CACtBE,MAAO,qBACPG,KAAK,uUAqBLF,IAAK,gBAAC,KAAD,eACHK,MAAM,aACNF,KAAK,SACLG,OAAQ,gBAACI,EAAD,OACJb,KAIqB,CAC3BE,MAAO,iBACPY,YAAa,eACbT,KAAK,2SAgBLF,IAAK,gBAAC,KAAD,eACHG,KAAK,SACLG,OAAQ,gBAACM,EAAD,OACJf,KAGoB,CAC1BE,MAAO,mBACPY,YAAa,kBAEE,CACfZ,MAAO,yBACPG,KAAK,2SAiBLF,IAAK,gBAAC,KAAD,eACHa,UAAQ,EACRV,KAAK,SACLG,OAAQ,gBAACQ,EAAD,OACJjB,KAIM,CACZE,MAAO,sBACPG,KAAK,0LAKiC,OAAbN,EAAoB,2BAA6B,0BALtE,0NAsBJI,IAAK,gBAAC,KAAD,eACHe,OAAK,EACLC,iBAAe,EACfb,KAAK,SACLG,OAAQ,gBAACW,EAAD,OACJpB,MAkBR,SAASoB,EAAT,GAA0D,IAA9BT,EAA6B,EAA7BA,aAAcU,EAAe,EAAfA,YACpCC,EAAOD,EAAY,IAAM,GACzBE,EAAKF,EAAY,IAAM,GACvBb,EAAQc,GAAQC,EAAmB,OAAbxB,EAAA,QAChBuB,EADgB,QACJC,EADI,MAElBD,EAFkB,QAENC,EAChBD,EAEJ,OACE,yBACEE,QAASb,EACTH,MAAOA,EACPiB,UAAQ,KAMhB,SAASR,EAAT,GAA6D,IAA9BN,EAA6B,EAA7BA,aAAcU,EAAe,EAAfA,YAC3C,OACE,yBACEG,QAASb,EACTH,MAAOa,EAAYK,KAAK,MACxBD,UAAQ,I,IAKRZ,E,6FACJJ,OAAA,WACE,OACE,0BAAQG,QAASe,KAAKC,MAAMjB,cACzBgB,KAAKC,MAAMlB,a,GAJUmB,aAU9B,SAASd,EAAT,GAAuE,IAAhDJ,EAA+C,EAA/CA,aAAcD,EAAiC,EAAjCA,WAAYoB,EAAqB,EAArBA,kBAC/C,OACE,yBACEN,QAASb,EACTH,MAAOE,EACPqB,SAAUD,ICnQD,SAASE,EAAT,GAAiC,IACxCjC,EADuC,EAAfkC,YACDlC,UAAY,KAEzC,OACE,gBAAC,IAAD,CAAQA,SAAUA,EAAUmC,IAAKC","file":"component---src-pages-types-js-70ad38cd96d197be6521.js","sourcesContent":["import React from \"react\"\r\nimport DatePicker from \"../../../build/index\"\r\n\r\nexport default function (translate, language, otherProps) {\r\n  const singleDescription = {\r\n    title: \"Types\",\r\n    jsx: <ul>\r\n      <li>input (default)</li>\r\n      <li>input-icon</li>\r\n      <li>button</li>\r\n      <li>icon</li>\r\n      <li>custom</li>\r\n    </ul>\r\n  }\r\n\r\n  const input = {\r\n    title: \"Input\",\r\n    code: `<DatePicker \r\n  type=\"input\"\r\n/>`,\r\n    jsx: <DatePicker\r\n      type=\"input\"\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  const inputIcon = {\r\n    title: \"Input-Icon\",\r\n    code: `<DatePicker \r\n  type=\"input-icon\" \r\n/>`,\r\n    jsx: <DatePicker\r\n      type=\"input-icon\"\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  const button = {\r\n    title: \"Button\",\r\n    code: `<DatePicker \r\n  type=\"button\"\r\n/>`,\r\n    jsx: <DatePicker\r\n      type=\"button\"\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  const icon = {\r\n    title: \"Icon\",\r\n    code: `<DatePicker \r\n  type=\"icon\" \r\n/>`,\r\n    jsx: <DatePicker\r\n      type=\"icon\"\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  const customFunction = {\r\n    title: \"Custom (function)\",\r\n    code: `<DatePicker\r\n  value=\"2020/10/19\"\r\n  type=\"custom\"\r\n  render={(stringDate, openCalendar) => {\r\n    return (\r\n      <button onClick={openCalendar}>\r\n        {stringDate}\r\n      </button>\r\n    )\r\n  }}\r\n/>`,\r\n    jsx: <DatePicker\r\n      value=\"2020/10/19\"\r\n      type=\"custom\"\r\n      render={(stringDate, openCalendar) => {\r\n        return (\r\n          <button onClick={openCalendar}>\r\n            {stringDate}\r\n          </button>\r\n        )\r\n      }}\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  const customComponent = {\r\n    title: \"Custom (component)\",\r\n    code: `import React from \"react\"\r\n.\r\n.\r\n.\r\nclass CustomComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <button onClick={this.props.openCalendar}>\r\n        {this.props.stringDate}\r\n      </button >\r\n    )\r\n  }\r\n}\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value=\"2020/10/19\"\r\n  type=\"custom\"\r\n  render={<CustomComponent />}\r\n/>`,\r\n    jsx: <DatePicker\r\n      value=\"2020/10/19\"\r\n      type=\"custom\"\r\n      render={<CustomComponent />}\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  const customComponentInput = {\r\n    title: \"Custom (input)\",\r\n    description: \"custom_input\",\r\n    code: `import React from \"react\"\r\n\r\nfunction CustomInput({ openCalendar, stringDate, handleValueChange }) {\r\n  return (\r\n    <input\r\n      onFocus={openCalendar}\r\n      value={stringDate}\r\n      onChange={handleValueChange}\r\n    />\r\n  )\r\n}\r\n\r\n<DatePicker\r\n  type=\"custom\"\r\n  render={<CustomInput />}\r\n/>`,\r\n    jsx: <DatePicker\r\n      type=\"custom\"\r\n      render={<CustomInput />}\r\n      {...otherProps}\r\n    />\r\n  }\r\n  const multipleDescription = {\r\n    title: \"Multiple & Range\",\r\n    description: \"multiple_range\"\r\n  }\r\n  const multiple = {\r\n    title: \"Custom (multiple mode)\",\r\n    code: `import React from \"react\"\r\n\r\nfunction CustomMultipleInput({openCalendar, stringDates}) {\r\n  return (\r\n    <input\r\n      onFocus={openCalendar}\r\n      value={stringDates.join(\", \")}\r\n      readOnly\r\n    />\r\n  )\r\n}\r\n\r\n<DatePicker\r\n  multiple\r\n  type=\"custom\"\r\n  render={<CustomMultipleInput />}\r\n/>`,\r\n    jsx: <DatePicker\r\n      multiple\r\n      type=\"custom\"\r\n      render={<CustomMultipleInput />}\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  const range = {\r\n    title: \"Custom (range mode)\",\r\n    code: `import React from \"react\"\r\n\r\nfunction CustomRangeInput({openCalendar, stringDates}) {\r\n  let from = stringDates[0] || \"\"\r\n  let to = stringDates[1] || \"\"\r\n  let value = from && to ? ${language === \"en\" ? \"`from ${from}, to ${to}`\" : \"`از ${from}، تا ${to}`\"} : from\r\n  \r\n  return (\r\n    <input\r\n      onFocus={openCalendar}\r\n      value={value}\r\n      readOnly\r\n    />\r\n  )\r\n}\r\n\r\n<DatePicker\r\n  range\r\n  eachDaysInRange\r\n  type=\"custom\"\r\n  render={<CustomRangeInput />}\r\n/>`,\r\n    jsx: <DatePicker\r\n      range\r\n      eachDaysInRange\r\n      type=\"custom\"\r\n      render={<CustomRangeInput />}\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  return [\r\n    singleDescription,\r\n    input,\r\n    button,\r\n    inputIcon,\r\n    icon,\r\n    customFunction,\r\n    customComponent,\r\n    customComponentInput,\r\n    multipleDescription,\r\n    multiple,\r\n    range\r\n  ]\r\n\r\n  function CustomRangeInput({ openCalendar, stringDates }) {\r\n    let from = stringDates[0] || \"\"\r\n    let to = stringDates[1] || \"\"\r\n    let value = from && to ? (language === \"en\" ?\r\n      `from ${from}, to ${to}` :\r\n      `از ${from}، تا ${to}`\r\n    ) : from\r\n\r\n    return (\r\n      <input\r\n        onFocus={openCalendar}\r\n        value={value}\r\n        readOnly\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nfunction CustomMultipleInput({ openCalendar, stringDates }) {\r\n  return (\r\n    <input\r\n      onFocus={openCalendar}\r\n      value={stringDates.join(\", \")}\r\n      readOnly\r\n    />\r\n  )\r\n}\r\n\r\nclass CustomComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <button onClick={this.props.openCalendar}>\r\n        {this.props.stringDate}\r\n      </button >\r\n    )\r\n  }\r\n}\r\n\r\nfunction CustomInput({ openCalendar, stringDate, handleValueChange }) {\r\n  return (\r\n    <input\r\n      onFocus={openCalendar}\r\n      value={stringDate}\r\n      onChange={handleValueChange}\r\n    />\r\n  )\r\n}","import React from \"react\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport types from \"../docs/types\"\r\n\r\nexport default function Types({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={types} />\r\n  )\r\n}"],"sourceRoot":""}