{"version":3,"sources":["webpack://date-picker/./src/docs/map_days.js","webpack://date-picker/./src/pages/map-days.js"],"names":["translate","language","otherProps","title","jsx","className","dangerouslySetInnerHTML","__html","style","color","mapDays","date","today","day","code","selectedDate","currentMonth","isSameDate","props","borderRadius","backgroundColor","month","index","fontWeight","border","description","includes","weekDay","disabled","onClick","alert","hidden","result","dayOfBeginning","MapDays","pageContext","doc"],"mappings":"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","file":"component---src-pages-map-days-js-d3a77ec348d7eaacfc4d.js","sourcesContent":["import React from \"react\"\r\nimport DatePicker, { Calendar } from \"../../../build/index\"\r\n\r\nexport default function (translate, language, otherProps) {\r\n  const description = {\r\n    title: \"Descriptions\",\r\n    jsx: <div>\r\n      <p>{translate(\"map_days_description_1\")}</p>\r\n      <p>{translate(\"map_days_description_2\")}</p>\r\n      <pre>\r\n        <code className=\"language-jsx\">\r\n          {\r\n            `<DatePicker\r\n  mapDays={object => {\r\n    return { props }\r\n  }}\r\n/>`\r\n          }\r\n        </code>\r\n      </pre>\r\n      <p>{translate(\"map_days_description_3\")}</p>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>{translate(\"Property\")}</th>\r\n            <th>{translate(\"Type\")}</th>\r\n            <th>{translate(\"Descriptions\")}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>date</td>\r\n            <td>DateObject</td>\r\n            <td>{translate(\"map_days_description_4\")}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>today</td>\r\n            <td>DateObject</td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td>selectedDate</td>\r\n            <td>{translate(\"DateObject or Array\")}</td>\r\n            <td>{translate(\"map_days_description_5\")}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>currentMonth</td>\r\n            <td>Object</td>\r\n            <td><div dangerouslySetInnerHTML={{ __html: translate(\"map_days_description_6\") }}></div></td>\r\n          </tr>\r\n          <tr>\r\n            <td>isSameDate</td>\r\n            <td>Function</td>\r\n            <td>{translate(\"map_days_description_7\")}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <p>{translate(\"map_days_description_8\")}</p>\r\n      <pre><code className=\"language-jsx\">{`{ date, today, selectedDate, currentMonth, isSameDate }`}</code></pre>\r\n      <p style={{ color: \"red\" }}>{translate(\"map_days_description_9\")}</p>\r\n      <p>{translate(\"map_days_description_10\")}</p>\r\n      <pre>\r\n        <code className=\"language-jsx\">\r\n          {`<Calendar\r\n  mapDays={({ date, today }) => {\r\n    date.day = today.day\r\n  }}\r\n${language === \"en\" ? \"/>\" : `  calendar=\"persian\"\r\n  locale=\"fa\"\r\n/>`}`}\r\n        </code>\r\n      </pre>\r\n      <Calendar\r\n        mapDays={({ date, today }) => {\r\n          date.day = today.day\r\n        }}\r\n        {...otherProps}\r\n      />\r\n      <p>{translate(\"map_days_description_11\")}</p>\r\n      <ul>\r\n        <li>disabled</li>\r\n        <li>hidden</li>\r\n      </ul>\r\n      <p>{translate(\"map_days_description_12\")}</p>\r\n    </div>\r\n  }\r\n\r\n  const style = {\r\n    title: \"Styling Days\",\r\n    code: `<DatePicker\r\n  mapDays={({ date, today, selectedDate, currentMonth, isSameDate }) => {\r\n    let props = {}\r\n    \r\n    props.style = {\r\n      borderRadius: \"3px\",\r\n      backgroundColor: date.month.index === currentMonth.index ? \"#ccc\" : \"\"\r\n    }\r\n\r\n    if (isSameDate(date, today)) props.style.color = \"green\"\r\n    if (isSameDate(date, selectedDate)) props.style = {\r\n      ...props.style,\r\n      color: \"#0074d9\",\r\n      backgroundColor: \"#a5a5a5\",\r\n      fontWeight: \"bold\",\r\n      border: \"1px solid #777\"\r\n    }\r\n\r\n    return props\r\n  }}\r\n/>`,\r\n    jsx: <DatePicker\r\n      mapDays={({ date, today, selectedDate, currentMonth, isSameDate }) => {\r\n        let props = {}\r\n\r\n        props.style = {\r\n          borderRadius: \"3px\",\r\n          backgroundColor: date.month.index === currentMonth.index ? \"#ccc\" : \"\"\r\n        }\r\n\r\n        if (isSameDate(date, today)) props.style.color = \"green\"\r\n        if (isSameDate(date, selectedDate)) props.style = {\r\n          ...props.style,\r\n          color: \"#0074d9\",\r\n          backgroundColor: \"#a5a5a5\",\r\n          fontWeight: \"bold\",\r\n          border: \"1px solid #777\"\r\n        }\r\n\r\n        return props\r\n      }}\r\n      {...otherProps}\r\n    />\r\n  }\r\n  const weekends = {\r\n    title: \"Styling Weekends\",\r\n    description: \"map_days_weekends\",\r\n    code: `<DatePicker\r\n  mapDays={({ date }) => {\r\n    let props = {}\r\n    let isWeekend = ${language === \"en\" ? \"[0, 6].includes(date.weekDay.index)\" : \"date.weekDay.index === 6\"}\r\n    \r\n    if (isWeekend) props.className = \"highlight highlight-red\"\r\n    \r\n    return props\r\n  }}\r\n/>`,\r\n    jsx: <DatePicker\r\n      mapDays={({ date }) => {\r\n        let props = {}\r\n        let isWeekend = (language === \"en\" ? [0, 6] : [6]).includes(date.weekDay.index)\r\n\r\n        if (isWeekend) props.className = \"highlight highlight-red\"\r\n\r\n        return props\r\n      }}\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  const highlight = {\r\n    title: \"Custom Highlight\",\r\n    code: `<DatePicker\r\n  mapDays={({ date }) => {\r\n    let color\r\n    \r\n    if ([4, 5, 6, 7].includes(date.day)) color = \"green\"\r\n    if ([11, 12, 13, 14].includes(date.day)) color = \"red\"\r\n    \r\n    if (color) return { className: \"highlight highlight-\" + color }\r\n  }}\r\n/>`,\r\n    jsx: <DatePicker\r\n      mapDays={({ date }) => {\r\n        let color\r\n\r\n        if ([4, 5, 6, 7].includes(date.day)) color = \"green\"\r\n        if ([11, 12, 13, 14].includes(date.day)) color = \"red\"\r\n\r\n        if (color) return { className: `highlight highlight-${color}` }\r\n      }}\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  const disable = {\r\n    title: \"Disabling Days\",\r\n    code: `<DatePicker\r\n  mapDays={({ date }) => {\r\n    let isWeekend = [0, 6].includes(date.weekDay.index)\r\n    \r\n    if (isWeekend) return {\r\n      disabled: true,\r\n      style: { color: \"#ccc\" },\r\n      onClick: () => alert(\"${translate(\"weekends are disabled\")}\")\r\n    }\r\n  }}\r\n/>`,\r\n    jsx: <DatePicker\r\n      mapDays={({ date }) => {\r\n        let isWeekend = [0, 6].includes(date.weekDay.index)\r\n\r\n        if (isWeekend) return {\r\n          disabled: true,\r\n          style: { color: \"#ccc\" },\r\n          onClick: () => alert(translate(\"weekends are disabled\"))\r\n        }\r\n      }}\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  const hide = {\r\n    title: \"Hiding Days\",\r\n    code: `<DatePicker\r\n  mapDays={({ date }) => {\r\n    let props = {}\r\n    \r\n    if ([5, 10, 15, 20, 25].includes(date.day)) props.hidden = true\r\n    \r\n    return props\r\n  }}\r\n/>`,\r\n    jsx: <DatePicker\r\n      mapDays={({ date }) => {\r\n        let props = {}\r\n\r\n        if ([5, 10, 15, 20, 25].includes(date.day)) props.hidden = true\r\n\r\n        return props\r\n      }}\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  const title = {\r\n    title: \"Adding Tiltle to Days\",\r\n    description: \"map_days_title\",\r\n    code: `<DatePicker\r\n  mapDays={({ date, today }) => {\r\n    let props = {}\r\n    let result = date.dayOfBeginning - today.dayOfBeginning\r\n    \r\n    if (result === -1) props.title = \"${translate(\"Yesterday\")}\"\r\n    if (result === 0) props.title = \"${translate(\"Today\")}\"\r\n    if (result === 1) props.title = \"${translate(\"Tomorrow\")}\"\r\n    \r\n    return props\r\n  }}\r\n/>`,\r\n    jsx: <DatePicker\r\n      mapDays={({ date, today }) => {\r\n        let props = {}\r\n        let result = date.dayOfBeginning - today.dayOfBeginning\r\n\r\n        if (result === -1) props.title = translate(\"Yesterday\")\r\n        if (result === 0) props.title = translate(\"Today\")\r\n        if (result === 1) props.title = translate(\"Tomorrow\")\r\n\r\n        return props\r\n      }}\r\n      {...otherProps}\r\n    />\r\n  }\r\n\r\n  return [\r\n    description,\r\n    style,\r\n    weekends,\r\n    highlight,\r\n    disable,\r\n    hide,\r\n    title\r\n  ]\r\n}","import React from \"react\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport mapDays from \"../docs/map_days\"\r\n\r\nexport default function MapDays({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={mapDays} />\r\n  )\r\n}"],"sourceRoot":""}