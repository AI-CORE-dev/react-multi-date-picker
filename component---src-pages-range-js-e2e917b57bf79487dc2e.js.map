{"version":3,"sources":["webpack://date-picker/./src/docs/range.js","webpack://date-picker/./src/pages/range.js"],"names":["RangeMode","translate","language","otherProps","useState","DateObject","calendar","subtract","add","values","setValues","dates","setDates","allDates","setAllDates","title","description","code","jsx","value","onChange","range","plugins","position","fixMainPosition","minDate","toFirstOfMonth","maxDate","toLastOfMonth","dateObjects","getAllDatesInRange","eachDaysInRange","length","format","map","date","index","key","onlyMonthPicker","onlyYearPicker","Range","pageContext","doc"],"mappings":"uMAOe,SAASA,EAAUC,EAAWC,EAAUC,GACrD,OAA4BC,cAAS,CACnC,IAAIC,KAAW,CACbC,SAAuB,OAAbJ,EAAoB,UAAY,cACzCK,SAAS,EAAG,QACf,IAAIF,KAAW,CACbC,SAAuB,OAAbJ,EAAoB,UAAY,cACzCM,IAAI,EAAG,UANLC,EAAP,KAAeC,EAAf,KASA,GAA0BN,cAAS,IAA5BO,EAAP,KAAcC,EAAd,KACA,GAAgCR,cAAS,IAAlCS,EAAP,KAAiBC,EAAjB,KAwLA,MAAO,CAtLO,CACZC,MAAO,aACPC,YAAa,aACbC,KAAK,6DAEQ,OAAbf,EAAA,0BAAgD,IAF5C,6CAKS,OAAbA,EAAA,0BAAgD,IAL5C,oGAgBJgB,IACE,gBAAC,KAAD,eAAYC,MAAOV,EAAQW,SAAUV,EAAWW,OAAK,GAAKlB,KAI5C,CAChBY,MAAO,YACPC,YAAa,mBACbC,KAAK,mIAOoB,OAAbf,EAAA,mBAAyC,IAPjD,gBAUJgB,IACE,gBAAC,KAAD,eACEG,OAAK,EACLC,QAAS,CACP,gBAAC,IAAD,CAAWC,SAAuB,OAAbrB,EAAoB,OAAS,YAEhDC,KAKc,CACtBY,MAAO,gCACPC,YAAa,qBACbC,KAAK,6XAeU,OAAbf,EAAA,0BAAgD,IAf9C,qDAkBW,OAAbA,EAAA,0BAAgD,IAlB9C,iMA0Ba,OAAbA,EAAA,mBAAyC,IA1BzC,mBA8BS,OAAbA,EACI,KADJ,kFA9BI,0QAiDJgB,IACE,2BACE,gBAAC,KAAD,eACEG,OAAK,EACLE,SAAuB,OAAbrB,EAAoB,WAAa,YAC3CsB,iBAAe,EACfL,MAAOR,EACPc,QAAS,IAAIpB,KAAW,CACtBC,SAAuB,OAAbJ,EAAoB,YAAc,YAC3CwB,iBACHC,QAAS,IAAItB,KAAW,CACtBC,SAAuB,OAAbJ,EAAoB,YAAc,YAC3C0B,gBACHR,SAAU,SAACS,GACTjB,EAASiB,GACTf,GAAYgB,QAAmBD,KAEjCP,QAAS,CACP,gBAAC,IAAD,CACES,iBAAe,EACfR,SAAuB,OAAbrB,EAAoB,OAAS,YAGvCC,IAELQ,EAAMqB,OAAS,GACd,2BACE,0BACgB,OAAb9B,EAAA,qBACwBS,EAAM,GAAGsB,SADjC,QACiDtB,EAAM,GAAGsB,SAD1D,sBAEyBtB,EAAM,GAAGsB,SAFlC,MAEgDtB,EAAM,GAAGsB,SAH5D,KAMA,0BACGpB,EAASqB,KAAI,SAACC,EAAMC,GAAP,OACZ,sBAAIC,IAAKD,GAAQD,EAAKF,iBASlB,CAChBlB,MAAO,qBACPE,KAAK,qFAOLC,IACE,gBAAC,KAAD,eACEoB,iBAAe,EACfjB,OAAK,EACLC,QAAS,CAAC,gBAAC,IAAD,QACNnB,KAKO,CACfY,MAAO,oBACPE,KAAK,oFAOLC,IACE,gBAAC,KAAD,eACEqB,gBAAc,EACdlB,OAAK,EACLC,QAAS,CAAC,gBAAC,IAAD,QACNnB,MCjMG,SAASqC,EAAT,GAAiC,IACxCtC,EADuC,EAAfuC,YACDvC,UAAY,KAEzC,OACE,gBAAC,IAAD,CAAQA,SAAUA,EAAUwC,IAAKrB","file":"component---src-pages-range-js-e2e917b57bf79487dc2e.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport DatePicker, {\r\n  DateObject,\r\n  getAllDatesInRange,\r\n} from \"../../../build/index\";\r\nimport DatePanel from \"../../../plugins/date_panel\";\r\n\r\nexport default function RangeMode(translate, language, otherProps) {\r\n  const [values, setValues] = useState([\r\n    new DateObject({\r\n      calendar: language === \"fa\" ? \"persian\" : \"gregorian\",\r\n    }).subtract(4, \"days\"),\r\n    new DateObject({\r\n      calendar: language === \"fa\" ? \"persian\" : \"gregorian\",\r\n    }).add(4, \"days\"),\r\n  ]);\r\n\r\n  const [dates, setDates] = useState([]);\r\n  const [allDates, setAllDates] = useState([]);\r\n\r\n  const range = {\r\n    title: \"Range Mode\",\r\n    description: \"range_mode\",\r\n    code: `const [values, setValues] = useState([\r\n  new DateObject(${\r\n    language === \"fa\" ? `{ calendar: \"persian\" }` : \"\"\r\n  }).subtract(4, \"days\"),\r\n  new DateObject(${\r\n    language === \"fa\" ? `{ calendar: \"persian\" }` : \"\"\r\n  }).add(4, \"days\")\r\n])\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  value={values}\r\n  onChange={setValues}\r\n  range\r\n/>`,\r\n    jsx: (\r\n      <DatePicker value={values} onChange={setValues} range {...otherProps} />\r\n    ),\r\n  };\r\n\r\n  const datePanel = {\r\n    title: \"DatePanel\",\r\n    description: \"date_panel_range\",\r\n    code: `import DatePanel from \"react-multi-date-picker/plugins/date_panel\"\r\n.\r\n.\r\n.\r\n<DatePicker\r\n  range\r\n  plugins={[\r\n    <DatePanel${language === \"fa\" ? ` position=\"left\"` : \"\"} />\r\n  ]}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        range\r\n        plugins={[\r\n          <DatePanel position={language === \"fa\" ? \"left\" : \"right\"} />,\r\n        ]}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const eachDaysInRange = {\r\n    title: \"Displaying Each Days In Range\",\r\n    description: \"each_days_in_range\",\r\n    code: `import DatePicker, { DateObject, getAllDatesInRange } from \"react-multi-date-picker\"\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\"\r\n.\r\n.\r\n.\r\nconst [dates, setDates] = useState([])\r\nconst [allDates, setAllDates] = useState([])\r\n\r\n<div>\r\n  <DatePicker\r\n    range\r\n    position=\"top-left\"\r\n    fixMainPosition\r\n    value={dates}\r\n    minDate={new DateObject(${\r\n      language === \"fa\" ? `{ calendar: \"persian\" }` : \"\"\r\n    }).toFirstOfMonth()}\r\n    maxDate={new DateObject(${\r\n      language === \"fa\" ? `{ calendar: \"persian\" }` : \"\"\r\n    }).toLastOfMonth()}\r\n    onChange={dateObjects => {\r\n      setDates(dateObjects)\r\n      setAllDates(getAllDatesInRange(dateObjects))\r\n    }}\r\n    plugins={[\r\n      <DatePanel eachDaysInRange${\r\n        language === \"fa\" ? ` position=\"left\"` : \"\"\r\n      } />\r\n    ]}\r\n  ${\r\n    language === \"en\"\r\n      ? \"/>\"\r\n      : `  calendar=\"persian\"\r\n    locale=\"fa\"\r\n    calendarPosition=\"auto-right\"\r\n  />`\r\n  }\r\n  {dates.length > 1 &&\r\n    <div>\r\n      <h5>\r\n        All Dates between {dates[0].format()} and {dates[1].format()}:\r\n      </h5>\r\n      <ul>\r\n        {allDates.map((date, index) => <li key={index}>{date.format()}</li>)}\r\n      </ul>\r\n    </div>\r\n  }\r\n</div>\r\n`,\r\n    jsx: (\r\n      <div>\r\n        <DatePicker\r\n          range\r\n          position={language === \"en\" ? \"top-left\" : \"top-right\"}\r\n          fixMainPosition\r\n          value={dates}\r\n          minDate={new DateObject({\r\n            calendar: language === \"en\" ? \"gregorian\" : \"persian\",\r\n          }).toFirstOfMonth()}\r\n          maxDate={new DateObject({\r\n            calendar: language === \"en\" ? \"gregorian\" : \"persian\",\r\n          }).toLastOfMonth()}\r\n          onChange={(dateObjects) => {\r\n            setDates(dateObjects);\r\n            setAllDates(getAllDatesInRange(dateObjects));\r\n          }}\r\n          plugins={[\r\n            <DatePanel\r\n              eachDaysInRange\r\n              position={language === \"fa\" ? \"left\" : \"right\"}\r\n            />,\r\n          ]}\r\n          {...otherProps}\r\n        />\r\n        {dates.length > 1 && (\r\n          <div>\r\n            <h5>\r\n              {language === \"en\"\r\n                ? `All Dates between ${dates[0].format()} and ${dates[1].format()}`\r\n                : `تمام روز های مابین ${dates[0].format()} و ${dates[1].format()}`}\r\n              :\r\n            </h5>\r\n            <ul>\r\n              {allDates.map((date, index) => (\r\n                <li key={index}>{date.format()}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  let monthPicker = {\r\n    title: \"Range Month Picker\",\r\n    code: `<DatePicker\r\n  onlyMonthPicker\r\n  range\r\n  plugins={[\r\n    <DatePanel />\r\n  ]}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        onlyMonthPicker\r\n        range\r\n        plugins={[<DatePanel />]}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  let yearPicker = {\r\n    title: \"Range Year Picker\",\r\n    code: `<DatePicker\r\n  onlyYearPicker\r\n  range\r\n  plugins={[\r\n    <DatePanel />\r\n  ]}\r\n/>`,\r\n    jsx: (\r\n      <DatePicker\r\n        onlyYearPicker\r\n        range\r\n        plugins={[<DatePanel />]}\r\n        {...otherProps}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return [range, datePanel, eachDaysInRange, monthPicker, yearPicker];\r\n}\r\n","import React from \"react\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport range from \"../docs/range\"\r\n\r\nexport default function Range({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={range} />\r\n  )\r\n}"],"sourceRoot":""}