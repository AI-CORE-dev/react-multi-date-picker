{"version":3,"sources":["webpack://date-picker/./src/docs/ref.js","webpack://date-picker/./src/pages/ref.js"],"names":["translate","language","otherProps","datePickerRef","useRef","ref","ref2","useState","visible","setVisible","visible2","setVisible2","shouldCloseCalendar","setShouldCloseCalendar","shouldCloseCalendar2","setShouldCloseCalendar2","DateObject","calendar","locale","date","setDate","calendarRef","title","description","code","jsx","onClick","current","openCalendar","style","margin","closeCalendar","value","placeholder","onOpen","onClose","setTimeout","refreshPosition","set","month","number","name","year","Ref","pageContext","doc"],"mappings":"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","file":"component---src-pages-ref-js-b697c1e52b95cfcc7f4a.js","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport DatePicker, { Calendar, DateObject } from \"../../../build/index\";\r\n\r\nexport default function (translate, language, otherProps) {\r\n  const datePickerRef = useRef();\r\n  const ref = useRef();\r\n  const ref2 = useRef();\r\n  const [visible, setVisible] = useState(false);\r\n  const [visible2, setVisible2] = useState(false);\r\n  const [shouldCloseCalendar, setShouldCloseCalendar] = useState(false);\r\n  const [shouldCloseCalendar2, setShouldCloseCalendar2] = useState(false);\r\n  const [date, setDate] = useState(\r\n    new DateObject({\r\n      calendar: language === \"en\" ? \"gregorian\" : \"persian\",\r\n      locale: language,\r\n    })\r\n  );\r\n  const calendarRef = useRef();\r\n\r\n  const description = {\r\n    title: \"Descriptions\",\r\n    description: \"forward_ref_description\",\r\n    code: `import React, { useRef } from \"react\"\r\nimport { Calendar } from \"react-multi-date-picker\"\r\n\r\nexport default function Example() {\r\n  const calendarRef = useRef()\r\n\r\n  return (\r\n    <Calendar ref={calendarRef} />\r\n  )\r\n}`,\r\n  };\r\n\r\n  const datePicker = {\r\n    title: \"Opene & Close Calendar By DatePicker Ref\",\r\n    description: \"date_picker_ref\",\r\n    code: `const datePickerRef = useRef()\r\n.\r\n.\r\n.\r\n<div>\r\n  <button\r\n    onClick={() => datePickerRef.current.openCalendar()}\r\n  >\r\n    ${translate(\"open\")}\r\n  </button>\r\n  <DatePicker \r\n    ref={datePickerRef} \r\n${\r\n  language === \"en\"\r\n    ? \"  >\"\r\n    : `    calendar=\"persian\"\r\n    locale=\"fa\"\r\n    calendarPosition=\"auto-right\"\r\n  >`\r\n}\r\n    <button\r\n      style={{ margin: \"5px\" }}\r\n      onClick={() => datePickerRef.current.closeCalendar()}\r\n    >\r\n      ${translate(\"close\")}\r\n    </button>\r\n  </DatePicker>\r\n</div>`,\r\n    jsx: (\r\n      <div>\r\n        <button onClick={() => datePickerRef.current.openCalendar()}>\r\n          {translate(\"open\")}\r\n        </button>\r\n        <DatePicker ref={datePickerRef} {...otherProps}>\r\n          <button\r\n            style={{ margin: \"5px\" }}\r\n            onClick={() => datePickerRef.current.closeCalendar()}\r\n          >\r\n            {translate(\"close\")}\r\n          </button>\r\n        </DatePicker>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const refresh = {\r\n    title: \"Refresh Position\",\r\n    description: \"refresh_position\",\r\n    code: `const ref = useRef()\r\nconst ref2 = useRef()\r\nconst [visible, setVisible] = useState(false)\r\nconst [visible2, setVisible2] = useState(false)\r\nconst [shouldCloseCalendar, setShouldCloseCalendar] = useState(false)\r\nconst [shouldCloseCalendar2, setShouldCloseCalendar2] = useState(false)\r\n.\r\n.\r\n.\r\n<div>\r\n  <h2>${translate(\"Example 1 (without using refresh position)\")} :</h2>\r\n  {visible && <span>${translate(\r\n    \"a demo text to force the datepicker to move forward!\"\r\n  )}</span>}\r\n  <DatePicker\r\n    value={{}}\r\n    placeholder=\"${translate(\"first click here\")}\"\r\n    ref={ref}\r\n    onOpen={() => setShouldCloseCalendar(false)}\r\n    onClose={() => shouldCloseCalendar}\r\n  ${\r\n    language === \"en\"\r\n      ? \"/>\"\r\n      : `  calendar=\"persian\"\r\n    locale=\"fa\"\r\n    calendarPosition=\"auto-right\"\r\n  />`\r\n  }\r\n  <button\r\n    onClick={() => {\r\n      if (!visible) {\r\n        setVisible(true)\r\n      } else {\r\n        setVisible(false)\r\n        setShouldCloseCalendar(true)\r\n        setTimeout(() => {\r\n          ref.current.closeCalendar()\r\n        }, 20);\r\n      }\r\n    }}\r\n  >\r\n    {visible ? \"${translate(\"refresh and close calendar\")}\" : \"${translate(\r\n      \"then click here\"\r\n    )}\"}\r\n  </button>\r\n  <h2>${translate(\"Example 2 (with using refresh position)\")} :</h2>\r\n  {visible2 && <span>${translate(\r\n    \"a demo text to force the datepicker to move forward!\"\r\n  )}</span>}\r\n  <DatePicker\r\n    value={{}}\r\n    placeholder=\"${translate(\"first click here\")}\"\r\n    ref={ref2}\r\n    onOpen={() => setShouldCloseCalendar2(false)}\r\n    onClose={() => shouldCloseCalendar2}\r\n  ${\r\n    language === \"en\"\r\n      ? \"/>\"\r\n      : `  calendar=\"persian\"\r\n    locale=\"fa\"\r\n    calendarPosition=\"auto-right\"\r\n  />`\r\n  }\r\n  <button\r\n    onClick={() => {\r\n      if (!visible2) {\r\n        setVisible2(true)\r\n        setTimeout(() => {\r\n          ref2.current.refreshPosition()\r\n        }, 20);\r\n      } else {\r\n        setVisible2(false)\r\n        setShouldCloseCalendar2(true)\r\n        setTimeout(() => {\r\n          ref2.current.closeCalendar()\r\n        }, 20);\r\n      }\r\n    }}\r\n  >\r\n    {visible2 ? \"${translate(\"refresh and close calendar\")}\" : \"${translate(\r\n      \"then click here\"\r\n    )}\"}      \r\n  </button>\r\n</div>`,\r\n    jsx: (\r\n      <div>\r\n        <h2>{translate(\"Example 1 (without using refresh position)\")} :</h2>\r\n        {visible && (\r\n          <span>\r\n            {translate(\"a demo text to force the datepicker to move forward!\")}\r\n          </span>\r\n        )}\r\n        <DatePicker\r\n          value={{}}\r\n          placeholder={translate(\"first click here\")}\r\n          ref={ref}\r\n          onOpen={() => setShouldCloseCalendar(false)}\r\n          onClose={() => shouldCloseCalendar}\r\n          {...otherProps}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            if (!visible) {\r\n              setVisible(true);\r\n            } else {\r\n              setVisible(false);\r\n              setShouldCloseCalendar(true);\r\n              setTimeout(() => {\r\n                ref.current.closeCalendar();\r\n              }, 20);\r\n            }\r\n          }}\r\n        >\r\n          {visible\r\n            ? translate(\"refresh and close calendar\")\r\n            : translate(\"then click here\")}\r\n        </button>\r\n        <h2>{translate(\"Example 2 (with using refresh position)\")} :</h2>\r\n        {visible2 && (\r\n          <span>\r\n            {translate(\"a demo text to force the datepicker to move forward!\")}\r\n          </span>\r\n        )}\r\n        <DatePicker\r\n          value={{}}\r\n          placeholder={translate(\"first click here\")}\r\n          ref={ref2}\r\n          onOpen={() => setShouldCloseCalendar2(false)}\r\n          onClose={() => shouldCloseCalendar2}\r\n          {...otherProps}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            if (!visible2) {\r\n              setVisible2(true);\r\n              setTimeout(() => {\r\n                ref2.current.refreshPosition();\r\n              }, 20);\r\n            } else {\r\n              setVisible2(false);\r\n              setShouldCloseCalendar2(true);\r\n              setTimeout(() => {\r\n                ref2.current.closeCalendar();\r\n              }, 20);\r\n            }\r\n          }}\r\n        >\r\n          {visible2\r\n            ? translate(\"refresh and close calendar\")\r\n            : translate(\"then click here\")}{\" \"}\r\n        </button>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const month = {\r\n    title: \"Manually Set Year And Month In Calendar\",\r\n    description: \"year_month_ref\",\r\n    code: `import React, { useRef, useState } from \"react\";\r\nimport { Calendar, DateObject } from \"react-multi-date-picker\";\r\n\r\nexport default function Example() {\r\n  const [date, setDate] = useState(\r\n    new DateObject(${\r\n      language === \"en\" ? \"\" : `{ calendar: \"persian\", locale: \"fa\" }`\r\n    })\r\n  );\r\n\r\n  const calendarRef = useRef();\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            let date = calendarRef.current.date;\r\n\r\n            calendarRef.current.set(\"month\", date.month.number + 1);\r\n\r\n            setDate(new DateObject(date));\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n        <span>{date.month.name}</span>\r\n        <button\r\n          onClick={() => {\r\n            let date = calendarRef.current.date;\r\n\r\n            calendarRef.current.set(\"month\", date.month.number - 1);\r\n\r\n            setDate(new DateObject(date));\r\n          }}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            let date = calendarRef.current.date;\r\n\r\n            calendarRef.current.set(\"year\", date.year + 1);\r\n\r\n            setDate(new DateObject(date));\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n        <span>{date.year}</span>\r\n        <button\r\n          onClick={() => {\r\n            let date = calendarRef.current.date;\r\n\r\n            calendarRef.current.set(\"year\", date.year - 1);\r\n\r\n            setDate(new DateObject(date));\r\n          }}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n      <Calendar \r\n        ref={calendarRef} \r\n      ${\r\n        language === \"en\"\r\n          ? \"/>\"\r\n          : `  calendar=\"persian\" \r\n        locale=\"fa\" \r\n      />`\r\n      }\r\n    </>\r\n  )\r\n}  `,\r\n    jsx: (\r\n      <>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              let date = calendarRef.current.date;\r\n\r\n              calendarRef.current.set(\"month\", date.month.number + 1);\r\n\r\n              setDate(new DateObject(date));\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n          <span>{date.month.name}</span>\r\n          <button\r\n            onClick={() => {\r\n              let date = calendarRef.current.date;\r\n\r\n              calendarRef.current.set(\"month\", date.month.number - 1);\r\n\r\n              setDate(new DateObject(date));\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              let date = calendarRef.current.date;\r\n\r\n              calendarRef.current.set(\"year\", date.year + 1);\r\n\r\n              setDate(new DateObject(date));\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n          <span>{date.year}</span>\r\n          <button\r\n            onClick={() => {\r\n              let date = calendarRef.current.date;\r\n\r\n              calendarRef.current.set(\"year\", date.year - 1);\r\n\r\n              setDate(new DateObject(date));\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n        </div>\r\n        <Calendar ref={calendarRef} {...otherProps} />\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return [description, datePicker, refresh, month];\r\n}\r\n","import React from \"react\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport ref from \"../docs/ref\"\r\n\r\nexport default function Ref({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={ref} />\r\n  )\r\n}"],"sourceRoot":""}